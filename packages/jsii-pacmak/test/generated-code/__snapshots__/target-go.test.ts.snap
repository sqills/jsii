// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/ 1`] = `
<root>
 ‚îó‚îÅ üìÅ go
    ‚îó‚îÅ üìÅ jcb
       ‚î£‚îÅ üìÑ go.mod
       ‚î£‚îÅ üìÅ internal
       ‚îÉ  ‚îó‚îÅ üìÑ types.go
       ‚î£‚îÅ üìÑ jcb.go
       ‚î£‚îÅ üìÑ jcb.init.go
       ‚î£‚îÅ üìÅ jsii
       ‚îÉ  ‚î£‚îÅ üìÑ jsii.go
       ‚îÉ  ‚îó‚îÅ üìÑ scope-jsii-calc-base-0.0.0.tgz
       ‚î£‚îÅ üìÑ LICENSE
       ‚î£‚îÅ üìÑ NOTICE
       ‚îó‚îÅ üìÑ version
`;

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/go/jcb/LICENSE 1`] = `

                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      "License" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      "Licensor" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      "Legal Entity" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      "control" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      "You" (or "Your") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      "Source" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      "Object" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a "NOTICE" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets "[]"
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same "printed page" as the copyright notice for easier
      identification within third-party archives.

   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
`;

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/go/jcb/NOTICE 1`] = `
jsii
Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

`;

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/go/jcb/go.mod 1`] = `
module github.com/aws/jsii/jsii-calc/go/jcb

go 1.18

require (
	github.com/aws/jsii-runtime-go v0.0.0
	github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2 v2.1.1
)

`;

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/go/jcb/internal/types.go 1`] = `
package internal
import (
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2"
)
type Type__scopejsiicalcbaseofbaseIVeryBaseInterface = scopejsiicalcbaseofbase.IVeryBaseInterface

`;

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/go/jcb/jcb.go 1`] = `
// An example direct dependency for jsii-calc.
package jcb

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jcb/jsii"

	"github.com/aws/jsii/jsii-calc/go/jcb/internal"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2"
)

// A base class.
type Base interface {
	TypeName() interface{}
}

// The jsii proxy struct for Base
type jsiiProxy_Base struct {
	_ byte // padding
}

func NewBase_Override(b Base) {
	_init_.Initialize()

	_jsii_.Create(
		"@scope/jsii-calc-base.Base",
		nil, // no parameters
		b,
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (b *jsiiProxy_Base) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		b,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Base from an Option[Base].
// You should never need to call this method directly.
func (j jsiiProxy_Base) FromOption__() Base {
	var j_ Base = &j
	return j_
}

type BaseProps struct {
	Foo scopejsiicalcbaseofbase.Very \`json:"foo"\`
	Bar _api_.String \`json:"bar"\`
}

// FromOption__ unwraps an BaseProps from an Option[BaseProps].
// You should never need to call this method directly.
func (b BaseProps) FromOption__() BaseProps {
	return b
}

type IBaseInterface interface {
	scopejsiicalcbaseofbase.IVeryBaseInterface
	Bar()
}

// The jsii proxy for IBaseInterface
type jsiiProxy_IBaseInterface struct {
	internal.Type__scopejsiicalcbaseofbaseIVeryBaseInterface
}

func (i *jsiiProxy_IBaseInterface) Bar() {
	_jsii_.InvokeVoid(
		i,
		"bar",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IBaseInterface from an Option[IBaseInterface].
// You should never need to call this method directly.
func (j jsiiProxy_IBaseInterface) FromOption__() IBaseInterface {
	var j_ IBaseInterface = &j
	return j_
}

// Hides the transitive dependency of base-of-base.
type StaticConsumer interface {
}

// The jsii proxy struct for StaticConsumer
type jsiiProxy_StaticConsumer struct {
	_ byte // padding
}

func NewStaticConsumer() StaticConsumer {
	_init_.Initialize()

	j := jsiiProxy_StaticConsumer{}

	_jsii_.Create(
		"@scope/jsii-calc-base.StaticConsumer",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewStaticConsumer_Override(s StaticConsumer) {
	_init_.Initialize()

	_jsii_.Create(
		"@scope/jsii-calc-base.StaticConsumer",
		nil, // no parameters
		s,
	)
}

func StaticConsumer_Consume(args ...interface{}) {
	_init_.Initialize()

	args_ := []interface{}{}
	for _, a := range args {
		args_ = append(args_, a)
	}

	_jsii_.StaticInvokeVoid(
		"@scope/jsii-calc-base.StaticConsumer",
		"consume",
		args_,
	)
}

// FromOption__ unwraps an StaticConsumer from an Option[StaticConsumer].
// You should never need to call this method directly.
func (j jsiiProxy_StaticConsumer) FromOption__() StaticConsumer {
	var j_ StaticConsumer = &j
	return j_
}


`;

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/go/jcb/jcb.init.go 1`] = `
package jcb

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jcb/jsii"
)

func init() {
	_jsii_.RegisterClass[Base](
		"@scope/jsii-calc-base.Base",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
		},
		func() interface{} {
			return &jsiiProxy_Base{}
		},
	)
	_jsii_.RegisterStruct[BaseProps](
		"@scope/jsii-calc-base.BaseProps",
		_init_.Initialize,
	)
	_jsii_.RegisterInterface[IBaseInterface](
		"@scope/jsii-calc-base.IBaseInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
		},
		func() interface{} {
			j := jsiiProxy_IBaseInterface{}
			_jsii_.InitJsiiProxy(&j.Type__scopejsiicalcbaseofbaseIVeryBaseInterface)
			return &j
		},
	)
	_jsii_.RegisterClass[StaticConsumer](
		"@scope/jsii-calc-base.StaticConsumer",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_StaticConsumer{}
		},
	)
}

`;

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/go/jcb/jsii/jsii.go 1`] = `
// Package jsii contains the functionaility needed for jsii packages to
// initialize their dependencies and themselves. Users should never need to use this package
// directly. If you find you need to - please report a bug at
// https://github.com/aws/jsii/issues/new/choose
package jsii

import (
	_                       "embed"

	_jsii_                  "github.com/aws/jsii-runtime-go/runtime"

	scopejsiicalcbaseofbase "github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2/jsii"
)

//go:embed scope-jsii-calc-base-0.0.0.tgz
var tarball []byte

// Initialize loads the necessary packages in the @jsii/kernel to support the enclosing module.
// The implementation is idempotent (and hence safe to be called over and over).
func Initialize() {
	// Ensure all dependencies are initialized
	scopejsiicalcbaseofbase.Initialize()

	// Load this library into the kernel
	_jsii_.Load("@scope/jsii-calc-base", "0.0.0", tarball)
}

`;

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/go/jcb/jsii/scope-jsii-calc-base-0.0.0.tgz 1`] = `go/jcb/jsii/scope-jsii-calc-base-0.0.0.tgz is a tarball`;

exports[`Generated code for "@scope/jsii-calc-base": <outDir>/go/jcb/version 1`] = `
0.0.0

`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/ 1`] = `
<root>
 ‚îó‚îÅ üìÅ go
    ‚îó‚îÅ üìÅ scopejsiicalcbaseofbase
       ‚î£‚îÅ üìÑ go.mod
       ‚î£‚îÅ üìÅ jsii
       ‚îÉ  ‚î£‚îÅ üìÑ jsii.go
       ‚îÉ  ‚îó‚îÅ üìÑ scope-jsii-calc-base-of-base-2.1.1.tgz
       ‚î£‚îÅ üìÑ LICENSE
       ‚î£‚îÅ üìÑ NOTICE
       ‚î£‚îÅ üìÑ scopejsiicalcbaseofbase.go
       ‚î£‚îÅ üìÑ scopejsiicalcbaseofbase.init.go
       ‚îó‚îÅ üìÑ version
`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/go/scopejsiicalcbaseofbase/LICENSE 1`] = `

                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      "License" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      "Licensor" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      "Legal Entity" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      "control" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      "You" (or "Your") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      "Source" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      "Object" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a "NOTICE" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets "[]"
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same "printed page" as the copyright notice for easier
      identification within third-party archives.

   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/go/scopejsiicalcbaseofbase/NOTICE 1`] = `
jsii
Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/go/scopejsiicalcbaseofbase/go.mod 1`] = `
module github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2

go 1.18

require (
	github.com/aws/jsii-runtime-go v0.0.0
)

`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/go/scopejsiicalcbaseofbase/jsii/jsii.go 1`] = `
// Package jsii contains the functionaility needed for jsii packages to
// initialize their dependencies and themselves. Users should never need to use this package
// directly. If you find you need to - please report a bug at
// https://github.com/aws/jsii/issues/new/choose
package jsii

import (
	_      "embed"

	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

//go:embed scope-jsii-calc-base-of-base-2.1.1.tgz
var tarball []byte

// Initialize loads the necessary packages in the @jsii/kernel to support the enclosing module.
// The implementation is idempotent (and hence safe to be called over and over).
func Initialize() {
	// Load this library into the kernel
	_jsii_.Load("@scope/jsii-calc-base-of-base", "2.1.1", tarball)
}

`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/go/scopejsiicalcbaseofbase/jsii/scope-jsii-calc-base-of-base-2.1.1.tgz 1`] = `go/scopejsiicalcbaseofbase/jsii/scope-jsii-calc-base-of-base-2.1.1.tgz is a tarball`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/go/scopejsiicalcbaseofbase/scopejsiicalcbaseofbase.go 1`] = `
// An example transitive dependency for jsii-calc.
package scopejsiicalcbaseofbase

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2/jsii"
)

type IVeryBaseInterface interface {
	Foo()
}

// The jsii proxy for IVeryBaseInterface
type jsiiProxy_IVeryBaseInterface struct {
	_ byte // padding
}

func (i *jsiiProxy_IVeryBaseInterface) Foo() {
	_jsii_.InvokeVoid(
		i,
		"foo",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IVeryBaseInterface from an Option[IVeryBaseInterface].
// You should never need to call this method directly.
func (j jsiiProxy_IVeryBaseInterface) FromOption__() IVeryBaseInterface {
	var j_ IVeryBaseInterface = &j
	return j_
}

type StaticConsumer interface {
}

// The jsii proxy struct for StaticConsumer
type jsiiProxy_StaticConsumer struct {
	_ byte // padding
}

func StaticConsumer_Consume(_args ...interface{}) {
	_init_.Initialize()

	args := []interface{}{}
	for _, a := range _args {
		args = append(args, a)
	}

	_jsii_.StaticInvokeVoid(
		"@scope/jsii-calc-base-of-base.StaticConsumer",
		"consume",
		args,
	)
}

// FromOption__ unwraps an StaticConsumer from an Option[StaticConsumer].
// You should never need to call this method directly.
func (j jsiiProxy_StaticConsumer) FromOption__() StaticConsumer {
	var j_ StaticConsumer = &j
	return j_
}

// Something here.
// Experimental.
type Very interface {
	Hey() _api_.Number
}

// The jsii proxy struct for Very
type jsiiProxy_Very struct {
	_ byte // padding
}

// Experimental.
func NewVery() Very {
	_init_.Initialize()

	j := jsiiProxy_Very{}

	_jsii_.Create(
		"@scope/jsii-calc-base-of-base.Very",
		nil, // no parameters
		&j,
	)

	return &j
}

// Experimental.
func NewVery_Override(v Very) {
	_init_.Initialize()

	_jsii_.Create(
		"@scope/jsii-calc-base-of-base.Very",
		nil, // no parameters
		v,
	)
}

// Experimental.
func (v *jsiiProxy_Very) Hey() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		v,
		"hey",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Very from an Option[Very].
// You should never need to call this method directly.
func (j jsiiProxy_Very) FromOption__() Very {
	var j_ Very = &j
	return j_
}

type VeryBaseProps struct {
	Foo Very \`json:"foo"\`
}

// FromOption__ unwraps an VeryBaseProps from an Option[VeryBaseProps].
// You should never need to call this method directly.
func (v VeryBaseProps) FromOption__() VeryBaseProps {
	return v
}


`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/go/scopejsiicalcbaseofbase/scopejsiicalcbaseofbase.init.go 1`] = `
package scopejsiicalcbaseofbase

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2/jsii"
)

func init() {
	_jsii_.RegisterInterface[IVeryBaseInterface](
		"@scope/jsii-calc-base-of-base.IVeryBaseInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
		},
		func() interface{} {
			return &jsiiProxy_IVeryBaseInterface{}
		},
	)
	_jsii_.RegisterClass[StaticConsumer](
		"@scope/jsii-calc-base-of-base.StaticConsumer",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_StaticConsumer{}
		},
	)
	_jsii_.RegisterClass[Very](
		"@scope/jsii-calc-base-of-base.Very",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "hey", GoMethod: "Hey"},
		},
		func() interface{} {
			return &jsiiProxy_Very{}
		},
	)
	_jsii_.RegisterStruct[VeryBaseProps](
		"@scope/jsii-calc-base-of-base.VeryBaseProps",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "@scope/jsii-calc-base-of-base": <outDir>/go/scopejsiicalcbaseofbase/version 1`] = `
2.1.1

`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/ 1`] = `
<root>
 ‚îó‚îÅ üìÅ go
    ‚îó‚îÅ üìÅ scopejsiicalclib
       ‚î£‚îÅ üìÅ customsubmodulename
       ‚îÉ  ‚î£‚îÅ üìÑ customsubmodulename.go
       ‚îÉ  ‚îó‚îÅ üìÑ customsubmodulename.init.go
       ‚î£‚îÅ üìÑ go.mod
       ‚î£‚îÅ üìÅ internal
       ‚îÉ  ‚îó‚îÅ üìÑ types.go
       ‚î£‚îÅ üìÅ jsii
       ‚îÉ  ‚î£‚îÅ üìÑ jsii.go
       ‚îÉ  ‚îó‚îÅ üìÑ scope-jsii-calc-lib-0.0.0.tgz
       ‚î£‚îÅ üìÑ LICENSE
       ‚î£‚îÅ üìÑ NOTICE
       ‚î£‚îÅ üìÑ scopejsiicalclib.go
       ‚î£‚îÅ üìÑ scopejsiicalclib.init.go
       ‚îó‚îÅ üìÑ version
`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/LICENSE 1`] = `

                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      "License" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      "Licensor" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      "Legal Entity" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      "control" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      "You" (or "Your") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      "Source" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      "Object" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a "NOTICE" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets "[]"
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same "printed page" as the copyright notice for easier
      identification within third-party archives.

   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/NOTICE 1`] = `
jsii
Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/customsubmodulename/customsubmodulename.go 1`] = `
package customsubmodulename

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/scopejsiicalclib/jsii"
)

// Deprecated.
type IReflectable interface {
	// Deprecated.
	Entries() _api_.Slice[ReflectableEntry]
}

// The jsii proxy for IReflectable
type jsiiProxy_IReflectable struct {
	_ byte // padding
}

func (j *jsiiProxy_IReflectable) Entries() _api_.Slice[ReflectableEntry] {
	return _jsii_.Get[_api_.Slice[ReflectableEntry]](
		j,
		"entries",
	)
}

// FromOption__ unwraps an IReflectable from an Option[IReflectable].
// You should never need to call this method directly.
func (j jsiiProxy_IReflectable) FromOption__() IReflectable {
	var j_ IReflectable = &j
	return j_
}

// This class is here to show we can use nested classes across module boundaries.
// Deprecated.
type NestingClass interface {
}

// The jsii proxy struct for NestingClass
type jsiiProxy_NestingClass struct {
	_ byte // padding
}

// FromOption__ unwraps an NestingClass from an Option[NestingClass].
// You should never need to call this method directly.
func (j jsiiProxy_NestingClass) FromOption__() NestingClass {
	var j_ NestingClass = &j
	return j_
}

// This class is here to show we can use nested classes across module boundaries.
// Deprecated.
type NestingClass_NestedClass interface {
	Property() _api_.String
}

// The jsii proxy struct for NestingClass_NestedClass
type jsiiProxy_NestingClass_NestedClass struct {
	_ byte // padding
}

func (j *jsiiProxy_NestingClass_NestedClass) Property() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"property",
	)
}


// Deprecated.
func NewNestingClass_NestedClass() NestingClass_NestedClass {
	_init_.Initialize()

	j := jsiiProxy_NestingClass_NestedClass{}

	_jsii_.Create(
		"@scope/jsii-calc-lib.submodule.NestingClass.NestedClass",
		nil, // no parameters
		&j,
	)

	return &j
}

// Deprecated.
func NewNestingClass_NestedClass_Override(n NestingClass_NestedClass) {
	_init_.Initialize()

	_jsii_.Create(
		"@scope/jsii-calc-lib.submodule.NestingClass.NestedClass",
		nil, // no parameters
		n,
	)
}

// FromOption__ unwraps an NestingClass_NestedClass from an Option[NestingClass_NestedClass].
// You should never need to call this method directly.
func (j jsiiProxy_NestingClass_NestedClass) FromOption__() NestingClass_NestedClass {
	var j_ NestingClass_NestedClass = &j
	return j_
}

// This is a struct, nested within a class.
//
// Normal.
// Deprecated.
type NestingClass_NestedStruct struct {
	// Deprecated.
	Name _api_.String \`json:"name"\`
}

// FromOption__ unwraps an NestingClass_NestedStruct from an Option[NestingClass_NestedStruct].
// You should never need to call this method directly.
func (n NestingClass_NestedStruct) FromOption__() NestingClass_NestedStruct {
	return n
}

// Deprecated.
type ReflectableEntry struct {
	// Deprecated.
	Key _api_.String \`json:"key"\`
	// Deprecated.
	Value interface{} \`json:"value"\`
}

// FromOption__ unwraps an ReflectableEntry from an Option[ReflectableEntry].
// You should never need to call this method directly.
func (r ReflectableEntry) FromOption__() ReflectableEntry {
	return r
}

// Deprecated.
type Reflector interface {
	AsMap(reflectable IReflectable) _api_.Map[interface{}]
}

// The jsii proxy struct for Reflector
type jsiiProxy_Reflector struct {
	_ byte // padding
}

// Deprecated.
func NewReflector() Reflector {
	_init_.Initialize()

	j := jsiiProxy_Reflector{}

	_jsii_.Create(
		"@scope/jsii-calc-lib.submodule.Reflector",
		nil, // no parameters
		&j,
	)

	return &j
}

// Deprecated.
func NewReflector_Override(r Reflector) {
	_init_.Initialize()

	_jsii_.Create(
		"@scope/jsii-calc-lib.submodule.Reflector",
		nil, // no parameters
		r,
	)
}

// Deprecated.
func (r *jsiiProxy_Reflector) AsMap(reflectable IReflectable) _api_.Map[interface{}] {
	if reflectable == nil { panic("Parameters \\"reflectable\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.Map[interface{}]](
		r,
		"asMap",
		[]interface{}{reflectable},
	)
}

// FromOption__ unwraps an Reflector from an Option[Reflector].
// You should never need to call this method directly.
func (j jsiiProxy_Reflector) FromOption__() Reflector {
	var j_ Reflector = &j
	return j_
}


`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/customsubmodulename/customsubmodulename.init.go 1`] = `
package customsubmodulename

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/scopejsiicalclib/jsii"
)

func init() {
	_jsii_.RegisterInterface[IReflectable](
		"@scope/jsii-calc-lib.submodule.IReflectable",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "entries", GoGetter: "Entries"},
		},
		func() interface{} {
			return &jsiiProxy_IReflectable{}
		},
	)
	_jsii_.RegisterClass[NestingClass](
		"@scope/jsii-calc-lib.submodule.NestingClass",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_NestingClass{}
		},
	)
	_jsii_.RegisterClass[NestingClass_NestedClass](
		"@scope/jsii-calc-lib.submodule.NestingClass.NestedClass",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "property", GoGetter: "Property"},
		},
		func() interface{} {
			return &jsiiProxy_NestingClass_NestedClass{}
		},
	)
	_jsii_.RegisterStruct[NestingClass_NestedStruct](
		"@scope/jsii-calc-lib.submodule.NestingClass.NestedStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[ReflectableEntry](
		"@scope/jsii-calc-lib.submodule.ReflectableEntry",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[Reflector](
		"@scope/jsii-calc-lib.submodule.Reflector",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "asMap", GoMethod: "AsMap"},
		},
		func() interface{} {
			return &jsiiProxy_Reflector{}
		},
	)
}

`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/go.mod 1`] = `
module github.com/aws/jsii/jsii-calc/go/scopejsiicalclib

go 1.18

require (
	github.com/aws/jsii-runtime-go v0.0.0
	github.com/aws/jsii/jsii-calc/go/jcb v0.0.0
	github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2 v2.1.1
)

`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/internal/types.go 1`] = `
package internal
import (
	"github.com/aws/jsii/jsii-calc/go/jcb"
)
type Type__jcbIBaseInterface = jcb.IBaseInterface
type Type__jcbBase = jcb.Base

`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/jsii/jsii.go 1`] = `
// Package jsii contains the functionaility needed for jsii packages to
// initialize their dependencies and themselves. Users should never need to use this package
// directly. If you find you need to - please report a bug at
// https://github.com/aws/jsii/issues/new/choose
package jsii

import (
	_                       "embed"

	_jsii_                  "github.com/aws/jsii-runtime-go/runtime"

	jcb                     "github.com/aws/jsii/jsii-calc/go/jcb/jsii"
	scopejsiicalcbaseofbase "github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2/jsii"
)

//go:embed scope-jsii-calc-lib-0.0.0.tgz
var tarball []byte

// Initialize loads the necessary packages in the @jsii/kernel to support the enclosing module.
// The implementation is idempotent (and hence safe to be called over and over).
func Initialize() {
	// Ensure all dependencies are initialized
	jcb.Initialize()
	scopejsiicalcbaseofbase.Initialize()

	// Load this library into the kernel
	_jsii_.Load("@scope/jsii-calc-lib", "0.0.0", tarball)
}

`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/jsii/scope-jsii-calc-lib-0.0.0.tgz 1`] = `go/scopejsiicalclib/jsii/scope-jsii-calc-lib-0.0.0.tgz is a tarball`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/scopejsiicalclib.go 1`] = `
// A simple calcuator library built on JSII.
package scopejsiicalclib

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/scopejsiicalclib/jsii"

	"github.com/aws/jsii/jsii-calc/go/jcb"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib/internal"
)

// A base class for testing #2647.
//
// The method \`foo\` has a parameter that uses a type
// from a dependent module. Since Go "reimplments" this method, it will also need
// to include an "import" statement for the calc-base module.
// See: https://github.com/aws/jsii/issues/2647
//
// Deprecated.
type BaseFor2647 interface {
	Foo(obj jcb.IBaseInterface)
}

// The jsii proxy struct for BaseFor2647
type jsiiProxy_BaseFor2647 struct {
	_ byte // padding
}

// Deprecated.
func NewBaseFor2647(very scopejsiicalcbaseofbase.Very) BaseFor2647 {
	_init_.Initialize()

	if very == nil { panic("Parameters \\"very\\" is required (received nil)") }
	j := jsiiProxy_BaseFor2647{}

	_jsii_.Create(
		"@scope/jsii-calc-lib.BaseFor2647",
		[]interface{}{very},
		&j,
	)

	return &j
}

// Deprecated.
func NewBaseFor2647_Override(b BaseFor2647, very scopejsiicalcbaseofbase.Very) {
	_init_.Initialize()

	if very == nil { panic("Parameters \\"very\\" is required (received nil)") }
	_jsii_.Create(
		"@scope/jsii-calc-lib.BaseFor2647",
		[]interface{}{very},
		b,
	)
}

// Deprecated.
func (b *jsiiProxy_BaseFor2647) Foo(obj jcb.IBaseInterface) {
	if obj == nil { panic("Parameters \\"obj\\" is required (received nil)") }
	_jsii_.InvokeVoid(
		b,
		"foo",
		[]interface{}{obj},
	)
}

// FromOption__ unwraps an BaseFor2647 from an Option[BaseFor2647].
// You should never need to call this method directly.
func (j jsiiProxy_BaseFor2647) FromOption__() BaseFor2647 {
	var j_ BaseFor2647 = &j
	return j_
}

// Deprecated.
type DiamondLeft struct {
	// Deprecated.
	HoistedTop _api_.Option[_api_.String] \`json:"hoistedTop"\`
	// Deprecated.
	Left _api_.Option[_api_.Number] \`json:"left"\`
}

// FromOption__ unwraps an DiamondLeft from an Option[DiamondLeft].
// You should never need to call this method directly.
func (d DiamondLeft) FromOption__() DiamondLeft {
	return d
}

// Deprecated.
type DiamondRight struct {
	// Deprecated.
	HoistedTop _api_.Option[_api_.String] \`json:"hoistedTop"\`
	// Deprecated.
	Right _api_.Option[_api_.Bool] \`json:"right"\`
}

// FromOption__ unwraps an DiamondRight from an Option[DiamondRight].
// You should never need to call this method directly.
func (d DiamondRight) FromOption__() DiamondRight {
	return d
}

// Check that enums from \\@scoped packages can be references.
//
// See awslabs/jsii#138
// Deprecated.
type EnumFromScopedModule string

const (
	EnumFromScopedModule_VALUE1 EnumFromScopedModule = "VALUE1"
	EnumFromScopedModule_VALUE2 EnumFromScopedModule = "VALUE2"
)

// FromOption__ unwraps an EnumFromScopedModule from an Option[EnumFromScopedModule].
// You should never need to call this method directly.
func (e EnumFromScopedModule) FromOption__() EnumFromScopedModule {
	return e
}

// The general contract for a concrete number.
// Deprecated.
type IDoublable interface {
	// Deprecated.
	DoubleValue() _api_.Number
}

// The jsii proxy for IDoublable
type jsiiProxy_IDoublable struct {
	_ byte // padding
}

func (j *jsiiProxy_IDoublable) DoubleValue() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"doubleValue",
	)
}

// FromOption__ unwraps an IDoublable from an Option[IDoublable].
// You should never need to call this method directly.
func (j jsiiProxy_IDoublable) FromOption__() IDoublable {
	var j_ IDoublable = &j
	return j_
}

// Applies to classes that are considered friendly.
//
// These classes can be greeted with
// a "hello" or "goodbye" blessing and they will respond back in a fun and friendly manner.
// Deprecated.
type IFriendly interface {
	// Say hello!
	// Deprecated.
	Hello() _api_.String
}

// The jsii proxy for IFriendly
type jsiiProxy_IFriendly struct {
	_ byte // padding
}

func (i *jsiiProxy_IFriendly) Hello() _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"hello",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IFriendly from an Option[IFriendly].
// You should never need to call this method directly.
func (j jsiiProxy_IFriendly) FromOption__() IFriendly {
	var j_ IFriendly = &j
	return j_
}

// Interface that inherits from packages 2 levels up the tree.
//
// Their presence validates that .NET/Java/jsii-reflect can track all fields
// far enough up the tree.
// Deprecated.
type IThreeLevelsInterface interface {
	jcb.IBaseInterface
	// Deprecated.
	Baz()
}

// The jsii proxy for IThreeLevelsInterface
type jsiiProxy_IThreeLevelsInterface struct {
	internal.Type__jcbIBaseInterface
}

func (i *jsiiProxy_IThreeLevelsInterface) Baz() {
	_jsii_.InvokeVoid(
		i,
		"baz",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IThreeLevelsInterface from an Option[IThreeLevelsInterface].
// You should never need to call this method directly.
func (j jsiiProxy_IThreeLevelsInterface) FromOption__() IThreeLevelsInterface {
	var j_ IThreeLevelsInterface = &j
	return j_
}

// This is the first struct we have created in jsii.
// Deprecated.
type MyFirstStruct struct {
	// An awesome number value.
	// Deprecated.
	Anumber _api_.Number \`json:"anumber"\`
	// A string value.
	// Deprecated.
	Astring _api_.String \`json:"astring"\`
	// Deprecated.
	FirstOptional _api_.Option[_api_.Slice[_api_.Option[_api_.String]]] \`json:"firstOptional"\`
}

// FromOption__ unwraps an MyFirstStruct from an Option[MyFirstStruct].
// You should never need to call this method directly.
func (m MyFirstStruct) FromOption__() MyFirstStruct {
	return m
}

// Represents a concrete number.
// Deprecated.
type Number interface {
	NumericValue
	IDoublable
	DoubleValue() _api_.Number
	Value() _api_.Number
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for Number
type jsiiProxy_Number struct {
	jsiiProxy_NumericValue
	jsiiProxy_IDoublable
}

func (j *jsiiProxy_Number) DoubleValue() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"doubleValue",
	)
}

func (j *jsiiProxy_Number) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


// Creates a Number object.
// Deprecated.
func NewNumber(value _api_.Number) Number {
	_init_.Initialize()

	j := jsiiProxy_Number{}

	_jsii_.Create(
		"@scope/jsii-calc-lib.Number",
		[]interface{}{value},
		&j,
	)

	return &j
}

// Creates a Number object.
// Deprecated.
func NewNumber_Override(n Number, value _api_.Number) {
	_init_.Initialize()

	_jsii_.Create(
		"@scope/jsii-calc-lib.Number",
		[]interface{}{value},
		n,
	)
}

// String representation of the value.
// Deprecated.
func (n *jsiiProxy_Number) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		n,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
// Deprecated.
func (n *jsiiProxy_Number) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		n,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Number from an Option[Number].
// You should never need to call this method directly.
func (j jsiiProxy_Number) FromOption__() Number {
	var j_ Number = &j
	return j_
}

// Abstract class which represents a numeric value.
// Deprecated.
type NumericValue interface {
	jcb.Base
	Value() _api_.Number
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for NumericValue
type jsiiProxy_NumericValue struct {
	internal.Type__jcbBase
}

func (j *jsiiProxy_NumericValue) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


// Deprecated.
func NewNumericValue_Override(n NumericValue) {
	_init_.Initialize()

	_jsii_.Create(
		"@scope/jsii-calc-lib.NumericValue",
		nil, // no parameters
		n,
	)
}

// String representation of the value.
// Deprecated.
func (n *jsiiProxy_NumericValue) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		n,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
// Deprecated.
func (n *jsiiProxy_NumericValue) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		n,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an NumericValue from an Option[NumericValue].
// You should never need to call this method directly.
func (j jsiiProxy_NumericValue) FromOption__() NumericValue {
	var j_ NumericValue = &j
	return j_
}

// Represents an operation on values.
// Deprecated.
type Operation interface {
	NumericValue
	Value() _api_.Number
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for Operation
type jsiiProxy_Operation struct {
	jsiiProxy_NumericValue
}

func (j *jsiiProxy_Operation) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


// Deprecated.
func NewOperation_Override(o Operation) {
	_init_.Initialize()

	_jsii_.Create(
		"@scope/jsii-calc-lib.Operation",
		nil, // no parameters
		o,
	)
}

// String representation of the value.
// Deprecated.
func (o *jsiiProxy_Operation) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		o,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
// Deprecated.
func (o *jsiiProxy_Operation) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		o,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Operation from an Option[Operation].
// You should never need to call this method directly.
func (j jsiiProxy_Operation) FromOption__() Operation {
	var j_ Operation = &j
	return j_
}

// This is a struct with only optional properties.
// Deprecated.
type StructWithOnlyOptionals struct {
	// The first optional!
	// Deprecated.
	Optional1 _api_.Option[_api_.String] \`json:"optional1"\`
	// Deprecated.
	Optional2 _api_.Option[_api_.Number] \`json:"optional2"\`
	// Deprecated.
	Optional3 _api_.Option[_api_.Bool] \`json:"optional3"\`
}

// FromOption__ unwraps an StructWithOnlyOptionals from an Option[StructWithOnlyOptionals].
// You should never need to call this method directly.
func (s StructWithOnlyOptionals) FromOption__() StructWithOnlyOptionals {
	return s
}


`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/scopejsiicalclib.init.go 1`] = `
package scopejsiicalclib

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/scopejsiicalclib/jsii"
)

func init() {
	_jsii_.RegisterClass[BaseFor2647](
		"@scope/jsii-calc-lib.BaseFor2647",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
		},
		func() interface{} {
			return &jsiiProxy_BaseFor2647{}
		},
	)
	_jsii_.RegisterStruct[DiamondLeft](
		"@scope/jsii-calc-lib.DiamondLeft",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[DiamondRight](
		"@scope/jsii-calc-lib.DiamondRight",
		_init_.Initialize,
	)
	_jsii_.RegisterEnum[EnumFromScopedModule](
		"@scope/jsii-calc-lib.EnumFromScopedModule",
		_init_.Initialize,
		map[string]interface{}{
			"VALUE1": EnumFromScopedModule_VALUE1,
			"VALUE2": EnumFromScopedModule_VALUE2,
		},
	)
	_jsii_.RegisterInterface[IDoublable](
		"@scope/jsii-calc-lib.IDoublable",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "doubleValue", GoGetter: "DoubleValue"},
		},
		func() interface{} {
			return &jsiiProxy_IDoublable{}
		},
	)
	_jsii_.RegisterInterface[IFriendly](
		"@scope/jsii-calc-lib.IFriendly",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
		},
		func() interface{} {
			return &jsiiProxy_IFriendly{}
		},
	)
	_jsii_.RegisterInterface[IThreeLevelsInterface](
		"@scope/jsii-calc-lib.IThreeLevelsInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberMethod{JsiiMethod: "baz", GoMethod: "Baz"},
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
		},
		func() interface{} {
			j := jsiiProxy_IThreeLevelsInterface{}
			_jsii_.InitJsiiProxy(&j.Type__jcbIBaseInterface)
			return &j
		},
	)
	_jsii_.RegisterStruct[MyFirstStruct](
		"@scope/jsii-calc-lib.MyFirstStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[Number](
		"@scope/jsii-calc-lib.Number",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "doubleValue", GoGetter: "DoubleValue"},
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_Number{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_NumericValue)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IDoublable)
			return &j
		},
	)
	_jsii_.RegisterClass[NumericValue](
		"@scope/jsii-calc-lib.NumericValue",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_NumericValue{}
			_jsii_.InitJsiiProxy(&j.Type__jcbBase)
			return &j
		},
	)
	_jsii_.RegisterClass[Operation](
		"@scope/jsii-calc-lib.Operation",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_Operation{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_NumericValue)
			return &j
		},
	)
	_jsii_.RegisterStruct[StructWithOnlyOptionals](
		"@scope/jsii-calc-lib.StructWithOnlyOptionals",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "@scope/jsii-calc-lib": <outDir>/go/scopejsiicalclib/version 1`] = `
0.0.0-devpreview

`;

exports[`Generated code for "jsii-calc": <outDir>/ 1`] = `
<root>
 ‚îó‚îÅ üìÅ go
    ‚îó‚îÅ üìÅ jsiicalc
       ‚î£‚îÅ üìÅ cdk16625
       ‚îÉ  ‚î£‚îÅ üìÑ cdk16625.go
       ‚îÉ  ‚î£‚îÅ üìÑ cdk16625.init.go
       ‚îÉ  ‚îó‚îÅ üìÅ donotimport
       ‚îÉ     ‚î£‚îÅ üìÑ donotimport.go
       ‚îÉ     ‚î£‚îÅ üìÑ donotimport.init.go
       ‚îÉ     ‚îó‚îÅ üìÅ internal
       ‚îÉ        ‚îó‚îÅ üìÑ types.go
       ‚î£‚îÅ üìÅ composition
       ‚îÉ  ‚î£‚îÅ üìÑ composition.go
       ‚îÉ  ‚î£‚îÅ üìÑ composition.init.go
       ‚îÉ  ‚îó‚îÅ üìÅ internal
       ‚îÉ     ‚îó‚îÅ üìÑ types.go
       ‚î£‚îÅ üìÅ derivedclasshasnoproperties
       ‚îÉ  ‚î£‚îÅ üìÑ derivedclasshasnoproperties.go
       ‚îÉ  ‚îó‚îÅ üìÑ derivedclasshasnoproperties.init.go
       ‚î£‚îÅ üìÑ go.mod
       ‚î£‚îÅ üìÅ interfaceinnamespaceincludesclasses
       ‚îÉ  ‚î£‚îÅ üìÑ interfaceinnamespaceincludesclasses.go
       ‚îÉ  ‚îó‚îÅ üìÑ interfaceinnamespaceincludesclasses.init.go
       ‚î£‚îÅ üìÅ interfaceinnamespaceonlyinterface
       ‚îÉ  ‚î£‚îÅ üìÑ interfaceinnamespaceonlyinterface.go
       ‚îÉ  ‚îó‚îÅ üìÑ interfaceinnamespaceonlyinterface.init.go
       ‚î£‚îÅ üìÅ internal
       ‚îÉ  ‚îó‚îÅ üìÑ types.go
       ‚î£‚îÅ üìÅ jsii
       ‚îÉ  ‚î£‚îÅ üìÑ jsii-calc-3.20.120.tgz
       ‚îÉ  ‚îó‚îÅ üìÑ jsii.go
       ‚î£‚îÅ üìÑ jsiicalc.go
       ‚î£‚îÅ üìÑ jsiicalc.init.go
       ‚î£‚îÅ üìÑ LICENSE
       ‚î£‚îÅ üìÅ module2530
       ‚îÉ  ‚î£‚îÅ üìÑ module2530.go
       ‚îÉ  ‚îó‚îÅ üìÑ module2530.init.go
       ‚î£‚îÅ üìÅ module2617
       ‚îÉ  ‚î£‚îÅ üìÑ module2617.go
       ‚îÉ  ‚îó‚îÅ üìÑ module2617.init.go
       ‚î£‚îÅ üìÅ module2647
       ‚îÉ  ‚î£‚îÅ üìÅ internal
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ types.go
       ‚îÉ  ‚î£‚îÅ üìÑ module2647.go
       ‚îÉ  ‚îó‚îÅ üìÑ module2647.init.go
       ‚î£‚îÅ üìÅ module2689
       ‚îÉ  ‚î£‚îÅ üìÅ methods
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ methods.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ methods.init.go
       ‚îÉ  ‚î£‚îÅ üìÑ module2689.go
       ‚îÉ  ‚î£‚îÅ üìÅ props
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ props.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ props.init.go
       ‚îÉ  ‚î£‚îÅ üìÅ retval
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ retval.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ retval.init.go
       ‚îÉ  ‚îó‚îÅ üìÅ structs
       ‚îÉ     ‚î£‚îÅ üìÑ structs.go
       ‚îÉ     ‚îó‚îÅ üìÑ structs.init.go
       ‚î£‚îÅ üìÅ module2692
       ‚îÉ  ‚î£‚îÅ üìÑ module2692.go
       ‚îÉ  ‚î£‚îÅ üìÅ submodule1
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ submodule1.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ submodule1.init.go
       ‚îÉ  ‚îó‚îÅ üìÅ submodule2
       ‚îÉ     ‚î£‚îÅ üìÑ submodule2.go
       ‚îÉ     ‚îó‚îÅ üìÑ submodule2.init.go
       ‚î£‚îÅ üìÅ module2700
       ‚îÉ  ‚î£‚îÅ üìÑ module2700.go
       ‚îÉ  ‚îó‚îÅ üìÑ module2700.init.go
       ‚î£‚îÅ üìÅ module2702
       ‚îÉ  ‚î£‚îÅ üìÅ internal
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ types.go
       ‚îÉ  ‚î£‚îÅ üìÑ module2702.go
       ‚îÉ  ‚îó‚îÅ üìÑ module2702.init.go
       ‚î£‚îÅ üìÅ nodirect
       ‚îÉ  ‚î£‚îÅ üìÑ nodirect.go
       ‚îÉ  ‚î£‚îÅ üìÅ sub1
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ sub1.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ sub1.init.go
       ‚îÉ  ‚îó‚îÅ üìÅ sub2
       ‚îÉ     ‚î£‚îÅ üìÑ sub2.go
       ‚îÉ     ‚îó‚îÅ üìÑ sub2.init.go
       ‚î£‚îÅ üìÑ NOTICE
       ‚î£‚îÅ üìÅ onlystatic
       ‚îÉ  ‚î£‚îÅ üìÑ onlystatic.go
       ‚îÉ  ‚îó‚îÅ üìÑ onlystatic.init.go
       ‚î£‚îÅ üìÅ pythonself
       ‚îÉ  ‚î£‚îÅ üìÑ pythonself.go
       ‚îÉ  ‚îó‚îÅ üìÑ pythonself.init.go
       ‚î£‚îÅ üìÑ README.md
       ‚î£‚îÅ üìÅ submodule
       ‚îÉ  ‚î£‚îÅ üìÅ backreferences
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ backreferences.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ backreferences.init.go
       ‚îÉ  ‚î£‚îÅ üìÅ child
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ child.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ child.init.go
       ‚îÉ  ‚î£‚îÅ üìÅ internal
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ types.go
       ‚îÉ  ‚î£‚îÅ üìÅ isolated
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ isolated.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ isolated.init.go
       ‚îÉ  ‚î£‚îÅ üìÅ nestedsubmodule
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÅ deeplynested
       ‚îÉ  ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ deeplynested.go
       ‚îÉ  ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ deeplynested.init.go
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÅ internal
       ‚îÉ  ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ types.go
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ nestedsubmodule.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ nestedsubmodule.init.go
       ‚îÉ  ‚î£‚îÅ üìÅ param
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ param.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ param.init.go
       ‚îÉ  ‚î£‚îÅ üìÅ returnsparam
       ‚îÉ  ‚îÉ  ‚î£‚îÅ üìÑ returnsparam.go
       ‚îÉ  ‚îÉ  ‚îó‚îÅ üìÑ returnsparam.init.go
       ‚îÉ  ‚î£‚îÅ üìÑ submodule.go
       ‚îÉ  ‚îó‚îÅ üìÑ submodule.init.go
       ‚îó‚îÅ üìÑ version
`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/LICENSE 1`] = `

                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      "License" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      "Licensor" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      "Legal Entity" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      "control" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      "You" (or "Your") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      "Source" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      "Object" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a "NOTICE" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets "[]"
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same "printed page" as the copyright notice for easier
      identification within third-party archives.

   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/NOTICE 1`] = `
jsii
Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/README.md 1`] = `
# jsii Calculator

This library is used to demonstrate and test the features of JSII

## How to use running sum API:

First, create a calculator:

\`\`\`ts
const calculator = new calc.Calculator();
\`\`\`

Then call some operations:


\`\`\`ts fixture=with-calculator
calculator.add(10);
\`\`\`

## Code Samples

\`\`\`ts
/* This is totes a magic comment in here, just you wait! */
const foo = 'bar';
\`\`\`


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/cdk16625/cdk16625.go 1`] = `
package cdk16625

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3"
)

type Cdk16625 interface {
	Test()
	Unwrap(gen jsiicalc.IRandomNumberGenerator) _api_.Number
}

// The jsii proxy struct for Cdk16625
type jsiiProxy_Cdk16625 struct {
	_ byte // padding
}

func NewCdk16625_Override(c Cdk16625) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.cdk16625.Cdk16625",
		nil, // no parameters
		c,
	)
}

// Run this function to verify that everything is working as it should.
func (c *jsiiProxy_Cdk16625) Test() {
	_jsii_.InvokeVoid(
		c,
		"test",
		nil, // no parameters
	)
}

// Implement this functin to return \`gen.next()\`. It is extremely important that the \`donotimport\` submodule is NEVER explicitly loaded in the testing application (otherwise this test is void).
func (c *jsiiProxy_Cdk16625) Unwrap(gen jsiicalc.IRandomNumberGenerator) _api_.Number {
	if gen == nil { panic("Parameters \\"gen\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.Number](
		c,
		"unwrap",
		[]interface{}{gen},
	)
}

// FromOption__ unwraps an Cdk16625 from an Option[Cdk16625].
// You should never need to call this method directly.
func (j jsiiProxy_Cdk16625) FromOption__() Cdk16625 {
	var j_ Cdk16625 = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/cdk16625/cdk16625.init.go 1`] = `
package cdk16625

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[Cdk16625](
		"jsii-calc.cdk16625.Cdk16625",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "test", GoMethod: "Test"},
			_jsii_.MemberMethod{JsiiMethod: "unwrap", GoMethod: "Unwrap"},
		},
		func() interface{} {
			return &jsiiProxy_Cdk16625{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/cdk16625/donotimport/donotimport.go 1`] = `
package donotimport

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/cdk16625/donotimport/internal"
)

// This type demonstrates the ability to receive a callback argument that has a type from a submodule not explicitly imported in the user's code.
//
// This checks
// that all types available in the assembly can be resolved by the runtime
// library, regardless of whether they were explicitly referenced or not.
// See: https://github.com/aws/aws-cdk/issues/16625
//
type UnimportedSubmoduleType interface {
	jsiicalc.IRandomNumberGenerator
	Next() _api_.Number
}

// The jsii proxy struct for UnimportedSubmoduleType
type jsiiProxy_UnimportedSubmoduleType struct {
	internal.Type__jsiicalcIRandomNumberGenerator
}

func NewUnimportedSubmoduleType(value _api_.Number) UnimportedSubmoduleType {
	_init_.Initialize()

	j := jsiiProxy_UnimportedSubmoduleType{}

	_jsii_.Create(
		"jsii-calc.cdk16625.donotimport.UnimportedSubmoduleType",
		[]interface{}{value},
		&j,
	)

	return &j
}

func NewUnimportedSubmoduleType_Override(u UnimportedSubmoduleType, value _api_.Number) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.cdk16625.donotimport.UnimportedSubmoduleType",
		[]interface{}{value},
		u,
	)
}

// Not quite random, but it'll do.
//
// Returns: 1337
func (u *jsiiProxy_UnimportedSubmoduleType) Next() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		u,
		"next",
		nil, // no parameters
	)
}

// FromOption__ unwraps an UnimportedSubmoduleType from an Option[UnimportedSubmoduleType].
// You should never need to call this method directly.
func (j jsiiProxy_UnimportedSubmoduleType) FromOption__() UnimportedSubmoduleType {
	var j_ UnimportedSubmoduleType = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/cdk16625/donotimport/donotimport.init.go 1`] = `
package donotimport

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[UnimportedSubmoduleType](
		"jsii-calc.cdk16625.donotimport.UnimportedSubmoduleType",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "next", GoMethod: "Next"},
		},
		func() interface{} {
			j := jsiiProxy_UnimportedSubmoduleType{}
			_jsii_.InitJsiiProxy(&j.Type__jsiicalcIRandomNumberGenerator)
			return &j
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/cdk16625/donotimport/internal/types.go 1`] = `
package internal
import (
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3"
)
type Type__jsiicalcIRandomNumberGenerator = jsiicalc.IRandomNumberGenerator

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/composition/composition.go 1`] = `
package composition

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/composition/internal"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib"
)

// Abstract operation composed from an expression of other operations.
type CompositeOperation interface {
	scopejsiicalclib.Operation
	DecorationPostfixes() _api_.Slice[_api_.String]
	SetDecorationPostfixes(val _api_.Slice[_api_.String])
	DecorationPrefixes() _api_.Slice[_api_.String]
	SetDecorationPrefixes(val _api_.Slice[_api_.String])
	Expression() scopejsiicalclib.NumericValue
	StringStyle() CompositeOperation_CompositionStringStyle
	SetStringStyle(val CompositeOperation_CompositionStringStyle)
	Value() _api_.Number
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for CompositeOperation
type jsiiProxy_CompositeOperation struct {
	internal.Type__scopejsiicalclibOperation
}

func (j *jsiiProxy_CompositeOperation) DecorationPostfixes() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"decorationPostfixes",
	)
}

func (j *jsiiProxy_CompositeOperation) DecorationPrefixes() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"decorationPrefixes",
	)
}

func (j *jsiiProxy_CompositeOperation) Expression() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"expression",
	)
}

func (j *jsiiProxy_CompositeOperation) StringStyle() CompositeOperation_CompositionStringStyle {
	return _jsii_.Get[CompositeOperation_CompositionStringStyle](
		j,
		"stringStyle",
	)
}

func (j *jsiiProxy_CompositeOperation) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


func NewCompositeOperation_Override(c CompositeOperation) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.composition.CompositeOperation",
		nil, // no parameters
		c,
	)
}

func (j *jsiiProxy_CompositeOperation) SetDecorationPostfixes(val _api_.Slice[_api_.String]) {
	_jsii_.Set(
		j,
		"decorationPostfixes",
		val,
	)
}

func (j *jsiiProxy_CompositeOperation) SetDecorationPrefixes(val _api_.Slice[_api_.String]) {
	_jsii_.Set(
		j,
		"decorationPrefixes",
		val,
	)
}

func (j *jsiiProxy_CompositeOperation) SetStringStyle(val CompositeOperation_CompositionStringStyle) {
	_jsii_.Set(
		j,
		"stringStyle",
		val,
	)
}

// (deprecated) String representation of the value.
func (c *jsiiProxy_CompositeOperation) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		c,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (c *jsiiProxy_CompositeOperation) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		c,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an CompositeOperation from an Option[CompositeOperation].
// You should never need to call this method directly.
func (j jsiiProxy_CompositeOperation) FromOption__() CompositeOperation {
	var j_ CompositeOperation = &j
	return j_
}

// Style of .toString() output for CompositeOperation.
type CompositeOperation_CompositionStringStyle string

const (
	CompositeOperation_CompositionStringStyle_NORMAL CompositeOperation_CompositionStringStyle = "NORMAL"
	CompositeOperation_CompositionStringStyle_DECORATED CompositeOperation_CompositionStringStyle = "DECORATED"
)

// FromOption__ unwraps an CompositeOperation_CompositionStringStyle from an Option[CompositeOperation_CompositionStringStyle].
// You should never need to call this method directly.
func (c CompositeOperation_CompositionStringStyle) FromOption__() CompositeOperation_CompositionStringStyle {
	return c
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/composition/composition.init.go 1`] = `
package composition

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterClass[CompositeOperation](
		"jsii-calc.composition.CompositeOperation",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "decorationPostfixes", GoGetter: "DecorationPostfixes"},
			_jsii_.MemberProperty{JsiiProperty: "decorationPrefixes", GoGetter: "DecorationPrefixes"},
			_jsii_.MemberProperty{JsiiProperty: "expression", GoGetter: "Expression"},
			_jsii_.MemberProperty{JsiiProperty: "stringStyle", GoGetter: "StringStyle"},
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_CompositeOperation{}
			_jsii_.InitJsiiProxy(&j.Type__scopejsiicalclibOperation)
			return &j
		},
	)
	_jsii_.RegisterEnum[CompositeOperation_CompositionStringStyle](
		"jsii-calc.composition.CompositeOperation.CompositionStringStyle",
		_init_.Initialize,
		map[string]interface{}{
			"NORMAL": CompositeOperation_CompositionStringStyle_NORMAL,
			"DECORATED": CompositeOperation_CompositionStringStyle_DECORATED,
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/composition/internal/types.go 1`] = `
package internal
import (
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib"
)
type Type__scopejsiicalclibOperation = scopejsiicalclib.Operation

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/derivedclasshasnoproperties/derivedclasshasnoproperties.go 1`] = `
package derivedclasshasnoproperties

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

type Base interface {
	Prop() _api_.String
	SetProp(val _api_.String)
}

// The jsii proxy struct for Base
type jsiiProxy_Base struct {
	_ byte // padding
}

func (j *jsiiProxy_Base) Prop() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"prop",
	)
}


func NewBase() Base {
	_init_.Initialize()

	j := jsiiProxy_Base{}

	_jsii_.Create(
		"jsii-calc.DerivedClassHasNoProperties.Base",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewBase_Override(b Base) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DerivedClassHasNoProperties.Base",
		nil, // no parameters
		b,
	)
}

func (j *jsiiProxy_Base) SetProp(val _api_.String) {
	_jsii_.Set(
		j,
		"prop",
		val,
	)
}

// FromOption__ unwraps an Base from an Option[Base].
// You should never need to call this method directly.
func (j jsiiProxy_Base) FromOption__() Base {
	var j_ Base = &j
	return j_
}

type Derived interface {
	Base
	Prop() _api_.String
	SetProp(val _api_.String)
}

// The jsii proxy struct for Derived
type jsiiProxy_Derived struct {
	jsiiProxy_Base
}

func (j *jsiiProxy_Derived) Prop() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"prop",
	)
}


func NewDerived() Derived {
	_init_.Initialize()

	j := jsiiProxy_Derived{}

	_jsii_.Create(
		"jsii-calc.DerivedClassHasNoProperties.Derived",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewDerived_Override(d Derived) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DerivedClassHasNoProperties.Derived",
		nil, // no parameters
		d,
	)
}

func (j *jsiiProxy_Derived) SetProp(val _api_.String) {
	_jsii_.Set(
		j,
		"prop",
		val,
	)
}

// FromOption__ unwraps an Derived from an Option[Derived].
// You should never need to call this method directly.
func (j jsiiProxy_Derived) FromOption__() Derived {
	var j_ Derived = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/derivedclasshasnoproperties/derivedclasshasnoproperties.init.go 1`] = `
package derivedclasshasnoproperties

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[Base](
		"jsii-calc.DerivedClassHasNoProperties.Base",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "prop", GoGetter: "Prop"},
		},
		func() interface{} {
			return &jsiiProxy_Base{}
		},
	)
	_jsii_.RegisterClass[Derived](
		"jsii-calc.DerivedClassHasNoProperties.Derived",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "prop", GoGetter: "Prop"},
		},
		func() interface{} {
			j := jsiiProxy_Derived{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_Base)
			return &j
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/go.mod 1`] = `
module github.com/aws/jsii/jsii-calc/go/jsiicalc/v3

go 1.18

require (
	github.com/aws/jsii-runtime-go v0.0.0
	github.com/aws/jsii/jsii-calc/go/jcb v0.0.0
	github.com/aws/jsii/jsii-calc/go/scopejsiicalclib v0.0.0-devpreview
	github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2 v2.1.1 // indirect
)

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/interfaceinnamespaceincludesclasses/interfaceinnamespaceincludesclasses.go 1`] = `
package interfaceinnamespaceincludesclasses

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

type Foo interface {
	Bar() _api_.Option[_api_.String]
	SetBar(val _api_.Option[_api_.String])
}

// The jsii proxy struct for Foo
type jsiiProxy_Foo struct {
	_ byte // padding
}

func (j *jsiiProxy_Foo) Bar() _api_.Option[_api_.String] {
	return _jsii_.Get[_api_.Option[_api_.String]](
		j,
		"bar",
	)
}


func NewFoo() Foo {
	_init_.Initialize()

	j := jsiiProxy_Foo{}

	_jsii_.Create(
		"jsii-calc.InterfaceInNamespaceIncludesClasses.Foo",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewFoo_Override(f Foo) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.InterfaceInNamespaceIncludesClasses.Foo",
		nil, // no parameters
		f,
	)
}

func (j *jsiiProxy_Foo) SetBar(val _api_.Option[_api_.String]) {
	_jsii_.Set(
		j,
		"bar",
		val,
	)
}

// FromOption__ unwraps an Foo from an Option[Foo].
// You should never need to call this method directly.
func (j jsiiProxy_Foo) FromOption__() Foo {
	var j_ Foo = &j
	return j_
}

type Hello struct {
	Foo _api_.Number \`json:"foo"\`
}

// FromOption__ unwraps an Hello from an Option[Hello].
// You should never need to call this method directly.
func (h Hello) FromOption__() Hello {
	return h
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/interfaceinnamespaceincludesclasses/interfaceinnamespaceincludesclasses.init.go 1`] = `
package interfaceinnamespaceincludesclasses

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterClass[Foo](
		"jsii-calc.InterfaceInNamespaceIncludesClasses.Foo",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "bar", GoGetter: "Bar"},
		},
		func() interface{} {
			return &jsiiProxy_Foo{}
		},
	)
	_jsii_.RegisterStruct[Hello](
		"jsii-calc.InterfaceInNamespaceIncludesClasses.Hello",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/interfaceinnamespaceonlyinterface/interfaceinnamespaceonlyinterface.go 1`] = `
package interfaceinnamespaceonlyinterface

import (
	_api_ "github.com/aws/jsii-runtime-go"
)

type Hello struct {
	Foo _api_.Number \`json:"foo"\`
}

// FromOption__ unwraps an Hello from an Option[Hello].
// You should never need to call this method directly.
func (h Hello) FromOption__() Hello {
	return h
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/interfaceinnamespaceonlyinterface/interfaceinnamespaceonlyinterface.init.go 1`] = `
package interfaceinnamespaceonlyinterface

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterStruct[Hello](
		"jsii-calc.InterfaceInNamespaceOnlyInterface.Hello",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/internal/types.go 1`] = `
package internal
import (
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/composition"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib/customsubmodulename"
)
type Type__scopejsiicalclibOperation = scopejsiicalclib.Operation
type Type__scopejsiicalclibIFriendly = scopejsiicalclib.IFriendly
type Type__compositionCompositeOperation = composition.CompositeOperation
type Type__customsubmodulenameIReflectable = customsubmodulename.IReflectable

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/jsii/jsii.go 1`] = `
// Package jsii contains the functionaility needed for jsii packages to
// initialize their dependencies and themselves. Users should never need to use this package
// directly. If you find you need to - please report a bug at
// https://github.com/aws/jsii/issues/new/choose
package jsii

import (
	_                "embed"

	_jsii_           "github.com/aws/jsii-runtime-go/runtime"

	jcb              "github.com/aws/jsii/jsii-calc/go/jcb/jsii"
	scopejsiicalclib "github.com/aws/jsii/jsii-calc/go/scopejsiicalclib/jsii"
)

//go:embed jsii-calc-3.20.120.tgz
var tarball []byte

// Initialize loads the necessary packages in the @jsii/kernel to support the enclosing module.
// The implementation is idempotent (and hence safe to be called over and over).
func Initialize() {
	// Ensure all dependencies are initialized
	jcb.Initialize()
	scopejsiicalclib.Initialize()

	// Load this library into the kernel
	_jsii_.Load("jsii-calc", "3.20.120", tarball)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/jsii/jsii-calc-3.20.120.tgz 1`] = `go/jsiicalc/jsii/jsii-calc-3.20.120.tgz is a tarball`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/jsiicalc.go 1`] = `
// A simple calcuator built on JSII.
package jsiicalc

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jcb"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/composition"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/internal"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib/customsubmodulename"
)

type AbstractClass interface {
	AbstractClassBase
	IInterfaceImplementedByAbstractClass
	AbstractProperty() _api_.String
	PropFromInterface() _api_.String
	AbstractMethod(name _api_.String) _api_.String
	NonAbstractMethod() _api_.Number
}

// The jsii proxy struct for AbstractClass
type jsiiProxy_AbstractClass struct {
	jsiiProxy_AbstractClassBase
	jsiiProxy_IInterfaceImplementedByAbstractClass
}

func (j *jsiiProxy_AbstractClass) AbstractProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"abstractProperty",
	)
}

func (j *jsiiProxy_AbstractClass) PropFromInterface() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"propFromInterface",
	)
}


func NewAbstractClass_Override(a AbstractClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.AbstractClass",
		nil, // no parameters
		a,
	)
}

func (a *jsiiProxy_AbstractClass) AbstractMethod(name _api_.String) _api_.String {
	return _jsii_.Invoke[_api_.String](
		a,
		"abstractMethod",
		[]interface{}{name},
	)
}

func (a *jsiiProxy_AbstractClass) NonAbstractMethod() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		a,
		"nonAbstractMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an AbstractClass from an Option[AbstractClass].
// You should never need to call this method directly.
func (j jsiiProxy_AbstractClass) FromOption__() AbstractClass {
	var j_ AbstractClass = &j
	return j_
}

type AbstractClassBase interface {
	AbstractProperty() _api_.String
}

// The jsii proxy struct for AbstractClassBase
type jsiiProxy_AbstractClassBase struct {
	_ byte // padding
}

func (j *jsiiProxy_AbstractClassBase) AbstractProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"abstractProperty",
	)
}


func NewAbstractClassBase_Override(a AbstractClassBase) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.AbstractClassBase",
		nil, // no parameters
		a,
	)
}

// FromOption__ unwraps an AbstractClassBase from an Option[AbstractClassBase].
// You should never need to call this method directly.
func (j jsiiProxy_AbstractClassBase) FromOption__() AbstractClassBase {
	var j_ AbstractClassBase = &j
	return j_
}

type AbstractClassReturner interface {
	ReturnAbstractFromProperty() AbstractClassBase
	GiveMeAbstract() AbstractClass
	GiveMeInterface() IInterfaceImplementedByAbstractClass
}

// The jsii proxy struct for AbstractClassReturner
type jsiiProxy_AbstractClassReturner struct {
	_ byte // padding
}

func (j *jsiiProxy_AbstractClassReturner) ReturnAbstractFromProperty() AbstractClassBase {
	return _jsii_.Get[AbstractClassBase](
		j,
		"returnAbstractFromProperty",
	)
}


func NewAbstractClassReturner() AbstractClassReturner {
	_init_.Initialize()

	j := jsiiProxy_AbstractClassReturner{}

	_jsii_.Create(
		"jsii-calc.AbstractClassReturner",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewAbstractClassReturner_Override(a AbstractClassReturner) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.AbstractClassReturner",
		nil, // no parameters
		a,
	)
}

func (a *jsiiProxy_AbstractClassReturner) GiveMeAbstract() AbstractClass {
	return _jsii_.Invoke[AbstractClass](
		a,
		"giveMeAbstract",
		nil, // no parameters
	)
}

func (a *jsiiProxy_AbstractClassReturner) GiveMeInterface() IInterfaceImplementedByAbstractClass {
	return _jsii_.Invoke[IInterfaceImplementedByAbstractClass](
		a,
		"giveMeInterface",
		nil, // no parameters
	)
}

// FromOption__ unwraps an AbstractClassReturner from an Option[AbstractClassReturner].
// You should never need to call this method directly.
func (j jsiiProxy_AbstractClassReturner) FromOption__() AbstractClassReturner {
	var j_ AbstractClassReturner = &j
	return j_
}

// Ensures abstract members implementations correctly register overrides in various languages.
type AbstractSuite interface {
	Property() _api_.String
	SetProperty(val _api_.String)
	SomeMethod(str _api_.String) _api_.String
	WorkItAll(seed _api_.String) _api_.String
}

// The jsii proxy struct for AbstractSuite
type jsiiProxy_AbstractSuite struct {
	_ byte // padding
}

func (j *jsiiProxy_AbstractSuite) Property() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"property",
	)
}


func NewAbstractSuite_Override(a AbstractSuite) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.AbstractSuite",
		nil, // no parameters
		a,
	)
}

func (j *jsiiProxy_AbstractSuite) SetProperty(val _api_.String) {
	_jsii_.Set(
		j,
		"property",
		val,
	)
}

func (a *jsiiProxy_AbstractSuite) SomeMethod(str _api_.String) _api_.String {
	return _jsii_.Invoke[_api_.String](
		a,
		"someMethod",
		[]interface{}{str},
	)
}

// Sets \`seed\` to \`this.property\`, then calls \`someMethod\` with \`this.property\` and returns the result.
func (a *jsiiProxy_AbstractSuite) WorkItAll(seed _api_.String) _api_.String {
	return _jsii_.Invoke[_api_.String](
		a,
		"workItAll",
		[]interface{}{seed},
	)
}

// FromOption__ unwraps an AbstractSuite from an Option[AbstractSuite].
// You should never need to call this method directly.
func (j jsiiProxy_AbstractSuite) FromOption__() AbstractSuite {
	var j_ AbstractSuite = &j
	return j_
}

// The "+" binary operation.
type Add interface {
	BinaryOperation
	Lhs() scopejsiicalclib.NumericValue
	Rhs() scopejsiicalclib.NumericValue
	Value() _api_.Number
	Hello() _api_.String
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for Add
type jsiiProxy_Add struct {
	jsiiProxy_BinaryOperation
}

func (j *jsiiProxy_Add) Lhs() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"lhs",
	)
}

func (j *jsiiProxy_Add) Rhs() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"rhs",
	)
}

func (j *jsiiProxy_Add) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


// Creates a BinaryOperation.
func NewAdd(lhs scopejsiicalclib.NumericValue, rhs scopejsiicalclib.NumericValue) Add {
	_init_.Initialize()

	if lhs == nil { panic("Parameters \\"lhs\\" is required (received nil)") }
	if rhs == nil { panic("Parameters \\"rhs\\" is required (received nil)") }
	j := jsiiProxy_Add{}

	_jsii_.Create(
		"jsii-calc.Add",
		[]interface{}{lhs, rhs},
		&j,
	)

	return &j
}

// Creates a BinaryOperation.
func NewAdd_Override(a Add, lhs scopejsiicalclib.NumericValue, rhs scopejsiicalclib.NumericValue) {
	_init_.Initialize()

	if lhs == nil { panic("Parameters \\"lhs\\" is required (received nil)") }
	if rhs == nil { panic("Parameters \\"rhs\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.Add",
		[]interface{}{lhs, rhs},
		a,
	)
}

// (deprecated) Say hello!
func (a *jsiiProxy_Add) Hello() _api_.String {
	return _jsii_.Invoke[_api_.String](
		a,
		"hello",
		nil, // no parameters
	)
}

// (deprecated) String representation of the value.
func (a *jsiiProxy_Add) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		a,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (a *jsiiProxy_Add) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		a,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Add from an Option[Add].
// You should never need to call this method directly.
func (j jsiiProxy_Add) FromOption__() Add {
	var j_ Add = &j
	return j_
}

// This class includes property for all types supported by jsii.
//
// The setters will validate
// that the value set is of the expected type and throw otherwise.
type AllTypes interface {
	AnyArrayProperty() _api_.Slice[interface{}]
	SetAnyArrayProperty(val _api_.Slice[interface{}])
	AnyMapProperty() _api_.Map[interface{}]
	SetAnyMapProperty(val _api_.Map[interface{}])
	AnyProperty() interface{}
	SetAnyProperty(val interface{})
	ArrayProperty() _api_.Slice[_api_.String]
	SetArrayProperty(val _api_.Slice[_api_.String])
	BooleanProperty() _api_.Bool
	SetBooleanProperty(val _api_.Bool)
	DateProperty() _api_.Time
	SetDateProperty(val _api_.Time)
	EnumProperty() AllTypesEnum
	SetEnumProperty(val AllTypesEnum)
	EnumPropertyValue() _api_.Number
	JsonProperty() _api_.Json
	SetJsonProperty(val _api_.Json)
	MapProperty() _api_.Map[scopejsiicalclib.Number]
	SetMapProperty(val _api_.Map[scopejsiicalclib.Number])
	NumberProperty() _api_.Number
	SetNumberProperty(val _api_.Number)
	OptionalEnumValue() _api_.Option[StringEnum]
	SetOptionalEnumValue(val _api_.Option[StringEnum])
	StringProperty() _api_.String
	SetStringProperty(val _api_.String)
	UnionArrayProperty() _api_.Slice[interface{}]
	SetUnionArrayProperty(val _api_.Slice[interface{}])
	UnionMapProperty() _api_.Map[interface{}]
	SetUnionMapProperty(val _api_.Map[interface{}])
	UnionProperty() interface{}
	SetUnionProperty(val interface{})
	UnknownArrayProperty() _api_.Slice[interface{}]
	SetUnknownArrayProperty(val _api_.Slice[interface{}])
	UnknownMapProperty() _api_.Map[interface{}]
	SetUnknownMapProperty(val _api_.Map[interface{}])
	UnknownProperty() interface{}
	SetUnknownProperty(val interface{})
	AnyIn(inp interface{})
	AnyOut() interface{}
	EnumMethod(value StringEnum) StringEnum
}

// The jsii proxy struct for AllTypes
type jsiiProxy_AllTypes struct {
	_ byte // padding
}

func (j *jsiiProxy_AllTypes) AnyArrayProperty() _api_.Slice[interface{}] {
	return _jsii_.Get[_api_.Slice[interface{}]](
		j,
		"anyArrayProperty",
	)
}

func (j *jsiiProxy_AllTypes) AnyMapProperty() _api_.Map[interface{}] {
	return _jsii_.Get[_api_.Map[interface{}]](
		j,
		"anyMapProperty",
	)
}

func (j *jsiiProxy_AllTypes) AnyProperty() interface{} {
	return _jsii_.Get[interface{}](
		j,
		"anyProperty",
	)
}

func (j *jsiiProxy_AllTypes) ArrayProperty() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"arrayProperty",
	)
}

func (j *jsiiProxy_AllTypes) BooleanProperty() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"booleanProperty",
	)
}

func (j *jsiiProxy_AllTypes) DateProperty() _api_.Time {
	return _jsii_.Get[_api_.Time](
		j,
		"dateProperty",
	)
}

func (j *jsiiProxy_AllTypes) EnumProperty() AllTypesEnum {
	return _jsii_.Get[AllTypesEnum](
		j,
		"enumProperty",
	)
}

func (j *jsiiProxy_AllTypes) EnumPropertyValue() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"enumPropertyValue",
	)
}

func (j *jsiiProxy_AllTypes) JsonProperty() _api_.Json {
	return _jsii_.Get[_api_.Json](
		j,
		"jsonProperty",
	)
}

func (j *jsiiProxy_AllTypes) MapProperty() _api_.Map[scopejsiicalclib.Number] {
	return _jsii_.Get[_api_.Map[scopejsiicalclib.Number]](
		j,
		"mapProperty",
	)
}

func (j *jsiiProxy_AllTypes) NumberProperty() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"numberProperty",
	)
}

func (j *jsiiProxy_AllTypes) OptionalEnumValue() _api_.Option[StringEnum] {
	return _jsii_.Get[_api_.Option[StringEnum]](
		j,
		"optionalEnumValue",
	)
}

func (j *jsiiProxy_AllTypes) StringProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"stringProperty",
	)
}

func (j *jsiiProxy_AllTypes) UnionArrayProperty() _api_.Slice[interface{}] {
	return _jsii_.Get[_api_.Slice[interface{}]](
		j,
		"unionArrayProperty",
	)
}

func (j *jsiiProxy_AllTypes) UnionMapProperty() _api_.Map[interface{}] {
	return _jsii_.Get[_api_.Map[interface{}]](
		j,
		"unionMapProperty",
	)
}

func (j *jsiiProxy_AllTypes) UnionProperty() interface{} {
	return _jsii_.Get[interface{}](
		j,
		"unionProperty",
	)
}

func (j *jsiiProxy_AllTypes) UnknownArrayProperty() _api_.Slice[interface{}] {
	return _jsii_.Get[_api_.Slice[interface{}]](
		j,
		"unknownArrayProperty",
	)
}

func (j *jsiiProxy_AllTypes) UnknownMapProperty() _api_.Map[interface{}] {
	return _jsii_.Get[_api_.Map[interface{}]](
		j,
		"unknownMapProperty",
	)
}

func (j *jsiiProxy_AllTypes) UnknownProperty() interface{} {
	return _jsii_.Get[interface{}](
		j,
		"unknownProperty",
	)
}


func NewAllTypes() AllTypes {
	_init_.Initialize()

	j := jsiiProxy_AllTypes{}

	_jsii_.Create(
		"jsii-calc.AllTypes",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewAllTypes_Override(a AllTypes) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.AllTypes",
		nil, // no parameters
		a,
	)
}

func (j *jsiiProxy_AllTypes) SetAnyArrayProperty(val _api_.Slice[interface{}]) {
	_jsii_.Set(
		j,
		"anyArrayProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetAnyMapProperty(val _api_.Map[interface{}]) {
	_jsii_.Set(
		j,
		"anyMapProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetAnyProperty(val interface{}) {
	_jsii_.Set(
		j,
		"anyProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetArrayProperty(val _api_.Slice[_api_.String]) {
	_jsii_.Set(
		j,
		"arrayProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetBooleanProperty(val _api_.Bool) {
	_jsii_.Set(
		j,
		"booleanProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetDateProperty(val _api_.Time) {
	_jsii_.Set(
		j,
		"dateProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetEnumProperty(val AllTypesEnum) {
	_jsii_.Set(
		j,
		"enumProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetJsonProperty(val _api_.Json) {
	_jsii_.Set(
		j,
		"jsonProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetMapProperty(val _api_.Map[scopejsiicalclib.Number]) {
	_jsii_.Set(
		j,
		"mapProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetNumberProperty(val _api_.Number) {
	_jsii_.Set(
		j,
		"numberProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetOptionalEnumValue(val _api_.Option[StringEnum]) {
	_jsii_.Set(
		j,
		"optionalEnumValue",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetStringProperty(val _api_.String) {
	_jsii_.Set(
		j,
		"stringProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetUnionArrayProperty(val _api_.Slice[interface{}]) {
	_jsii_.Set(
		j,
		"unionArrayProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetUnionMapProperty(val _api_.Map[interface{}]) {
	_jsii_.Set(
		j,
		"unionMapProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetUnionProperty(val interface{}) {
	_jsii_.Set(
		j,
		"unionProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetUnknownArrayProperty(val _api_.Slice[interface{}]) {
	_jsii_.Set(
		j,
		"unknownArrayProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetUnknownMapProperty(val _api_.Map[interface{}]) {
	_jsii_.Set(
		j,
		"unknownMapProperty",
		val,
	)
}

func (j *jsiiProxy_AllTypes) SetUnknownProperty(val interface{}) {
	_jsii_.Set(
		j,
		"unknownProperty",
		val,
	)
}

func (a *jsiiProxy_AllTypes) AnyIn(inp interface{}) {
	_jsii_.InvokeVoid(
		a,
		"anyIn",
		[]interface{}{inp},
	)
}

func (a *jsiiProxy_AllTypes) AnyOut() interface{} {
	return _jsii_.Invoke[interface{}](
		a,
		"anyOut",
		nil, // no parameters
	)
}

func (a *jsiiProxy_AllTypes) EnumMethod(value StringEnum) StringEnum {
	return _jsii_.Invoke[StringEnum](
		a,
		"enumMethod",
		[]interface{}{value},
	)
}

// FromOption__ unwraps an AllTypes from an Option[AllTypes].
// You should never need to call this method directly.
func (j jsiiProxy_AllTypes) FromOption__() AllTypes {
	var j_ AllTypes = &j
	return j_
}

type AllTypesEnum string

const (
	AllTypesEnum_MY_ENUM_VALUE AllTypesEnum = "MY_ENUM_VALUE"
	AllTypesEnum_YOUR_ENUM_VALUE AllTypesEnum = "YOUR_ENUM_VALUE"
	AllTypesEnum_THIS_IS_GREAT AllTypesEnum = "THIS_IS_GREAT"
)

// FromOption__ unwraps an AllTypesEnum from an Option[AllTypesEnum].
// You should never need to call this method directly.
func (a AllTypesEnum) FromOption__() AllTypesEnum {
	return a
}

type AllowedMethodNames interface {
	GetBar(_p1 _api_.String, _p2 _api_.Number)
	GetFoo(withParam _api_.String) _api_.String
	SetBar(_x _api_.String, _y _api_.Number, _z _api_.Bool)
	SetFoo(_x _api_.String, _y _api_.Number)
}

// The jsii proxy struct for AllowedMethodNames
type jsiiProxy_AllowedMethodNames struct {
	_ byte // padding
}

func NewAllowedMethodNames() AllowedMethodNames {
	_init_.Initialize()

	j := jsiiProxy_AllowedMethodNames{}

	_jsii_.Create(
		"jsii-calc.AllowedMethodNames",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewAllowedMethodNames_Override(a AllowedMethodNames) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.AllowedMethodNames",
		nil, // no parameters
		a,
	)
}

func (a *jsiiProxy_AllowedMethodNames) GetBar(_p1 _api_.String, _p2 _api_.Number) {
	_jsii_.InvokeVoid(
		a,
		"getBar",
		[]interface{}{_p1, _p2},
	)
}

// getXxx() is not allowed (see negatives), but getXxx(a, ...) is okay.
func (a *jsiiProxy_AllowedMethodNames) GetFoo(withParam _api_.String) _api_.String {
	return _jsii_.Invoke[_api_.String](
		a,
		"getFoo",
		[]interface{}{withParam},
	)
}

func (a *jsiiProxy_AllowedMethodNames) SetBar(_x _api_.String, _y _api_.Number, _z _api_.Bool) {
	_jsii_.InvokeVoid(
		a,
		"setBar",
		[]interface{}{_x, _y, _z},
	)
}

// setFoo(x) is not allowed (see negatives), but setXxx(a, b, ...) is okay.
func (a *jsiiProxy_AllowedMethodNames) SetFoo(_x _api_.String, _y _api_.Number) {
	_jsii_.InvokeVoid(
		a,
		"setFoo",
		[]interface{}{_x, _y},
	)
}

// FromOption__ unwraps an AllowedMethodNames from an Option[AllowedMethodNames].
// You should never need to call this method directly.
func (j jsiiProxy_AllowedMethodNames) FromOption__() AllowedMethodNames {
	var j_ AllowedMethodNames = &j
	return j_
}

type AmbiguousParameters interface {
	Props() StructParameterType
	Scope() Bell
}

// The jsii proxy struct for AmbiguousParameters
type jsiiProxy_AmbiguousParameters struct {
	_ byte // padding
}

func (j *jsiiProxy_AmbiguousParameters) Props() StructParameterType {
	return _jsii_.Get[StructParameterType](
		j,
		"props",
	)
}

func (j *jsiiProxy_AmbiguousParameters) Scope() Bell {
	return _jsii_.Get[Bell](
		j,
		"scope",
	)
}


func NewAmbiguousParameters(scope Bell, props StructParameterType) AmbiguousParameters {
	_init_.Initialize()

	if scope == nil { panic("Parameters \\"scope\\" is required (received nil)") }
	j := jsiiProxy_AmbiguousParameters{}

	_jsii_.Create(
		"jsii-calc.AmbiguousParameters",
		[]interface{}{scope, props},
		&j,
	)

	return &j
}

func NewAmbiguousParameters_Override(a AmbiguousParameters, scope Bell, props StructParameterType) {
	_init_.Initialize()

	if scope == nil { panic("Parameters \\"scope\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.AmbiguousParameters",
		[]interface{}{scope, props},
		a,
	)
}

// FromOption__ unwraps an AmbiguousParameters from an Option[AmbiguousParameters].
// You should never need to call this method directly.
func (j jsiiProxy_AmbiguousParameters) FromOption__() AmbiguousParameters {
	var j_ AmbiguousParameters = &j
	return j_
}

type AnonymousImplementationProvider interface {
	IAnonymousImplementationProvider
	ProvideAsClass() Implementation
	ProvideAsInterface() IAnonymouslyImplementMe
}

// The jsii proxy struct for AnonymousImplementationProvider
type jsiiProxy_AnonymousImplementationProvider struct {
	jsiiProxy_IAnonymousImplementationProvider
}

func NewAnonymousImplementationProvider() AnonymousImplementationProvider {
	_init_.Initialize()

	j := jsiiProxy_AnonymousImplementationProvider{}

	_jsii_.Create(
		"jsii-calc.AnonymousImplementationProvider",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewAnonymousImplementationProvider_Override(a AnonymousImplementationProvider) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.AnonymousImplementationProvider",
		nil, // no parameters
		a,
	)
}

func (a *jsiiProxy_AnonymousImplementationProvider) ProvideAsClass() Implementation {
	return _jsii_.Invoke[Implementation](
		a,
		"provideAsClass",
		nil, // no parameters
	)
}

func (a *jsiiProxy_AnonymousImplementationProvider) ProvideAsInterface() IAnonymouslyImplementMe {
	return _jsii_.Invoke[IAnonymouslyImplementMe](
		a,
		"provideAsInterface",
		nil, // no parameters
	)
}

// FromOption__ unwraps an AnonymousImplementationProvider from an Option[AnonymousImplementationProvider].
// You should never need to call this method directly.
func (j jsiiProxy_AnonymousImplementationProvider) FromOption__() AnonymousImplementationProvider {
	var j_ AnonymousImplementationProvider = &j
	return j_
}

type AsyncVirtualMethods interface {
	CallMe() _api_.Number
	CallMe2() _api_.Number
	CallMeDoublePromise() _api_.Number
	DontOverrideMe() _api_.Number
	OverrideMe(mult _api_.Number) _api_.Number
	OverrideMeToo() _api_.Number
}

// The jsii proxy struct for AsyncVirtualMethods
type jsiiProxy_AsyncVirtualMethods struct {
	_ byte // padding
}

func NewAsyncVirtualMethods() AsyncVirtualMethods {
	_init_.Initialize()

	j := jsiiProxy_AsyncVirtualMethods{}

	_jsii_.Create(
		"jsii-calc.AsyncVirtualMethods",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewAsyncVirtualMethods_Override(a AsyncVirtualMethods) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.AsyncVirtualMethods",
		nil, // no parameters
		a,
	)
}

func (a *jsiiProxy_AsyncVirtualMethods) CallMe() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		a,
		"callMe",
		nil, // no parameters
	)
}

// Just calls "overrideMeToo".
func (a *jsiiProxy_AsyncVirtualMethods) CallMe2() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		a,
		"callMe2",
		nil, // no parameters
	)
}

// This method calls the "callMe" async method indirectly, which will then invoke a virtual method.
//
// This is a "double promise" situation, which
// means that callbacks are not going to be available immediate, but only
// after an "immediates" cycle.
func (a *jsiiProxy_AsyncVirtualMethods) CallMeDoublePromise() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		a,
		"callMeDoublePromise",
		nil, // no parameters
	)
}

func (a *jsiiProxy_AsyncVirtualMethods) DontOverrideMe() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		a,
		"dontOverrideMe",
		nil, // no parameters
	)
}

func (a *jsiiProxy_AsyncVirtualMethods) OverrideMe(mult _api_.Number) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		a,
		"overrideMe",
		[]interface{}{mult},
	)
}

func (a *jsiiProxy_AsyncVirtualMethods) OverrideMeToo() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		a,
		"overrideMeToo",
		nil, // no parameters
	)
}

// FromOption__ unwraps an AsyncVirtualMethods from an Option[AsyncVirtualMethods].
// You should never need to call this method directly.
func (j jsiiProxy_AsyncVirtualMethods) FromOption__() AsyncVirtualMethods {
	var j_ AsyncVirtualMethods = &j
	return j_
}

type AugmentableClass interface {
	MethodOne()
	MethodTwo()
}

// The jsii proxy struct for AugmentableClass
type jsiiProxy_AugmentableClass struct {
	_ byte // padding
}

func NewAugmentableClass() AugmentableClass {
	_init_.Initialize()

	j := jsiiProxy_AugmentableClass{}

	_jsii_.Create(
		"jsii-calc.AugmentableClass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewAugmentableClass_Override(a AugmentableClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.AugmentableClass",
		nil, // no parameters
		a,
	)
}

func (a *jsiiProxy_AugmentableClass) MethodOne() {
	_jsii_.InvokeVoid(
		a,
		"methodOne",
		nil, // no parameters
	)
}

func (a *jsiiProxy_AugmentableClass) MethodTwo() {
	_jsii_.InvokeVoid(
		a,
		"methodTwo",
		nil, // no parameters
	)
}

// FromOption__ unwraps an AugmentableClass from an Option[AugmentableClass].
// You should never need to call this method directly.
func (j jsiiProxy_AugmentableClass) FromOption__() AugmentableClass {
	var j_ AugmentableClass = &j
	return j_
}

type BaseJsii976 interface {
}

// The jsii proxy struct for BaseJsii976
type jsiiProxy_BaseJsii976 struct {
	_ byte // padding
}

func NewBaseJsii976() BaseJsii976 {
	_init_.Initialize()

	j := jsiiProxy_BaseJsii976{}

	_jsii_.Create(
		"jsii-calc.BaseJsii976",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewBaseJsii976_Override(b BaseJsii976) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.BaseJsii976",
		nil, // no parameters
		b,
	)
}

// FromOption__ unwraps an BaseJsii976 from an Option[BaseJsii976].
// You should never need to call this method directly.
func (j jsiiProxy_BaseJsii976) FromOption__() BaseJsii976 {
	var j_ BaseJsii976 = &j
	return j_
}

type Bell interface {
	IBell
	Rung() _api_.Bool
	SetRung(val _api_.Bool)
	Ring()
}

// The jsii proxy struct for Bell
type jsiiProxy_Bell struct {
	jsiiProxy_IBell
}

func (j *jsiiProxy_Bell) Rung() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"rung",
	)
}


func NewBell() Bell {
	_init_.Initialize()

	j := jsiiProxy_Bell{}

	_jsii_.Create(
		"jsii-calc.Bell",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewBell_Override(b Bell) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Bell",
		nil, // no parameters
		b,
	)
}

func (j *jsiiProxy_Bell) SetRung(val _api_.Bool) {
	_jsii_.Set(
		j,
		"rung",
		val,
	)
}

func (b *jsiiProxy_Bell) Ring() {
	_jsii_.InvokeVoid(
		b,
		"ring",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Bell from an Option[Bell].
// You should never need to call this method directly.
func (j jsiiProxy_Bell) FromOption__() Bell {
	var j_ Bell = &j
	return j_
}

// Represents an operation with two operands.
type BinaryOperation interface {
	scopejsiicalclib.Operation
	scopejsiicalclib.IFriendly
	Lhs() scopejsiicalclib.NumericValue
	Rhs() scopejsiicalclib.NumericValue
	Value() _api_.Number
	Hello() _api_.String
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for BinaryOperation
type jsiiProxy_BinaryOperation struct {
	internal.Type__scopejsiicalclibOperation
	internal.Type__scopejsiicalclibIFriendly
}

func (j *jsiiProxy_BinaryOperation) Lhs() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"lhs",
	)
}

func (j *jsiiProxy_BinaryOperation) Rhs() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"rhs",
	)
}

func (j *jsiiProxy_BinaryOperation) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


// Creates a BinaryOperation.
func NewBinaryOperation_Override(b BinaryOperation, lhs scopejsiicalclib.NumericValue, rhs scopejsiicalclib.NumericValue) {
	_init_.Initialize()

	if lhs == nil { panic("Parameters \\"lhs\\" is required (received nil)") }
	if rhs == nil { panic("Parameters \\"rhs\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.BinaryOperation",
		[]interface{}{lhs, rhs},
		b,
	)
}

// (deprecated) Say hello!
func (b *jsiiProxy_BinaryOperation) Hello() _api_.String {
	return _jsii_.Invoke[_api_.String](
		b,
		"hello",
		nil, // no parameters
	)
}

// String representation of the value.
// Deprecated.
func (b *jsiiProxy_BinaryOperation) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		b,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (b *jsiiProxy_BinaryOperation) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		b,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an BinaryOperation from an Option[BinaryOperation].
// You should never need to call this method directly.
func (j jsiiProxy_BinaryOperation) FromOption__() BinaryOperation {
	var j_ BinaryOperation = &j
	return j_
}

// See https://github.com/aws/aws-cdk/issues/7977.
type BurriedAnonymousObject interface {
	Check() _api_.Bool
	GiveItBack(value interface{}) interface{}
}

// The jsii proxy struct for BurriedAnonymousObject
type jsiiProxy_BurriedAnonymousObject struct {
	_ byte // padding
}

func NewBurriedAnonymousObject_Override(b BurriedAnonymousObject) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.BurriedAnonymousObject",
		nil, // no parameters
		b,
	)
}

func (b *jsiiProxy_BurriedAnonymousObject) Check() _api_.Bool {
	return _jsii_.Invoke[_api_.Bool](
		b,
		"check",
		nil, // no parameters
	)
}

// Implement this method and have it return it's parameter.
//
// Returns: \`value\`
func (b *jsiiProxy_BurriedAnonymousObject) GiveItBack(value interface{}) interface{} {
	return _jsii_.Invoke[interface{}](
		b,
		"giveItBack",
		[]interface{}{value},
	)
}

// FromOption__ unwraps an BurriedAnonymousObject from an Option[BurriedAnonymousObject].
// You should never need to call this method directly.
func (j jsiiProxy_BurriedAnonymousObject) FromOption__() BurriedAnonymousObject {
	var j_ BurriedAnonymousObject = &j
	return j_
}

// A calculator which maintains a current value and allows adding operations.
//
// Here's how you use it:
//
// \`\`\`ts
// const calculator = new calc.Calculator();
// calculator.add(5);
// calculator.mul(3);
// console.log(calculator.expression.value);
// \`\`\`
//
// I will repeat this example again, but in an @example tag.
//
// TODO: EXAMPLE
//
type Calculator interface {
	composition.CompositeOperation
	Curr() scopejsiicalclib.NumericValue
	SetCurr(val scopejsiicalclib.NumericValue)
	DecorationPostfixes() _api_.Slice[_api_.String]
	SetDecorationPostfixes(val _api_.Slice[_api_.String])
	DecorationPrefixes() _api_.Slice[_api_.String]
	SetDecorationPrefixes(val _api_.Slice[_api_.String])
	Expression() scopejsiicalclib.NumericValue
	MaxValue() _api_.Option[_api_.Number]
	SetMaxValue(val _api_.Option[_api_.Number])
	OperationsLog() _api_.Slice[scopejsiicalclib.NumericValue]
	OperationsMap() _api_.Map[_api_.Slice[scopejsiicalclib.NumericValue]]
	StringStyle() composition.CompositeOperation_CompositionStringStyle
	SetStringStyle(val composition.CompositeOperation_CompositionStringStyle)
	UnionProperty() interface{}
	SetUnionProperty(val interface{})
	Value() _api_.Number
	Add(value _api_.Number)
	Mul(value _api_.Number)
	Neg()
	Pow(value _api_.Number)
	ReadUnionValue() _api_.Number
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for Calculator
type jsiiProxy_Calculator struct {
	internal.Type__compositionCompositeOperation
}

func (j *jsiiProxy_Calculator) Curr() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"curr",
	)
}

func (j *jsiiProxy_Calculator) DecorationPostfixes() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"decorationPostfixes",
	)
}

func (j *jsiiProxy_Calculator) DecorationPrefixes() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"decorationPrefixes",
	)
}

func (j *jsiiProxy_Calculator) Expression() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"expression",
	)
}

func (j *jsiiProxy_Calculator) MaxValue() _api_.Option[_api_.Number] {
	return _jsii_.Get[_api_.Option[_api_.Number]](
		j,
		"maxValue",
	)
}

func (j *jsiiProxy_Calculator) OperationsLog() _api_.Slice[scopejsiicalclib.NumericValue] {
	return _jsii_.Get[_api_.Slice[scopejsiicalclib.NumericValue]](
		j,
		"operationsLog",
	)
}

func (j *jsiiProxy_Calculator) OperationsMap() _api_.Map[_api_.Slice[scopejsiicalclib.NumericValue]] {
	return _jsii_.Get[_api_.Map[_api_.Slice[scopejsiicalclib.NumericValue]]](
		j,
		"operationsMap",
	)
}

func (j *jsiiProxy_Calculator) StringStyle() composition.CompositeOperation_CompositionStringStyle {
	return _jsii_.Get[composition.CompositeOperation_CompositionStringStyle](
		j,
		"stringStyle",
	)
}

func (j *jsiiProxy_Calculator) UnionProperty() interface{} {
	return _jsii_.Get[interface{}](
		j,
		"unionProperty",
	)
}

func (j *jsiiProxy_Calculator) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


// Creates a Calculator object.
func NewCalculator(props _api_.Option[CalculatorProps]) Calculator {
	_init_.Initialize()

	j := jsiiProxy_Calculator{}

	_jsii_.Create(
		"jsii-calc.Calculator",
		[]interface{}{props},
		&j,
	)

	return &j
}

// Creates a Calculator object.
func NewCalculator_Override(c Calculator, props _api_.Option[CalculatorProps]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Calculator",
		[]interface{}{props},
		c,
	)
}

func (j *jsiiProxy_Calculator) SetCurr(val scopejsiicalclib.NumericValue) {
	_jsii_.Set(
		j,
		"curr",
		val,
	)
}

func (j *jsiiProxy_Calculator) SetDecorationPostfixes(val _api_.Slice[_api_.String]) {
	_jsii_.Set(
		j,
		"decorationPostfixes",
		val,
	)
}

func (j *jsiiProxy_Calculator) SetDecorationPrefixes(val _api_.Slice[_api_.String]) {
	_jsii_.Set(
		j,
		"decorationPrefixes",
		val,
	)
}

func (j *jsiiProxy_Calculator) SetMaxValue(val _api_.Option[_api_.Number]) {
	_jsii_.Set(
		j,
		"maxValue",
		val,
	)
}

func (j *jsiiProxy_Calculator) SetStringStyle(val composition.CompositeOperation_CompositionStringStyle) {
	_jsii_.Set(
		j,
		"stringStyle",
		val,
	)
}

func (j *jsiiProxy_Calculator) SetUnionProperty(val interface{}) {
	_jsii_.Set(
		j,
		"unionProperty",
		val,
	)
}

// Adds a number to the current value.
func (c *jsiiProxy_Calculator) Add(value _api_.Number) {
	_jsii_.InvokeVoid(
		c,
		"add",
		[]interface{}{value},
	)
}

// Multiplies the current value by a number.
func (c *jsiiProxy_Calculator) Mul(value _api_.Number) {
	_jsii_.InvokeVoid(
		c,
		"mul",
		[]interface{}{value},
	)
}

// Negates the current value.
func (c *jsiiProxy_Calculator) Neg() {
	_jsii_.InvokeVoid(
		c,
		"neg",
		nil, // no parameters
	)
}

// Raises the current value by a power.
func (c *jsiiProxy_Calculator) Pow(value _api_.Number) {
	_jsii_.InvokeVoid(
		c,
		"pow",
		[]interface{}{value},
	)
}

// Returns teh value of the union property (if defined).
func (c *jsiiProxy_Calculator) ReadUnionValue() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		c,
		"readUnionValue",
		nil, // no parameters
	)
}

// (deprecated) String representation of the value.
func (c *jsiiProxy_Calculator) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		c,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (c *jsiiProxy_Calculator) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		c,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Calculator from an Option[Calculator].
// You should never need to call this method directly.
func (j jsiiProxy_Calculator) FromOption__() Calculator {
	var j_ Calculator = &j
	return j_
}

// Properties for Calculator.
type CalculatorProps struct {
	// The initial value of the calculator.
	//
	// NOTE: Any number works here, it's fine.
	InitialValue _api_.Option[_api_.Number] \`json:"initialValue"\`
	// The maximum value the calculator can store.
	MaximumValue _api_.Option[_api_.Number] \`json:"maximumValue"\`
}

// FromOption__ unwraps an CalculatorProps from an Option[CalculatorProps].
// You should never need to call this method directly.
func (c CalculatorProps) FromOption__() CalculatorProps {
	return c
}

type ChildStruct982 struct {
	Foo _api_.String \`json:"foo"\`
	Bar _api_.Number \`json:"bar"\`
}

// FromOption__ unwraps an ChildStruct982 from an Option[ChildStruct982].
// You should never need to call this method directly.
func (c ChildStruct982) FromOption__() ChildStruct982 {
	return c
}

type ClassThatImplementsTheInternalInterface interface {
	INonInternalInterface
	A() _api_.String
	SetA(val _api_.String)
	B() _api_.String
	SetB(val _api_.String)
	C() _api_.String
	SetC(val _api_.String)
	D() _api_.String
	SetD(val _api_.String)
}

// The jsii proxy struct for ClassThatImplementsTheInternalInterface
type jsiiProxy_ClassThatImplementsTheInternalInterface struct {
	jsiiProxy_INonInternalInterface
}

func (j *jsiiProxy_ClassThatImplementsTheInternalInterface) A() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"a",
	)
}

func (j *jsiiProxy_ClassThatImplementsTheInternalInterface) B() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"b",
	)
}

func (j *jsiiProxy_ClassThatImplementsTheInternalInterface) C() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"c",
	)
}

func (j *jsiiProxy_ClassThatImplementsTheInternalInterface) D() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"d",
	)
}


func NewClassThatImplementsTheInternalInterface() ClassThatImplementsTheInternalInterface {
	_init_.Initialize()

	j := jsiiProxy_ClassThatImplementsTheInternalInterface{}

	_jsii_.Create(
		"jsii-calc.ClassThatImplementsTheInternalInterface",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewClassThatImplementsTheInternalInterface_Override(c ClassThatImplementsTheInternalInterface) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ClassThatImplementsTheInternalInterface",
		nil, // no parameters
		c,
	)
}

func (j *jsiiProxy_ClassThatImplementsTheInternalInterface) SetA(val _api_.String) {
	_jsii_.Set(
		j,
		"a",
		val,
	)
}

func (j *jsiiProxy_ClassThatImplementsTheInternalInterface) SetB(val _api_.String) {
	_jsii_.Set(
		j,
		"b",
		val,
	)
}

func (j *jsiiProxy_ClassThatImplementsTheInternalInterface) SetC(val _api_.String) {
	_jsii_.Set(
		j,
		"c",
		val,
	)
}

func (j *jsiiProxy_ClassThatImplementsTheInternalInterface) SetD(val _api_.String) {
	_jsii_.Set(
		j,
		"d",
		val,
	)
}

// FromOption__ unwraps an ClassThatImplementsTheInternalInterface from an Option[ClassThatImplementsTheInternalInterface].
// You should never need to call this method directly.
func (j jsiiProxy_ClassThatImplementsTheInternalInterface) FromOption__() ClassThatImplementsTheInternalInterface {
	var j_ ClassThatImplementsTheInternalInterface = &j
	return j_
}

type ClassThatImplementsThePrivateInterface interface {
	INonInternalInterface
	A() _api_.String
	SetA(val _api_.String)
	B() _api_.String
	SetB(val _api_.String)
	C() _api_.String
	SetC(val _api_.String)
	E() _api_.String
	SetE(val _api_.String)
}

// The jsii proxy struct for ClassThatImplementsThePrivateInterface
type jsiiProxy_ClassThatImplementsThePrivateInterface struct {
	jsiiProxy_INonInternalInterface
}

func (j *jsiiProxy_ClassThatImplementsThePrivateInterface) A() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"a",
	)
}

func (j *jsiiProxy_ClassThatImplementsThePrivateInterface) B() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"b",
	)
}

func (j *jsiiProxy_ClassThatImplementsThePrivateInterface) C() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"c",
	)
}

func (j *jsiiProxy_ClassThatImplementsThePrivateInterface) E() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"e",
	)
}


func NewClassThatImplementsThePrivateInterface() ClassThatImplementsThePrivateInterface {
	_init_.Initialize()

	j := jsiiProxy_ClassThatImplementsThePrivateInterface{}

	_jsii_.Create(
		"jsii-calc.ClassThatImplementsThePrivateInterface",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewClassThatImplementsThePrivateInterface_Override(c ClassThatImplementsThePrivateInterface) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ClassThatImplementsThePrivateInterface",
		nil, // no parameters
		c,
	)
}

func (j *jsiiProxy_ClassThatImplementsThePrivateInterface) SetA(val _api_.String) {
	_jsii_.Set(
		j,
		"a",
		val,
	)
}

func (j *jsiiProxy_ClassThatImplementsThePrivateInterface) SetB(val _api_.String) {
	_jsii_.Set(
		j,
		"b",
		val,
	)
}

func (j *jsiiProxy_ClassThatImplementsThePrivateInterface) SetC(val _api_.String) {
	_jsii_.Set(
		j,
		"c",
		val,
	)
}

func (j *jsiiProxy_ClassThatImplementsThePrivateInterface) SetE(val _api_.String) {
	_jsii_.Set(
		j,
		"e",
		val,
	)
}

// FromOption__ unwraps an ClassThatImplementsThePrivateInterface from an Option[ClassThatImplementsThePrivateInterface].
// You should never need to call this method directly.
func (j jsiiProxy_ClassThatImplementsThePrivateInterface) FromOption__() ClassThatImplementsThePrivateInterface {
	var j_ ClassThatImplementsThePrivateInterface = &j
	return j_
}

type ClassWithCollections interface {
	Array() _api_.Slice[_api_.String]
	SetArray(val _api_.Slice[_api_.String])
	Map() _api_.Map[_api_.String]
	SetMap(val _api_.Map[_api_.String])
}

// The jsii proxy struct for ClassWithCollections
type jsiiProxy_ClassWithCollections struct {
	_ byte // padding
}

func (j *jsiiProxy_ClassWithCollections) Array() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"array",
	)
}

func (j *jsiiProxy_ClassWithCollections) Map() _api_.Map[_api_.String] {
	return _jsii_.Get[_api_.Map[_api_.String]](
		j,
		"map",
	)
}


func NewClassWithCollections(map_ _api_.Map[_api_.String], array _api_.Slice[_api_.String]) ClassWithCollections {
	_init_.Initialize()

	j := jsiiProxy_ClassWithCollections{}

	_jsii_.Create(
		"jsii-calc.ClassWithCollections",
		[]interface{}{map_, array},
		&j,
	)

	return &j
}

func NewClassWithCollections_Override(c ClassWithCollections, map_ _api_.Map[_api_.String], array _api_.Slice[_api_.String]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ClassWithCollections",
		[]interface{}{map_, array},
		c,
	)
}

func (j *jsiiProxy_ClassWithCollections) SetArray(val _api_.Slice[_api_.String]) {
	_jsii_.Set(
		j,
		"array",
		val,
	)
}

func (j *jsiiProxy_ClassWithCollections) SetMap(val _api_.Map[_api_.String]) {
	_jsii_.Set(
		j,
		"map",
		val,
	)
}

func ClassWithCollections_CreateAList() _api_.Slice[_api_.String] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Slice[_api_.String]](
		"jsii-calc.ClassWithCollections",
		"createAList",
		nil, // no parameters
	)
}

func ClassWithCollections_CreateAMap() _api_.Map[_api_.String] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Map[_api_.String]](
		"jsii-calc.ClassWithCollections",
		"createAMap",
		nil, // no parameters
	)
}

func ClassWithCollections_StaticArray() _api_.Slice[_api_.String] {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Slice[_api_.String]](
		"jsii-calc.ClassWithCollections",
		"staticArray",
	)
}

func ClassWithCollections_SetStaticArray(val _api_.Slice[_api_.String]) {
	_init_.Initialize()
	_jsii_.StaticSet(
		"jsii-calc.ClassWithCollections",
		"staticArray",
		val,
	)
}

func ClassWithCollections_StaticMap() _api_.Map[_api_.String] {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Map[_api_.String]](
		"jsii-calc.ClassWithCollections",
		"staticMap",
	)
}

func ClassWithCollections_SetStaticMap(val _api_.Map[_api_.String]) {
	_init_.Initialize()
	_jsii_.StaticSet(
		"jsii-calc.ClassWithCollections",
		"staticMap",
		val,
	)
}

// FromOption__ unwraps an ClassWithCollections from an Option[ClassWithCollections].
// You should never need to call this method directly.
func (j jsiiProxy_ClassWithCollections) FromOption__() ClassWithCollections {
	var j_ ClassWithCollections = &j
	return j_
}

type ClassWithContainerTypes interface {
	Array() _api_.Slice[DummyObj]
	Obj() _api_.Map[DummyObj]
	Props() _api_.Option[ContainerProps]
	Record() _api_.Map[DummyObj]
}

// The jsii proxy struct for ClassWithContainerTypes
type jsiiProxy_ClassWithContainerTypes struct {
	_ byte // padding
}

func (j *jsiiProxy_ClassWithContainerTypes) Array() _api_.Slice[DummyObj] {
	return _jsii_.Get[_api_.Slice[DummyObj]](
		j,
		"array",
	)
}

func (j *jsiiProxy_ClassWithContainerTypes) Obj() _api_.Map[DummyObj] {
	return _jsii_.Get[_api_.Map[DummyObj]](
		j,
		"obj",
	)
}

func (j *jsiiProxy_ClassWithContainerTypes) Props() _api_.Option[ContainerProps] {
	return _jsii_.Get[_api_.Option[ContainerProps]](
		j,
		"props",
	)
}

func (j *jsiiProxy_ClassWithContainerTypes) Record() _api_.Map[DummyObj] {
	return _jsii_.Get[_api_.Map[DummyObj]](
		j,
		"record",
	)
}


func NewClassWithContainerTypes(array _api_.Slice[DummyObj], record _api_.Map[DummyObj], obj _api_.Map[DummyObj], props _api_.Option[ContainerProps]) ClassWithContainerTypes {
	_init_.Initialize()

	j := jsiiProxy_ClassWithContainerTypes{}

	_jsii_.Create(
		"jsii-calc.ClassWithContainerTypes",
		[]interface{}{array, record, obj, props},
		&j,
	)

	return &j
}

func NewClassWithContainerTypes_Override(c ClassWithContainerTypes, array _api_.Slice[DummyObj], record _api_.Map[DummyObj], obj _api_.Map[DummyObj], props _api_.Option[ContainerProps]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ClassWithContainerTypes",
		[]interface{}{array, record, obj, props},
		c,
	)
}

// FromOption__ unwraps an ClassWithContainerTypes from an Option[ClassWithContainerTypes].
// You should never need to call this method directly.
func (j jsiiProxy_ClassWithContainerTypes) FromOption__() ClassWithContainerTypes {
	var j_ ClassWithContainerTypes = &j
	return j_
}

// This class has docs.
//
// The docs are great. They're a bunch of tags.
//
// TODO: EXAMPLE
//
// See: https://aws.amazon.com/
//
type ClassWithDocs interface {
}

// The jsii proxy struct for ClassWithDocs
type jsiiProxy_ClassWithDocs struct {
	_ byte // padding
}

func NewClassWithDocs() ClassWithDocs {
	_init_.Initialize()

	j := jsiiProxy_ClassWithDocs{}

	_jsii_.Create(
		"jsii-calc.ClassWithDocs",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewClassWithDocs_Override(c ClassWithDocs) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ClassWithDocs",
		nil, // no parameters
		c,
	)
}

// FromOption__ unwraps an ClassWithDocs from an Option[ClassWithDocs].
// You should never need to call this method directly.
func (j jsiiProxy_ClassWithDocs) FromOption__() ClassWithDocs {
	var j_ ClassWithDocs = &j
	return j_
}

type ClassWithJavaReservedWords interface {
	Int() _api_.String
	Import(assert _api_.String) _api_.String
}

// The jsii proxy struct for ClassWithJavaReservedWords
type jsiiProxy_ClassWithJavaReservedWords struct {
	_ byte // padding
}

func (j *jsiiProxy_ClassWithJavaReservedWords) Int() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"int",
	)
}


func NewClassWithJavaReservedWords(int _api_.String) ClassWithJavaReservedWords {
	_init_.Initialize()

	j := jsiiProxy_ClassWithJavaReservedWords{}

	_jsii_.Create(
		"jsii-calc.ClassWithJavaReservedWords",
		[]interface{}{int},
		&j,
	)

	return &j
}

func NewClassWithJavaReservedWords_Override(c ClassWithJavaReservedWords, int _api_.String) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ClassWithJavaReservedWords",
		[]interface{}{int},
		c,
	)
}

func (c *jsiiProxy_ClassWithJavaReservedWords) Import(assert _api_.String) _api_.String {
	return _jsii_.Invoke[_api_.String](
		c,
		"import",
		[]interface{}{assert},
	)
}

// FromOption__ unwraps an ClassWithJavaReservedWords from an Option[ClassWithJavaReservedWords].
// You should never need to call this method directly.
func (j jsiiProxy_ClassWithJavaReservedWords) FromOption__() ClassWithJavaReservedWords {
	var j_ ClassWithJavaReservedWords = &j
	return j_
}

type ClassWithMutableObjectLiteralProperty interface {
	MutableObject() IMutableObjectLiteral
	SetMutableObject(val IMutableObjectLiteral)
}

// The jsii proxy struct for ClassWithMutableObjectLiteralProperty
type jsiiProxy_ClassWithMutableObjectLiteralProperty struct {
	_ byte // padding
}

func (j *jsiiProxy_ClassWithMutableObjectLiteralProperty) MutableObject() IMutableObjectLiteral {
	return _jsii_.Get[IMutableObjectLiteral](
		j,
		"mutableObject",
	)
}


func NewClassWithMutableObjectLiteralProperty() ClassWithMutableObjectLiteralProperty {
	_init_.Initialize()

	j := jsiiProxy_ClassWithMutableObjectLiteralProperty{}

	_jsii_.Create(
		"jsii-calc.ClassWithMutableObjectLiteralProperty",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewClassWithMutableObjectLiteralProperty_Override(c ClassWithMutableObjectLiteralProperty) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ClassWithMutableObjectLiteralProperty",
		nil, // no parameters
		c,
	)
}

func (j *jsiiProxy_ClassWithMutableObjectLiteralProperty) SetMutableObject(val IMutableObjectLiteral) {
	_jsii_.Set(
		j,
		"mutableObject",
		val,
	)
}

// FromOption__ unwraps an ClassWithMutableObjectLiteralProperty from an Option[ClassWithMutableObjectLiteralProperty].
// You should never need to call this method directly.
func (j jsiiProxy_ClassWithMutableObjectLiteralProperty) FromOption__() ClassWithMutableObjectLiteralProperty {
	var j_ ClassWithMutableObjectLiteralProperty = &j
	return j_
}

// Class that implements interface properties automatically, but using a private constructor.
type ClassWithPrivateConstructorAndAutomaticProperties interface {
	IInterfaceWithProperties
	ReadOnlyString() _api_.String
	ReadWriteString() _api_.String
	SetReadWriteString(val _api_.String)
}

// The jsii proxy struct for ClassWithPrivateConstructorAndAutomaticProperties
type jsiiProxy_ClassWithPrivateConstructorAndAutomaticProperties struct {
	jsiiProxy_IInterfaceWithProperties
}

func (j *jsiiProxy_ClassWithPrivateConstructorAndAutomaticProperties) ReadOnlyString() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"readOnlyString",
	)
}

func (j *jsiiProxy_ClassWithPrivateConstructorAndAutomaticProperties) ReadWriteString() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"readWriteString",
	)
}


func (j *jsiiProxy_ClassWithPrivateConstructorAndAutomaticProperties) SetReadWriteString(val _api_.String) {
	_jsii_.Set(
		j,
		"readWriteString",
		val,
	)
}

func ClassWithPrivateConstructorAndAutomaticProperties_Create(readOnlyString _api_.String, readWriteString _api_.String) ClassWithPrivateConstructorAndAutomaticProperties {
	_init_.Initialize()

	return _jsii_.StaticInvoke[ClassWithPrivateConstructorAndAutomaticProperties](
		"jsii-calc.ClassWithPrivateConstructorAndAutomaticProperties",
		"create",
		[]interface{}{readOnlyString, readWriteString},
	)
}

// FromOption__ unwraps an ClassWithPrivateConstructorAndAutomaticProperties from an Option[ClassWithPrivateConstructorAndAutomaticProperties].
// You should never need to call this method directly.
func (j jsiiProxy_ClassWithPrivateConstructorAndAutomaticProperties) FromOption__() ClassWithPrivateConstructorAndAutomaticProperties {
	var j_ ClassWithPrivateConstructorAndAutomaticProperties = &j
	return j_
}

// This tries to confuse Jackson by having overloaded property setters.
// See: https://github.com/aws/aws-cdk/issues/4080
//
type ConfusingToJackson interface {
	UnionProperty() interface{}
	SetUnionProperty(val interface{})
}

// The jsii proxy struct for ConfusingToJackson
type jsiiProxy_ConfusingToJackson struct {
	_ byte // padding
}

func (j *jsiiProxy_ConfusingToJackson) UnionProperty() interface{} {
	return _jsii_.Get[interface{}](
		j,
		"unionProperty",
	)
}


func (j *jsiiProxy_ConfusingToJackson) SetUnionProperty(val interface{}) {
	_jsii_.Set(
		j,
		"unionProperty",
		val,
	)
}

func ConfusingToJackson_MakeInstance() ConfusingToJackson {
	_init_.Initialize()

	return _jsii_.StaticInvoke[ConfusingToJackson](
		"jsii-calc.ConfusingToJackson",
		"makeInstance",
		nil, // no parameters
	)
}

func ConfusingToJackson_MakeStructInstance() ConfusingToJacksonStruct {
	_init_.Initialize()

	return _jsii_.StaticInvoke[ConfusingToJacksonStruct](
		"jsii-calc.ConfusingToJackson",
		"makeStructInstance",
		nil, // no parameters
	)
}

// FromOption__ unwraps an ConfusingToJackson from an Option[ConfusingToJackson].
// You should never need to call this method directly.
func (j jsiiProxy_ConfusingToJackson) FromOption__() ConfusingToJackson {
	var j_ ConfusingToJackson = &j
	return j_
}

type ConfusingToJacksonStruct struct {
	UnionProperty interface{} \`json:"unionProperty"\`
}

// FromOption__ unwraps an ConfusingToJacksonStruct from an Option[ConfusingToJacksonStruct].
// You should never need to call this method directly.
func (c ConfusingToJacksonStruct) FromOption__() ConfusingToJacksonStruct {
	return c
}

type ConstructorPassesThisOut interface {
}

// The jsii proxy struct for ConstructorPassesThisOut
type jsiiProxy_ConstructorPassesThisOut struct {
	_ byte // padding
}

func NewConstructorPassesThisOut(consumer PartiallyInitializedThisConsumer) ConstructorPassesThisOut {
	_init_.Initialize()

	if consumer == nil { panic("Parameters \\"consumer\\" is required (received nil)") }
	j := jsiiProxy_ConstructorPassesThisOut{}

	_jsii_.Create(
		"jsii-calc.ConstructorPassesThisOut",
		[]interface{}{consumer},
		&j,
	)

	return &j
}

func NewConstructorPassesThisOut_Override(c ConstructorPassesThisOut, consumer PartiallyInitializedThisConsumer) {
	_init_.Initialize()

	if consumer == nil { panic("Parameters \\"consumer\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.ConstructorPassesThisOut",
		[]interface{}{consumer},
		c,
	)
}

// FromOption__ unwraps an ConstructorPassesThisOut from an Option[ConstructorPassesThisOut].
// You should never need to call this method directly.
func (j jsiiProxy_ConstructorPassesThisOut) FromOption__() ConstructorPassesThisOut {
	var j_ ConstructorPassesThisOut = &j
	return j_
}

type Constructors interface {
}

// The jsii proxy struct for Constructors
type jsiiProxy_Constructors struct {
	_ byte // padding
}

func NewConstructors() Constructors {
	_init_.Initialize()

	j := jsiiProxy_Constructors{}

	_jsii_.Create(
		"jsii-calc.Constructors",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewConstructors_Override(c Constructors) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Constructors",
		nil, // no parameters
		c,
	)
}

func Constructors_HiddenInterface() IPublicInterface {
	_init_.Initialize()

	return _jsii_.StaticInvoke[IPublicInterface](
		"jsii-calc.Constructors",
		"hiddenInterface",
		nil, // no parameters
	)
}

func Constructors_HiddenInterfaces() _api_.Slice[IPublicInterface] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Slice[IPublicInterface]](
		"jsii-calc.Constructors",
		"hiddenInterfaces",
		nil, // no parameters
	)
}

func Constructors_HiddenSubInterfaces() _api_.Slice[IPublicInterface] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Slice[IPublicInterface]](
		"jsii-calc.Constructors",
		"hiddenSubInterfaces",
		nil, // no parameters
	)
}

func Constructors_MakeClass() PublicClass {
	_init_.Initialize()

	return _jsii_.StaticInvoke[PublicClass](
		"jsii-calc.Constructors",
		"makeClass",
		nil, // no parameters
	)
}

func Constructors_MakeInterface() IPublicInterface {
	_init_.Initialize()

	return _jsii_.StaticInvoke[IPublicInterface](
		"jsii-calc.Constructors",
		"makeInterface",
		nil, // no parameters
	)
}

func Constructors_MakeInterface2() IPublicInterface2 {
	_init_.Initialize()

	return _jsii_.StaticInvoke[IPublicInterface2](
		"jsii-calc.Constructors",
		"makeInterface2",
		nil, // no parameters
	)
}

func Constructors_MakeInterfaces() _api_.Slice[IPublicInterface] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Slice[IPublicInterface]](
		"jsii-calc.Constructors",
		"makeInterfaces",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Constructors from an Option[Constructors].
// You should never need to call this method directly.
func (j jsiiProxy_Constructors) FromOption__() Constructors {
	var j_ Constructors = &j
	return j_
}

type ConsumePureInterface interface {
	WorkItBaby() StructB
}

// The jsii proxy struct for ConsumePureInterface
type jsiiProxy_ConsumePureInterface struct {
	_ byte // padding
}

func NewConsumePureInterface(delegate IStructReturningDelegate) ConsumePureInterface {
	_init_.Initialize()

	if delegate == nil { panic("Parameters \\"delegate\\" is required (received nil)") }
	j := jsiiProxy_ConsumePureInterface{}

	_jsii_.Create(
		"jsii-calc.ConsumePureInterface",
		[]interface{}{delegate},
		&j,
	)

	return &j
}

func NewConsumePureInterface_Override(c ConsumePureInterface, delegate IStructReturningDelegate) {
	_init_.Initialize()

	if delegate == nil { panic("Parameters \\"delegate\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.ConsumePureInterface",
		[]interface{}{delegate},
		c,
	)
}

func (c *jsiiProxy_ConsumePureInterface) WorkItBaby() StructB {
	return _jsii_.Invoke[StructB](
		c,
		"workItBaby",
		nil, // no parameters
	)
}

// FromOption__ unwraps an ConsumePureInterface from an Option[ConsumePureInterface].
// You should never need to call this method directly.
func (j jsiiProxy_ConsumePureInterface) FromOption__() ConsumePureInterface {
	var j_ ConsumePureInterface = &j
	return j_
}

// Test calling back to consumers that implement interfaces.
//
// Check that if a JSII consumer implements IConsumerWithInterfaceParam, they can call
// the method on the argument that they're passed...
type ConsumerCanRingBell interface {
	ImplementedByObjectLiteral(ringer IBellRinger) _api_.Bool
	ImplementedByPrivateClass(ringer IBellRinger) _api_.Bool
	ImplementedByPublicClass(ringer IBellRinger) _api_.Bool
	WhenTypedAsClass(ringer IConcreteBellRinger) _api_.Bool
}

// The jsii proxy struct for ConsumerCanRingBell
type jsiiProxy_ConsumerCanRingBell struct {
	_ byte // padding
}

func NewConsumerCanRingBell() ConsumerCanRingBell {
	_init_.Initialize()

	j := jsiiProxy_ConsumerCanRingBell{}

	_jsii_.Create(
		"jsii-calc.ConsumerCanRingBell",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewConsumerCanRingBell_Override(c ConsumerCanRingBell) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ConsumerCanRingBell",
		nil, // no parameters
		c,
	)
}

// ...if the interface is implemented using an object literal.
//
// Returns whether the bell was rung.
func ConsumerCanRingBell_StaticImplementedByObjectLiteral(ringer IBellRinger) _api_.Bool {
	_init_.Initialize()

	if ringer == nil { panic("Parameters \\"ringer\\" is required (received nil)") }
	return _jsii_.StaticInvoke[_api_.Bool](
		"jsii-calc.ConsumerCanRingBell",
		"staticImplementedByObjectLiteral",
		[]interface{}{ringer},
	)
}

// ...if the interface is implemented using a private class.
//
// Return whether the bell was rung.
func ConsumerCanRingBell_StaticImplementedByPrivateClass(ringer IBellRinger) _api_.Bool {
	_init_.Initialize()

	if ringer == nil { panic("Parameters \\"ringer\\" is required (received nil)") }
	return _jsii_.StaticInvoke[_api_.Bool](
		"jsii-calc.ConsumerCanRingBell",
		"staticImplementedByPrivateClass",
		[]interface{}{ringer},
	)
}

// ...if the interface is implemented using a public class.
//
// Return whether the bell was rung.
func ConsumerCanRingBell_StaticImplementedByPublicClass(ringer IBellRinger) _api_.Bool {
	_init_.Initialize()

	if ringer == nil { panic("Parameters \\"ringer\\" is required (received nil)") }
	return _jsii_.StaticInvoke[_api_.Bool](
		"jsii-calc.ConsumerCanRingBell",
		"staticImplementedByPublicClass",
		[]interface{}{ringer},
	)
}

// If the parameter is a concrete class instead of an interface.
//
// Return whether the bell was rung.
func ConsumerCanRingBell_StaticWhenTypedAsClass(ringer IConcreteBellRinger) _api_.Bool {
	_init_.Initialize()

	if ringer == nil { panic("Parameters \\"ringer\\" is required (received nil)") }
	return _jsii_.StaticInvoke[_api_.Bool](
		"jsii-calc.ConsumerCanRingBell",
		"staticWhenTypedAsClass",
		[]interface{}{ringer},
	)
}

// ...if the interface is implemented using an object literal.
//
// Returns whether the bell was rung.
func (c *jsiiProxy_ConsumerCanRingBell) ImplementedByObjectLiteral(ringer IBellRinger) _api_.Bool {
	if ringer == nil { panic("Parameters \\"ringer\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.Bool](
		c,
		"implementedByObjectLiteral",
		[]interface{}{ringer},
	)
}

// ...if the interface is implemented using a private class.
//
// Return whether the bell was rung.
func (c *jsiiProxy_ConsumerCanRingBell) ImplementedByPrivateClass(ringer IBellRinger) _api_.Bool {
	if ringer == nil { panic("Parameters \\"ringer\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.Bool](
		c,
		"implementedByPrivateClass",
		[]interface{}{ringer},
	)
}

// ...if the interface is implemented using a public class.
//
// Return whether the bell was rung.
func (c *jsiiProxy_ConsumerCanRingBell) ImplementedByPublicClass(ringer IBellRinger) _api_.Bool {
	if ringer == nil { panic("Parameters \\"ringer\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.Bool](
		c,
		"implementedByPublicClass",
		[]interface{}{ringer},
	)
}

// If the parameter is a concrete class instead of an interface.
//
// Return whether the bell was rung.
func (c *jsiiProxy_ConsumerCanRingBell) WhenTypedAsClass(ringer IConcreteBellRinger) _api_.Bool {
	if ringer == nil { panic("Parameters \\"ringer\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.Bool](
		c,
		"whenTypedAsClass",
		[]interface{}{ringer},
	)
}

// FromOption__ unwraps an ConsumerCanRingBell from an Option[ConsumerCanRingBell].
// You should never need to call this method directly.
func (j jsiiProxy_ConsumerCanRingBell) FromOption__() ConsumerCanRingBell {
	var j_ ConsumerCanRingBell = &j
	return j_
}

type ConsumersOfThisCrazyTypeSystem interface {
	ConsumeAnotherPublicInterface(obj IAnotherPublicInterface) _api_.String
	ConsumeNonInternalInterface(obj INonInternalInterface) interface{}
}

// The jsii proxy struct for ConsumersOfThisCrazyTypeSystem
type jsiiProxy_ConsumersOfThisCrazyTypeSystem struct {
	_ byte // padding
}

func NewConsumersOfThisCrazyTypeSystem() ConsumersOfThisCrazyTypeSystem {
	_init_.Initialize()

	j := jsiiProxy_ConsumersOfThisCrazyTypeSystem{}

	_jsii_.Create(
		"jsii-calc.ConsumersOfThisCrazyTypeSystem",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewConsumersOfThisCrazyTypeSystem_Override(c ConsumersOfThisCrazyTypeSystem) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ConsumersOfThisCrazyTypeSystem",
		nil, // no parameters
		c,
	)
}

func (c *jsiiProxy_ConsumersOfThisCrazyTypeSystem) ConsumeAnotherPublicInterface(obj IAnotherPublicInterface) _api_.String {
	if obj == nil { panic("Parameters \\"obj\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.String](
		c,
		"consumeAnotherPublicInterface",
		[]interface{}{obj},
	)
}

func (c *jsiiProxy_ConsumersOfThisCrazyTypeSystem) ConsumeNonInternalInterface(obj INonInternalInterface) interface{} {
	if obj == nil { panic("Parameters \\"obj\\" is required (received nil)") }
	return _jsii_.Invoke[interface{}](
		c,
		"consumeNonInternalInterface",
		[]interface{}{obj},
	)
}

// FromOption__ unwraps an ConsumersOfThisCrazyTypeSystem from an Option[ConsumersOfThisCrazyTypeSystem].
// You should never need to call this method directly.
func (j jsiiProxy_ConsumersOfThisCrazyTypeSystem) FromOption__() ConsumersOfThisCrazyTypeSystem {
	var j_ ConsumersOfThisCrazyTypeSystem = &j
	return j_
}

type ContainerProps struct {
	ArrayProp _api_.Slice[DummyObj] \`json:"arrayProp"\`
	ObjProp _api_.Map[DummyObj] \`json:"objProp"\`
	RecordProp _api_.Map[DummyObj] \`json:"recordProp"\`
}

// FromOption__ unwraps an ContainerProps from an Option[ContainerProps].
// You should never need to call this method directly.
func (c ContainerProps) FromOption__() ContainerProps {
	return c
}

// Verifies proper type handling through dynamic overrides.
type DataRenderer interface {
	Render(data _api_.Option[scopejsiicalclib.MyFirstStruct]) _api_.String
	RenderArbitrary(data _api_.Map[interface{}]) _api_.String
	RenderMap(map_ _api_.Map[interface{}]) _api_.String
}

// The jsii proxy struct for DataRenderer
type jsiiProxy_DataRenderer struct {
	_ byte // padding
}

func NewDataRenderer() DataRenderer {
	_init_.Initialize()

	j := jsiiProxy_DataRenderer{}

	_jsii_.Create(
		"jsii-calc.DataRenderer",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewDataRenderer_Override(d DataRenderer) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DataRenderer",
		nil, // no parameters
		d,
	)
}

func (d *jsiiProxy_DataRenderer) Render(data _api_.Option[scopejsiicalclib.MyFirstStruct]) _api_.String {
	return _jsii_.Invoke[_api_.String](
		d,
		"render",
		[]interface{}{data},
	)
}

func (d *jsiiProxy_DataRenderer) RenderArbitrary(data _api_.Map[interface{}]) _api_.String {
	return _jsii_.Invoke[_api_.String](
		d,
		"renderArbitrary",
		[]interface{}{data},
	)
}

func (d *jsiiProxy_DataRenderer) RenderMap(map_ _api_.Map[interface{}]) _api_.String {
	return _jsii_.Invoke[_api_.String](
		d,
		"renderMap",
		[]interface{}{map_},
	)
}

// FromOption__ unwraps an DataRenderer from an Option[DataRenderer].
// You should never need to call this method directly.
func (j jsiiProxy_DataRenderer) FromOption__() DataRenderer {
	var j_ DataRenderer = &j
	return j_
}

// A class named "Default".
// See: https://github.com/aws/jsii/issues/2637
//
type Default interface {
	PleaseCompile()
}

// The jsii proxy struct for Default
type jsiiProxy_Default struct {
	_ byte // padding
}

func NewDefault() Default {
	_init_.Initialize()

	j := jsiiProxy_Default{}

	_jsii_.Create(
		"jsii-calc.Default",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewDefault_Override(d Default) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Default",
		nil, // no parameters
		d,
	)
}

func (d *jsiiProxy_Default) PleaseCompile() {
	_jsii_.InvokeVoid(
		d,
		"pleaseCompile",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Default from an Option[Default].
// You should never need to call this method directly.
func (j jsiiProxy_Default) FromOption__() Default {
	var j_ Default = &j
	return j_
}

type DefaultedConstructorArgument interface {
	Arg1() _api_.Number
	Arg2() _api_.Option[_api_.String]
	Arg3() _api_.Time
}

// The jsii proxy struct for DefaultedConstructorArgument
type jsiiProxy_DefaultedConstructorArgument struct {
	_ byte // padding
}

func (j *jsiiProxy_DefaultedConstructorArgument) Arg1() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"arg1",
	)
}

func (j *jsiiProxy_DefaultedConstructorArgument) Arg2() _api_.Option[_api_.String] {
	return _jsii_.Get[_api_.Option[_api_.String]](
		j,
		"arg2",
	)
}

func (j *jsiiProxy_DefaultedConstructorArgument) Arg3() _api_.Time {
	return _jsii_.Get[_api_.Time](
		j,
		"arg3",
	)
}


func NewDefaultedConstructorArgument(arg1 _api_.Option[_api_.Number], arg2 _api_.Option[_api_.String], arg3 _api_.Option[_api_.Time]) DefaultedConstructorArgument {
	_init_.Initialize()

	j := jsiiProxy_DefaultedConstructorArgument{}

	_jsii_.Create(
		"jsii-calc.DefaultedConstructorArgument",
		[]interface{}{arg1, arg2, arg3},
		&j,
	)

	return &j
}

func NewDefaultedConstructorArgument_Override(d DefaultedConstructorArgument, arg1 _api_.Option[_api_.Number], arg2 _api_.Option[_api_.String], arg3 _api_.Option[_api_.Time]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DefaultedConstructorArgument",
		[]interface{}{arg1, arg2, arg3},
		d,
	)
}

// FromOption__ unwraps an DefaultedConstructorArgument from an Option[DefaultedConstructorArgument].
// You should never need to call this method directly.
func (j jsiiProxy_DefaultedConstructorArgument) FromOption__() DefaultedConstructorArgument {
	var j_ DefaultedConstructorArgument = &j
	return j_
}

// 1.
//
// call #takeThis() -> An ObjectRef will be provisioned for the value (it'll be re-used!)
// 2. call #takeThisToo() -> The ObjectRef from before will need to be down-cased to the ParentStruct982 type
type Demonstrate982 interface {
}

// The jsii proxy struct for Demonstrate982
type jsiiProxy_Demonstrate982 struct {
	_ byte // padding
}

func NewDemonstrate982() Demonstrate982 {
	_init_.Initialize()

	j := jsiiProxy_Demonstrate982{}

	_jsii_.Create(
		"jsii-calc.Demonstrate982",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewDemonstrate982_Override(d Demonstrate982) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Demonstrate982",
		nil, // no parameters
		d,
	)
}

// It's dangerous to go alone!
func Demonstrate982_TakeThis() ChildStruct982 {
	_init_.Initialize()

	return _jsii_.StaticInvoke[ChildStruct982](
		"jsii-calc.Demonstrate982",
		"takeThis",
		nil, // no parameters
	)
}

// It's dangerous to go alone!
func Demonstrate982_TakeThisToo() ParentStruct982 {
	_init_.Initialize()

	return _jsii_.StaticInvoke[ParentStruct982](
		"jsii-calc.Demonstrate982",
		"takeThisToo",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Demonstrate982 from an Option[Demonstrate982].
// You should never need to call this method directly.
func (j jsiiProxy_Demonstrate982) FromOption__() Demonstrate982 {
	var j_ Demonstrate982 = &j
	return j_
}

// Deprecated: a pretty boring class
type DeprecatedClass interface {
	MutableProperty() _api_.Option[_api_.Number]
	SetMutableProperty(val _api_.Option[_api_.Number])
	ReadonlyProperty() _api_.String
	Method()
}

// The jsii proxy struct for DeprecatedClass
type jsiiProxy_DeprecatedClass struct {
	_ byte // padding
}

func (j *jsiiProxy_DeprecatedClass) MutableProperty() _api_.Option[_api_.Number] {
	return _jsii_.Get[_api_.Option[_api_.Number]](
		j,
		"mutableProperty",
	)
}

func (j *jsiiProxy_DeprecatedClass) ReadonlyProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"readonlyProperty",
	)
}


// Deprecated: this constructor is "just" okay
func NewDeprecatedClass(readonlyString _api_.String, mutableNumber _api_.Option[_api_.Number]) DeprecatedClass {
	_init_.Initialize()

	j := jsiiProxy_DeprecatedClass{}

	_jsii_.Create(
		"jsii-calc.DeprecatedClass",
		[]interface{}{readonlyString, mutableNumber},
		&j,
	)

	return &j
}

// Deprecated: this constructor is "just" okay
func NewDeprecatedClass_Override(d DeprecatedClass, readonlyString _api_.String, mutableNumber _api_.Option[_api_.Number]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DeprecatedClass",
		[]interface{}{readonlyString, mutableNumber},
		d,
	)
}

func (j *jsiiProxy_DeprecatedClass) SetMutableProperty(val _api_.Option[_api_.Number]) {
	_jsii_.Set(
		j,
		"mutableProperty",
		val,
	)
}

// Deprecated: it was a bad idea
func (d *jsiiProxy_DeprecatedClass) Method() {
	_jsii_.InvokeVoid(
		d,
		"method",
		nil, // no parameters
	)
}

// FromOption__ unwraps an DeprecatedClass from an Option[DeprecatedClass].
// You should never need to call this method directly.
func (j jsiiProxy_DeprecatedClass) FromOption__() DeprecatedClass {
	var j_ DeprecatedClass = &j
	return j_
}

// Deprecated: your deprecated selection of bad options
type DeprecatedEnum string

const (
	DeprecatedEnum_OPTION_A DeprecatedEnum = "OPTION_A"
	DeprecatedEnum_OPTION_B DeprecatedEnum = "OPTION_B"
)

// FromOption__ unwraps an DeprecatedEnum from an Option[DeprecatedEnum].
// You should never need to call this method directly.
func (d DeprecatedEnum) FromOption__() DeprecatedEnum {
	return d
}

// Deprecated: it just wraps a string
type DeprecatedStruct struct {
	// Deprecated: well, yeah
	ReadonlyProperty _api_.String \`json:"readonlyProperty"\`
}

// FromOption__ unwraps an DeprecatedStruct from an Option[DeprecatedStruct].
// You should never need to call this method directly.
func (d DeprecatedStruct) FromOption__() DeprecatedStruct {
	return d
}

// A struct which derives from another struct.
type DerivedStruct struct {
	// An awesome number value.
	// Deprecated.
	Anumber _api_.Number \`json:"anumber"\`
	// A string value.
	// Deprecated.
	Astring _api_.String \`json:"astring"\`
	// Deprecated.
	FirstOptional _api_.Option[_api_.Slice[_api_.Option[_api_.String]]] \`json:"firstOptional"\`
	AnotherRequired _api_.Time \`json:"anotherRequired"\`
	Bool _api_.Bool \`json:"bool"\`
	// An example of a non primitive property.
	NonPrimitive DoubleTrouble \`json:"nonPrimitive"\`
	// This is optional.
	AnotherOptional _api_.Option[_api_.Map[_api_.Option[scopejsiicalclib.NumericValue]]] \`json:"anotherOptional"\`
	OptionalAny interface{} \`json:"optionalAny"\`
	OptionalArray _api_.Option[_api_.Slice[_api_.Option[_api_.String]]] \`json:"optionalArray"\`
}

// FromOption__ unwraps an DerivedStruct from an Option[DerivedStruct].
// You should never need to call this method directly.
func (d DerivedStruct) FromOption__() DerivedStruct {
	return d
}

type DiamondBottom struct {
	// Deprecated.
	HoistedTop _api_.Option[_api_.String] \`json:"hoistedTop"\`
	// Deprecated.
	Left _api_.Option[_api_.Number] \`json:"left"\`
	// Deprecated.
	Right _api_.Option[_api_.Bool] \`json:"right"\`
	Bottom _api_.Option[_api_.Time] \`json:"bottom"\`
}

// FromOption__ unwraps an DiamondBottom from an Option[DiamondBottom].
// You should never need to call this method directly.
func (d DiamondBottom) FromOption__() DiamondBottom {
	return d
}

type DiamondInheritanceBaseLevelStruct struct {
	BaseLevelProperty _api_.String \`json:"baseLevelProperty"\`
}

// FromOption__ unwraps an DiamondInheritanceBaseLevelStruct from an Option[DiamondInheritanceBaseLevelStruct].
// You should never need to call this method directly.
func (d DiamondInheritanceBaseLevelStruct) FromOption__() DiamondInheritanceBaseLevelStruct {
	return d
}

type DiamondInheritanceFirstMidLevelStruct struct {
	BaseLevelProperty _api_.String \`json:"baseLevelProperty"\`
	FirstMidLevelProperty _api_.String \`json:"firstMidLevelProperty"\`
}

// FromOption__ unwraps an DiamondInheritanceFirstMidLevelStruct from an Option[DiamondInheritanceFirstMidLevelStruct].
// You should never need to call this method directly.
func (d DiamondInheritanceFirstMidLevelStruct) FromOption__() DiamondInheritanceFirstMidLevelStruct {
	return d
}

type DiamondInheritanceSecondMidLevelStruct struct {
	BaseLevelProperty _api_.String \`json:"baseLevelProperty"\`
	SecondMidLevelProperty _api_.String \`json:"secondMidLevelProperty"\`
}

// FromOption__ unwraps an DiamondInheritanceSecondMidLevelStruct from an Option[DiamondInheritanceSecondMidLevelStruct].
// You should never need to call this method directly.
func (d DiamondInheritanceSecondMidLevelStruct) FromOption__() DiamondInheritanceSecondMidLevelStruct {
	return d
}

type DiamondInheritanceTopLevelStruct struct {
	BaseLevelProperty _api_.String \`json:"baseLevelProperty"\`
	FirstMidLevelProperty _api_.String \`json:"firstMidLevelProperty"\`
	SecondMidLevelProperty _api_.String \`json:"secondMidLevelProperty"\`
	TopLevelProperty _api_.String \`json:"topLevelProperty"\`
}

// FromOption__ unwraps an DiamondInheritanceTopLevelStruct from an Option[DiamondInheritanceTopLevelStruct].
// You should never need to call this method directly.
func (d DiamondInheritanceTopLevelStruct) FromOption__() DiamondInheritanceTopLevelStruct {
	return d
}

// Verifies that null/undefined can be returned for optional collections.
//
// This source of collections is disappointing - it'll always give you nothing :(
type DisappointingCollectionSource interface {
}

// The jsii proxy struct for DisappointingCollectionSource
type jsiiProxy_DisappointingCollectionSource struct {
	_ byte // padding
}

func DisappointingCollectionSource_MaybeList() _api_.Option[_api_.Slice[_api_.Option[_api_.String]]] {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Option[_api_.Slice[_api_.Option[_api_.String]]]](
		"jsii-calc.DisappointingCollectionSource",
		"maybeList",
	)
}

func DisappointingCollectionSource_MaybeMap() _api_.Option[_api_.Map[_api_.Option[_api_.Number]]] {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Option[_api_.Map[_api_.Option[_api_.Number]]]](
		"jsii-calc.DisappointingCollectionSource",
		"maybeMap",
	)
}

// FromOption__ unwraps an DisappointingCollectionSource from an Option[DisappointingCollectionSource].
// You should never need to call this method directly.
func (j jsiiProxy_DisappointingCollectionSource) FromOption__() DisappointingCollectionSource {
	var j_ DisappointingCollectionSource = &j
	return j_
}

type DoNotOverridePrivates interface {
	ChangePrivatePropertyValue(newValue _api_.String)
	PrivateMethodValue() _api_.String
	PrivatePropertyValue() _api_.String
}

// The jsii proxy struct for DoNotOverridePrivates
type jsiiProxy_DoNotOverridePrivates struct {
	_ byte // padding
}

func NewDoNotOverridePrivates() DoNotOverridePrivates {
	_init_.Initialize()

	j := jsiiProxy_DoNotOverridePrivates{}

	_jsii_.Create(
		"jsii-calc.DoNotOverridePrivates",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewDoNotOverridePrivates_Override(d DoNotOverridePrivates) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DoNotOverridePrivates",
		nil, // no parameters
		d,
	)
}

func (d *jsiiProxy_DoNotOverridePrivates) ChangePrivatePropertyValue(newValue _api_.String) {
	_jsii_.InvokeVoid(
		d,
		"changePrivatePropertyValue",
		[]interface{}{newValue},
	)
}

func (d *jsiiProxy_DoNotOverridePrivates) PrivateMethodValue() _api_.String {
	return _jsii_.Invoke[_api_.String](
		d,
		"privateMethodValue",
		nil, // no parameters
	)
}

func (d *jsiiProxy_DoNotOverridePrivates) PrivatePropertyValue() _api_.String {
	return _jsii_.Invoke[_api_.String](
		d,
		"privatePropertyValue",
		nil, // no parameters
	)
}

// FromOption__ unwraps an DoNotOverridePrivates from an Option[DoNotOverridePrivates].
// You should never need to call this method directly.
func (j jsiiProxy_DoNotOverridePrivates) FromOption__() DoNotOverridePrivates {
	var j_ DoNotOverridePrivates = &j
	return j_
}

// jsii#284: do not recognize "any" as an optional argument.
type DoNotRecognizeAnyAsOptional interface {
	Method(_requiredAny interface{}, _optionalAny interface{}, _optionalString _api_.Option[_api_.String])
}

// The jsii proxy struct for DoNotRecognizeAnyAsOptional
type jsiiProxy_DoNotRecognizeAnyAsOptional struct {
	_ byte // padding
}

func NewDoNotRecognizeAnyAsOptional() DoNotRecognizeAnyAsOptional {
	_init_.Initialize()

	j := jsiiProxy_DoNotRecognizeAnyAsOptional{}

	_jsii_.Create(
		"jsii-calc.DoNotRecognizeAnyAsOptional",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewDoNotRecognizeAnyAsOptional_Override(d DoNotRecognizeAnyAsOptional) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DoNotRecognizeAnyAsOptional",
		nil, // no parameters
		d,
	)
}

func (d *jsiiProxy_DoNotRecognizeAnyAsOptional) Method(_requiredAny interface{}, _optionalAny interface{}, _optionalString _api_.Option[_api_.String]) {
	_jsii_.InvokeVoid(
		d,
		"method",
		[]interface{}{_requiredAny, _optionalAny, _optionalString},
	)
}

// FromOption__ unwraps an DoNotRecognizeAnyAsOptional from an Option[DoNotRecognizeAnyAsOptional].
// You should never need to call this method directly.
func (j jsiiProxy_DoNotRecognizeAnyAsOptional) FromOption__() DoNotRecognizeAnyAsOptional {
	var j_ DoNotRecognizeAnyAsOptional = &j
	return j_
}

// Here's the first line of the TSDoc comment.
//
// This is the meat of the TSDoc comment. It may contain
// multiple lines and multiple paragraphs.
//
// Multiple paragraphs are separated by an empty line.
//
// TODO: EXAMPLE
//
type DocumentedClass interface {
	Greet(greetee _api_.Option[Greetee]) _api_.Number
	Hola()
}

// The jsii proxy struct for DocumentedClass
type jsiiProxy_DocumentedClass struct {
	_ byte // padding
}

func NewDocumentedClass() DocumentedClass {
	_init_.Initialize()

	j := jsiiProxy_DocumentedClass{}

	_jsii_.Create(
		"jsii-calc.DocumentedClass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewDocumentedClass_Override(d DocumentedClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DocumentedClass",
		nil, // no parameters
		d,
	)
}

// Greet the indicated person.
//
// This will print out a friendly greeting intended for the indicated person.
//
// Returns: A number that everyone knows very well and represents the answer
// to the ultimate question
func (d *jsiiProxy_DocumentedClass) Greet(greetee _api_.Option[Greetee]) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		d,
		"greet",
		[]interface{}{greetee},
	)
}

// Say ¬°Hola!
// Experimental.
func (d *jsiiProxy_DocumentedClass) Hola() {
	_jsii_.InvokeVoid(
		d,
		"hola",
		nil, // no parameters
	)
}

// FromOption__ unwraps an DocumentedClass from an Option[DocumentedClass].
// You should never need to call this method directly.
func (j jsiiProxy_DocumentedClass) FromOption__() DocumentedClass {
	var j_ DocumentedClass = &j
	return j_
}

type DontComplainAboutVariadicAfterOptional interface {
	OptionalAndVariadic(optional _api_.Option[_api_.String], things ..._api_.String) _api_.String
}

// The jsii proxy struct for DontComplainAboutVariadicAfterOptional
type jsiiProxy_DontComplainAboutVariadicAfterOptional struct {
	_ byte // padding
}

func NewDontComplainAboutVariadicAfterOptional() DontComplainAboutVariadicAfterOptional {
	_init_.Initialize()

	j := jsiiProxy_DontComplainAboutVariadicAfterOptional{}

	_jsii_.Create(
		"jsii-calc.DontComplainAboutVariadicAfterOptional",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewDontComplainAboutVariadicAfterOptional_Override(d DontComplainAboutVariadicAfterOptional) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DontComplainAboutVariadicAfterOptional",
		nil, // no parameters
		d,
	)
}

func (d *jsiiProxy_DontComplainAboutVariadicAfterOptional) OptionalAndVariadic(optional _api_.Option[_api_.String], things ..._api_.String) _api_.String {
	args := []interface{}{optional}
	for _, a := range things {
		args = append(args, a)
	}

	return _jsii_.Invoke[_api_.String](
		d,
		"optionalAndVariadic",
		args,
	)
}

// FromOption__ unwraps an DontComplainAboutVariadicAfterOptional from an Option[DontComplainAboutVariadicAfterOptional].
// You should never need to call this method directly.
func (j jsiiProxy_DontComplainAboutVariadicAfterOptional) FromOption__() DontComplainAboutVariadicAfterOptional {
	var j_ DontComplainAboutVariadicAfterOptional = &j
	return j_
}

type DoubleTrouble interface {
	IFriendlyRandomGenerator
	Hello() _api_.String
	Next() _api_.Number
}

// The jsii proxy struct for DoubleTrouble
type jsiiProxy_DoubleTrouble struct {
	jsiiProxy_IFriendlyRandomGenerator
}

func NewDoubleTrouble() DoubleTrouble {
	_init_.Initialize()

	j := jsiiProxy_DoubleTrouble{}

	_jsii_.Create(
		"jsii-calc.DoubleTrouble",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewDoubleTrouble_Override(d DoubleTrouble) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DoubleTrouble",
		nil, // no parameters
		d,
	)
}

// (deprecated) Say hello!
func (d *jsiiProxy_DoubleTrouble) Hello() _api_.String {
	return _jsii_.Invoke[_api_.String](
		d,
		"hello",
		nil, // no parameters
	)
}

// Returns another random number.
func (d *jsiiProxy_DoubleTrouble) Next() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		d,
		"next",
		nil, // no parameters
	)
}

// FromOption__ unwraps an DoubleTrouble from an Option[DoubleTrouble].
// You should never need to call this method directly.
func (j jsiiProxy_DoubleTrouble) FromOption__() DoubleTrouble {
	var j_ DoubleTrouble = &j
	return j_
}

type DummyObj struct {
	Example _api_.String \`json:"example"\`
}

// FromOption__ unwraps an DummyObj from an Option[DummyObj].
// You should never need to call this method directly.
func (d DummyObj) FromOption__() DummyObj {
	return d
}

// Ensures we can override a dynamic property that was inherited.
type DynamicPropertyBearer interface {
	DynamicProperty() _api_.String
	SetDynamicProperty(val _api_.String)
	ValueStore() _api_.String
	SetValueStore(val _api_.String)
}

// The jsii proxy struct for DynamicPropertyBearer
type jsiiProxy_DynamicPropertyBearer struct {
	_ byte // padding
}

func (j *jsiiProxy_DynamicPropertyBearer) DynamicProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"dynamicProperty",
	)
}

func (j *jsiiProxy_DynamicPropertyBearer) ValueStore() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"valueStore",
	)
}


func NewDynamicPropertyBearer(valueStore _api_.String) DynamicPropertyBearer {
	_init_.Initialize()

	j := jsiiProxy_DynamicPropertyBearer{}

	_jsii_.Create(
		"jsii-calc.DynamicPropertyBearer",
		[]interface{}{valueStore},
		&j,
	)

	return &j
}

func NewDynamicPropertyBearer_Override(d DynamicPropertyBearer, valueStore _api_.String) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DynamicPropertyBearer",
		[]interface{}{valueStore},
		d,
	)
}

func (j *jsiiProxy_DynamicPropertyBearer) SetDynamicProperty(val _api_.String) {
	_jsii_.Set(
		j,
		"dynamicProperty",
		val,
	)
}

func (j *jsiiProxy_DynamicPropertyBearer) SetValueStore(val _api_.String) {
	_jsii_.Set(
		j,
		"valueStore",
		val,
	)
}

// FromOption__ unwraps an DynamicPropertyBearer from an Option[DynamicPropertyBearer].
// You should never need to call this method directly.
func (j jsiiProxy_DynamicPropertyBearer) FromOption__() DynamicPropertyBearer {
	var j_ DynamicPropertyBearer = &j
	return j_
}

type DynamicPropertyBearerChild interface {
	DynamicPropertyBearer
	DynamicProperty() _api_.String
	SetDynamicProperty(val _api_.String)
	OriginalValue() _api_.String
	ValueStore() _api_.String
	SetValueStore(val _api_.String)
	OverrideValue(newValue _api_.String) _api_.String
}

// The jsii proxy struct for DynamicPropertyBearerChild
type jsiiProxy_DynamicPropertyBearerChild struct {
	jsiiProxy_DynamicPropertyBearer
}

func (j *jsiiProxy_DynamicPropertyBearerChild) DynamicProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"dynamicProperty",
	)
}

func (j *jsiiProxy_DynamicPropertyBearerChild) OriginalValue() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"originalValue",
	)
}

func (j *jsiiProxy_DynamicPropertyBearerChild) ValueStore() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"valueStore",
	)
}


func NewDynamicPropertyBearerChild(originalValue _api_.String) DynamicPropertyBearerChild {
	_init_.Initialize()

	j := jsiiProxy_DynamicPropertyBearerChild{}

	_jsii_.Create(
		"jsii-calc.DynamicPropertyBearerChild",
		[]interface{}{originalValue},
		&j,
	)

	return &j
}

func NewDynamicPropertyBearerChild_Override(d DynamicPropertyBearerChild, originalValue _api_.String) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.DynamicPropertyBearerChild",
		[]interface{}{originalValue},
		d,
	)
}

func (j *jsiiProxy_DynamicPropertyBearerChild) SetDynamicProperty(val _api_.String) {
	_jsii_.Set(
		j,
		"dynamicProperty",
		val,
	)
}

func (j *jsiiProxy_DynamicPropertyBearerChild) SetValueStore(val _api_.String) {
	_jsii_.Set(
		j,
		"valueStore",
		val,
	)
}

// Sets \`this.dynamicProperty\` to the new value, and returns the old value.
//
// Returns: the old value that was set.
func (d *jsiiProxy_DynamicPropertyBearerChild) OverrideValue(newValue _api_.String) _api_.String {
	return _jsii_.Invoke[_api_.String](
		d,
		"overrideValue",
		[]interface{}{newValue},
	)
}

// FromOption__ unwraps an DynamicPropertyBearerChild from an Option[DynamicPropertyBearerChild].
// You should never need to call this method directly.
func (j jsiiProxy_DynamicPropertyBearerChild) FromOption__() DynamicPropertyBearerChild {
	var j_ DynamicPropertyBearerChild = &j
	return j_
}

// This class is used to validate that serialization and deserialization does not interpret ISO-8601-formatted timestampts to the native date/time object, as the jsii protocol has a $jsii$date wrapper for this purpose (node's JSON parsing does *NOT* detect dates automatically in this way, so host libraries should not either).
type Entropy interface {
	Increase() _api_.String
	Repeat(word _api_.String) _api_.String
}

// The jsii proxy struct for Entropy
type jsiiProxy_Entropy struct {
	_ byte // padding
}

// Creates a new instance of Entropy.
func NewEntropy_Override(e Entropy, clock IWallClock) {
	_init_.Initialize()

	if clock == nil { panic("Parameters \\"clock\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.Entropy",
		[]interface{}{clock},
		e,
	)
}

// Increases entropy by consuming time from the clock (yes, this is a long shot, please don't judge).
//
// Returns: the time from the \`WallClock\`.
func (e *jsiiProxy_Entropy) Increase() _api_.String {
	return _jsii_.Invoke[_api_.String](
		e,
		"increase",
		nil, // no parameters
	)
}

// Implement this method such that it returns \`word\`.
//
// Returns: \`word\`.
func (e *jsiiProxy_Entropy) Repeat(word _api_.String) _api_.String {
	return _jsii_.Invoke[_api_.String](
		e,
		"repeat",
		[]interface{}{word},
	)
}

// FromOption__ unwraps an Entropy from an Option[Entropy].
// You should never need to call this method directly.
func (j jsiiProxy_Entropy) FromOption__() Entropy {
	var j_ Entropy = &j
	return j_
}

type EnumDispenser interface {
}

// The jsii proxy struct for EnumDispenser
type jsiiProxy_EnumDispenser struct {
	_ byte // padding
}

func EnumDispenser_RandomIntegerLikeEnum() AllTypesEnum {
	_init_.Initialize()

	return _jsii_.StaticInvoke[AllTypesEnum](
		"jsii-calc.EnumDispenser",
		"randomIntegerLikeEnum",
		nil, // no parameters
	)
}

func EnumDispenser_RandomStringLikeEnum() StringEnum {
	_init_.Initialize()

	return _jsii_.StaticInvoke[StringEnum](
		"jsii-calc.EnumDispenser",
		"randomStringLikeEnum",
		nil, // no parameters
	)
}

// FromOption__ unwraps an EnumDispenser from an Option[EnumDispenser].
// You should never need to call this method directly.
func (j jsiiProxy_EnumDispenser) FromOption__() EnumDispenser {
	var j_ EnumDispenser = &j
	return j_
}

type EraseUndefinedHashValues interface {
}

// The jsii proxy struct for EraseUndefinedHashValues
type jsiiProxy_EraseUndefinedHashValues struct {
	_ byte // padding
}

func NewEraseUndefinedHashValues() EraseUndefinedHashValues {
	_init_.Initialize()

	j := jsiiProxy_EraseUndefinedHashValues{}

	_jsii_.Create(
		"jsii-calc.EraseUndefinedHashValues",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewEraseUndefinedHashValues_Override(e EraseUndefinedHashValues) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.EraseUndefinedHashValues",
		nil, // no parameters
		e,
	)
}

// Returns \`true\` if \`key\` is defined in \`opts\`.
//
// Used to check that undefined/null hash values
// are being erased when sending values from native code to JS.
func EraseUndefinedHashValues_DoesKeyExist(opts EraseUndefinedHashValuesOptions, key _api_.String) _api_.Bool {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Bool](
		"jsii-calc.EraseUndefinedHashValues",
		"doesKeyExist",
		[]interface{}{opts, key},
	)
}

// We expect "prop1" to be erased.
func EraseUndefinedHashValues_Prop1IsNull() _api_.Map[interface{}] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Map[interface{}]](
		"jsii-calc.EraseUndefinedHashValues",
		"prop1IsNull",
		nil, // no parameters
	)
}

// We expect "prop2" to be erased.
func EraseUndefinedHashValues_Prop2IsUndefined() _api_.Map[interface{}] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Map[interface{}]](
		"jsii-calc.EraseUndefinedHashValues",
		"prop2IsUndefined",
		nil, // no parameters
	)
}

// FromOption__ unwraps an EraseUndefinedHashValues from an Option[EraseUndefinedHashValues].
// You should never need to call this method directly.
func (j jsiiProxy_EraseUndefinedHashValues) FromOption__() EraseUndefinedHashValues {
	var j_ EraseUndefinedHashValues = &j
	return j_
}

type EraseUndefinedHashValuesOptions struct {
	Option1 _api_.Option[_api_.String] \`json:"option1"\`
	Option2 _api_.Option[_api_.String] \`json:"option2"\`
}

// FromOption__ unwraps an EraseUndefinedHashValuesOptions from an Option[EraseUndefinedHashValuesOptions].
// You should never need to call this method directly.
func (e EraseUndefinedHashValuesOptions) FromOption__() EraseUndefinedHashValuesOptions {
	return e
}

// Experimental.
type ExperimentalClass interface {
	MutableProperty() _api_.Option[_api_.Number]
	SetMutableProperty(val _api_.Option[_api_.Number])
	ReadonlyProperty() _api_.String
	Method()
}

// The jsii proxy struct for ExperimentalClass
type jsiiProxy_ExperimentalClass struct {
	_ byte // padding
}

func (j *jsiiProxy_ExperimentalClass) MutableProperty() _api_.Option[_api_.Number] {
	return _jsii_.Get[_api_.Option[_api_.Number]](
		j,
		"mutableProperty",
	)
}

func (j *jsiiProxy_ExperimentalClass) ReadonlyProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"readonlyProperty",
	)
}


// Experimental.
func NewExperimentalClass(readonlyString _api_.String, mutableNumber _api_.Option[_api_.Number]) ExperimentalClass {
	_init_.Initialize()

	j := jsiiProxy_ExperimentalClass{}

	_jsii_.Create(
		"jsii-calc.ExperimentalClass",
		[]interface{}{readonlyString, mutableNumber},
		&j,
	)

	return &j
}

// Experimental.
func NewExperimentalClass_Override(e ExperimentalClass, readonlyString _api_.String, mutableNumber _api_.Option[_api_.Number]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ExperimentalClass",
		[]interface{}{readonlyString, mutableNumber},
		e,
	)
}

func (j *jsiiProxy_ExperimentalClass) SetMutableProperty(val _api_.Option[_api_.Number]) {
	_jsii_.Set(
		j,
		"mutableProperty",
		val,
	)
}

// Experimental.
func (e *jsiiProxy_ExperimentalClass) Method() {
	_jsii_.InvokeVoid(
		e,
		"method",
		nil, // no parameters
	)
}

// FromOption__ unwraps an ExperimentalClass from an Option[ExperimentalClass].
// You should never need to call this method directly.
func (j jsiiProxy_ExperimentalClass) FromOption__() ExperimentalClass {
	var j_ ExperimentalClass = &j
	return j_
}

// Experimental.
type ExperimentalEnum string

const (
	ExperimentalEnum_OPTION_A ExperimentalEnum = "OPTION_A"
	ExperimentalEnum_OPTION_B ExperimentalEnum = "OPTION_B"
)

// FromOption__ unwraps an ExperimentalEnum from an Option[ExperimentalEnum].
// You should never need to call this method directly.
func (e ExperimentalEnum) FromOption__() ExperimentalEnum {
	return e
}

// Experimental.
type ExperimentalStruct struct {
	// Experimental.
	ReadonlyProperty _api_.String \`json:"readonlyProperty"\`
}

// FromOption__ unwraps an ExperimentalStruct from an Option[ExperimentalStruct].
// You should never need to call this method directly.
func (e ExperimentalStruct) FromOption__() ExperimentalStruct {
	return e
}

type ExportedBaseClass interface {
	Success() _api_.Bool
}

// The jsii proxy struct for ExportedBaseClass
type jsiiProxy_ExportedBaseClass struct {
	_ byte // padding
}

func (j *jsiiProxy_ExportedBaseClass) Success() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"success",
	)
}


func NewExportedBaseClass(success _api_.Bool) ExportedBaseClass {
	_init_.Initialize()

	j := jsiiProxy_ExportedBaseClass{}

	_jsii_.Create(
		"jsii-calc.ExportedBaseClass",
		[]interface{}{success},
		&j,
	)

	return &j
}

func NewExportedBaseClass_Override(e ExportedBaseClass, success _api_.Bool) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ExportedBaseClass",
		[]interface{}{success},
		e,
	)
}

// FromOption__ unwraps an ExportedBaseClass from an Option[ExportedBaseClass].
// You should never need to call this method directly.
func (j jsiiProxy_ExportedBaseClass) FromOption__() ExportedBaseClass {
	var j_ ExportedBaseClass = &j
	return j_
}

type ExtendsInternalInterface struct {
	Boom _api_.Bool \`json:"boom"\`
	Prop _api_.String \`json:"prop"\`
}

// FromOption__ unwraps an ExtendsInternalInterface from an Option[ExtendsInternalInterface].
// You should never need to call this method directly.
func (e ExtendsInternalInterface) FromOption__() ExtendsInternalInterface {
	return e
}

type ExternalClass interface {
	MutableProperty() _api_.Option[_api_.Number]
	SetMutableProperty(val _api_.Option[_api_.Number])
	ReadonlyProperty() _api_.String
	Method()
}

// The jsii proxy struct for ExternalClass
type jsiiProxy_ExternalClass struct {
	_ byte // padding
}

func (j *jsiiProxy_ExternalClass) MutableProperty() _api_.Option[_api_.Number] {
	return _jsii_.Get[_api_.Option[_api_.Number]](
		j,
		"mutableProperty",
	)
}

func (j *jsiiProxy_ExternalClass) ReadonlyProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"readonlyProperty",
	)
}


func NewExternalClass(readonlyString _api_.String, mutableNumber _api_.Option[_api_.Number]) ExternalClass {
	_init_.Initialize()

	j := jsiiProxy_ExternalClass{}

	_jsii_.Create(
		"jsii-calc.ExternalClass",
		[]interface{}{readonlyString, mutableNumber},
		&j,
	)

	return &j
}

func NewExternalClass_Override(e ExternalClass, readonlyString _api_.String, mutableNumber _api_.Option[_api_.Number]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ExternalClass",
		[]interface{}{readonlyString, mutableNumber},
		e,
	)
}

func (j *jsiiProxy_ExternalClass) SetMutableProperty(val _api_.Option[_api_.Number]) {
	_jsii_.Set(
		j,
		"mutableProperty",
		val,
	)
}

func (e *jsiiProxy_ExternalClass) Method() {
	_jsii_.InvokeVoid(
		e,
		"method",
		nil, // no parameters
	)
}

// FromOption__ unwraps an ExternalClass from an Option[ExternalClass].
// You should never need to call this method directly.
func (j jsiiProxy_ExternalClass) FromOption__() ExternalClass {
	var j_ ExternalClass = &j
	return j_
}

type ExternalEnum string

const (
	ExternalEnum_OPTION_A ExternalEnum = "OPTION_A"
	ExternalEnum_OPTION_B ExternalEnum = "OPTION_B"
)

// FromOption__ unwraps an ExternalEnum from an Option[ExternalEnum].
// You should never need to call this method directly.
func (e ExternalEnum) FromOption__() ExternalEnum {
	return e
}

type ExternalStruct struct {
	ReadonlyProperty _api_.String \`json:"readonlyProperty"\`
}

// FromOption__ unwraps an ExternalStruct from an Option[ExternalStruct].
// You should never need to call this method directly.
func (e ExternalStruct) FromOption__() ExternalStruct {
	return e
}

type GiveMeStructs interface {
	StructLiteral() scopejsiicalclib.StructWithOnlyOptionals
	DerivedToFirst(derived DerivedStruct) scopejsiicalclib.MyFirstStruct
	ReadDerivedNonPrimitive(derived DerivedStruct) DoubleTrouble
	ReadFirstNumber(first scopejsiicalclib.MyFirstStruct) _api_.Number
}

// The jsii proxy struct for GiveMeStructs
type jsiiProxy_GiveMeStructs struct {
	_ byte // padding
}

func (j *jsiiProxy_GiveMeStructs) StructLiteral() scopejsiicalclib.StructWithOnlyOptionals {
	return _jsii_.Get[scopejsiicalclib.StructWithOnlyOptionals](
		j,
		"structLiteral",
	)
}


func NewGiveMeStructs() GiveMeStructs {
	_init_.Initialize()

	j := jsiiProxy_GiveMeStructs{}

	_jsii_.Create(
		"jsii-calc.GiveMeStructs",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewGiveMeStructs_Override(g GiveMeStructs) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.GiveMeStructs",
		nil, // no parameters
		g,
	)
}

// Accepts a struct of type DerivedStruct and returns a struct of type FirstStruct.
func (g *jsiiProxy_GiveMeStructs) DerivedToFirst(derived DerivedStruct) scopejsiicalclib.MyFirstStruct {
	return _jsii_.Invoke[scopejsiicalclib.MyFirstStruct](
		g,
		"derivedToFirst",
		[]interface{}{derived},
	)
}

// Returns the boolean from a DerivedStruct struct.
func (g *jsiiProxy_GiveMeStructs) ReadDerivedNonPrimitive(derived DerivedStruct) DoubleTrouble {
	return _jsii_.Invoke[DoubleTrouble](
		g,
		"readDerivedNonPrimitive",
		[]interface{}{derived},
	)
}

// Returns the "anumber" from a MyFirstStruct struct;
func (g *jsiiProxy_GiveMeStructs) ReadFirstNumber(first scopejsiicalclib.MyFirstStruct) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		g,
		"readFirstNumber",
		[]interface{}{first},
	)
}

// FromOption__ unwraps an GiveMeStructs from an Option[GiveMeStructs].
// You should never need to call this method directly.
func (j jsiiProxy_GiveMeStructs) FromOption__() GiveMeStructs {
	var j_ GiveMeStructs = &j
	return j_
}

// These are some arguments you can pass to a method.
type Greetee struct {
	// The name of the greetee.
	Name _api_.Option[_api_.String] \`json:"name"\`
}

// FromOption__ unwraps an Greetee from an Option[Greetee].
// You should never need to call this method directly.
func (g Greetee) FromOption__() Greetee {
	return g
}

type GreetingAugmenter interface {
	BetterGreeting(friendly scopejsiicalclib.IFriendly) _api_.String
}

// The jsii proxy struct for GreetingAugmenter
type jsiiProxy_GreetingAugmenter struct {
	_ byte // padding
}

func NewGreetingAugmenter() GreetingAugmenter {
	_init_.Initialize()

	j := jsiiProxy_GreetingAugmenter{}

	_jsii_.Create(
		"jsii-calc.GreetingAugmenter",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewGreetingAugmenter_Override(g GreetingAugmenter) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.GreetingAugmenter",
		nil, // no parameters
		g,
	)
}

func (g *jsiiProxy_GreetingAugmenter) BetterGreeting(friendly scopejsiicalclib.IFriendly) _api_.String {
	if friendly == nil { panic("Parameters \\"friendly\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.String](
		g,
		"betterGreeting",
		[]interface{}{friendly},
	)
}

// FromOption__ unwraps an GreetingAugmenter from an Option[GreetingAugmenter].
// You should never need to call this method directly.
func (j jsiiProxy_GreetingAugmenter) FromOption__() GreetingAugmenter {
	var j_ GreetingAugmenter = &j
	return j_
}

// We can return an anonymous interface implementation from an override without losing the interface declarations.
type IAnonymousImplementationProvider interface {
	ProvideAsClass() Implementation
	ProvideAsInterface() IAnonymouslyImplementMe
}

// The jsii proxy for IAnonymousImplementationProvider
type jsiiProxy_IAnonymousImplementationProvider struct {
	_ byte // padding
}

func (i *jsiiProxy_IAnonymousImplementationProvider) ProvideAsClass() Implementation {
	return _jsii_.Invoke[Implementation](
		i,
		"provideAsClass",
		nil, // no parameters
	)
}

func (i *jsiiProxy_IAnonymousImplementationProvider) ProvideAsInterface() IAnonymouslyImplementMe {
	return _jsii_.Invoke[IAnonymouslyImplementMe](
		i,
		"provideAsInterface",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IAnonymousImplementationProvider from an Option[IAnonymousImplementationProvider].
// You should never need to call this method directly.
func (j jsiiProxy_IAnonymousImplementationProvider) FromOption__() IAnonymousImplementationProvider {
	var j_ IAnonymousImplementationProvider = &j
	return j_
}

type IAnonymouslyImplementMe interface {
	Verb() _api_.String
	Value() _api_.Number
}

// The jsii proxy for IAnonymouslyImplementMe
type jsiiProxy_IAnonymouslyImplementMe struct {
	_ byte // padding
}

func (i *jsiiProxy_IAnonymouslyImplementMe) Verb() _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"verb",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IAnonymouslyImplementMe) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}

// FromOption__ unwraps an IAnonymouslyImplementMe from an Option[IAnonymouslyImplementMe].
// You should never need to call this method directly.
func (j jsiiProxy_IAnonymouslyImplementMe) FromOption__() IAnonymouslyImplementMe {
	var j_ IAnonymouslyImplementMe = &j
	return j_
}

type IAnotherPublicInterface interface {
	A() _api_.String
	SetA(a _api_.String)
}

// The jsii proxy for IAnotherPublicInterface
type jsiiProxy_IAnotherPublicInterface struct {
	_ byte // padding
}

func (j *jsiiProxy_IAnotherPublicInterface) A() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"a",
	)
}

func (j *jsiiProxy_IAnotherPublicInterface) SetA(val _api_.String) {
	_jsii_.Set(
		j,
		"a",
		val,
	)
}

// FromOption__ unwraps an IAnotherPublicInterface from an Option[IAnotherPublicInterface].
// You should never need to call this method directly.
func (j jsiiProxy_IAnotherPublicInterface) FromOption__() IAnotherPublicInterface {
	var j_ IAnotherPublicInterface = &j
	return j_
}

type IBell interface {
	Ring()
}

// The jsii proxy for IBell
type jsiiProxy_IBell struct {
	_ byte // padding
}

func (i *jsiiProxy_IBell) Ring() {
	_jsii_.InvokeVoid(
		i,
		"ring",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IBell from an Option[IBell].
// You should never need to call this method directly.
func (j jsiiProxy_IBell) FromOption__() IBell {
	var j_ IBell = &j
	return j_
}

// Takes the object parameter as an interface.
type IBellRinger interface {
	YourTurn(bell IBell)
}

// The jsii proxy for IBellRinger
type jsiiProxy_IBellRinger struct {
	_ byte // padding
}

func (i *jsiiProxy_IBellRinger) YourTurn(bell IBell) {
	if bell == nil { panic("Parameters \\"bell\\" is required (received nil)") }
	_jsii_.InvokeVoid(
		i,
		"yourTurn",
		[]interface{}{bell},
	)
}

// FromOption__ unwraps an IBellRinger from an Option[IBellRinger].
// You should never need to call this method directly.
func (j jsiiProxy_IBellRinger) FromOption__() IBellRinger {
	var j_ IBellRinger = &j
	return j_
}

// Takes the object parameter as a calss.
type IConcreteBellRinger interface {
	YourTurn(bell Bell)
}

// The jsii proxy for IConcreteBellRinger
type jsiiProxy_IConcreteBellRinger struct {
	_ byte // padding
}

func (i *jsiiProxy_IConcreteBellRinger) YourTurn(bell Bell) {
	if bell == nil { panic("Parameters \\"bell\\" is required (received nil)") }
	_jsii_.InvokeVoid(
		i,
		"yourTurn",
		[]interface{}{bell},
	)
}

// FromOption__ unwraps an IConcreteBellRinger from an Option[IConcreteBellRinger].
// You should never need to call this method directly.
func (j jsiiProxy_IConcreteBellRinger) FromOption__() IConcreteBellRinger {
	var j_ IConcreteBellRinger = &j
	return j_
}

// Deprecated: useless interface
type IDeprecatedInterface interface {
	// Deprecated: services no purpose
	Method()
	// Deprecated: could be better
	MutableProperty() _api_.Number
	// Deprecated: could be better
	SetMutableProperty(m _api_.Number)
}

// The jsii proxy for IDeprecatedInterface
type jsiiProxy_IDeprecatedInterface struct {
	_ byte // padding
}

func (i *jsiiProxy_IDeprecatedInterface) Method() {
	_jsii_.InvokeVoid(
		i,
		"method",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IDeprecatedInterface) MutableProperty() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"mutableProperty",
	)
}

func (j *jsiiProxy_IDeprecatedInterface) SetMutableProperty(val _api_.Number) {
	_jsii_.Set(
		j,
		"mutableProperty",
		val,
	)
}

// FromOption__ unwraps an IDeprecatedInterface from an Option[IDeprecatedInterface].
// You should never need to call this method directly.
func (j jsiiProxy_IDeprecatedInterface) FromOption__() IDeprecatedInterface {
	var j_ IDeprecatedInterface = &j
	return j_
}

// Experimental.
type IExperimentalInterface interface {
	// Experimental.
	Method()
	// Experimental.
	MutableProperty() _api_.Number
	// Experimental.
	SetMutableProperty(m _api_.Number)
}

// The jsii proxy for IExperimentalInterface
type jsiiProxy_IExperimentalInterface struct {
	_ byte // padding
}

func (i *jsiiProxy_IExperimentalInterface) Method() {
	_jsii_.InvokeVoid(
		i,
		"method",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IExperimentalInterface) MutableProperty() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"mutableProperty",
	)
}

func (j *jsiiProxy_IExperimentalInterface) SetMutableProperty(val _api_.Number) {
	_jsii_.Set(
		j,
		"mutableProperty",
		val,
	)
}

// FromOption__ unwraps an IExperimentalInterface from an Option[IExperimentalInterface].
// You should never need to call this method directly.
func (j jsiiProxy_IExperimentalInterface) FromOption__() IExperimentalInterface {
	var j_ IExperimentalInterface = &j
	return j_
}

type IExtendsPrivateInterface interface {
	MoreThings() _api_.Slice[_api_.String]
	Private() _api_.String
	SetPrivate(p _api_.String)
}

// The jsii proxy for IExtendsPrivateInterface
type jsiiProxy_IExtendsPrivateInterface struct {
	_ byte // padding
}

func (j *jsiiProxy_IExtendsPrivateInterface) MoreThings() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"moreThings",
	)
}

func (j *jsiiProxy_IExtendsPrivateInterface) Private() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"private",
	)
}

func (j *jsiiProxy_IExtendsPrivateInterface) SetPrivate(val _api_.String) {
	_jsii_.Set(
		j,
		"private",
		val,
	)
}

// FromOption__ unwraps an IExtendsPrivateInterface from an Option[IExtendsPrivateInterface].
// You should never need to call this method directly.
func (j jsiiProxy_IExtendsPrivateInterface) FromOption__() IExtendsPrivateInterface {
	var j_ IExtendsPrivateInterface = &j
	return j_
}

type IExternalInterface interface {
	Method()
	MutableProperty() _api_.Number
	SetMutableProperty(m _api_.Number)
}

// The jsii proxy for IExternalInterface
type jsiiProxy_IExternalInterface struct {
	_ byte // padding
}

func (i *jsiiProxy_IExternalInterface) Method() {
	_jsii_.InvokeVoid(
		i,
		"method",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IExternalInterface) MutableProperty() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"mutableProperty",
	)
}

func (j *jsiiProxy_IExternalInterface) SetMutableProperty(val _api_.Number) {
	_jsii_.Set(
		j,
		"mutableProperty",
		val,
	)
}

// FromOption__ unwraps an IExternalInterface from an Option[IExternalInterface].
// You should never need to call this method directly.
func (j jsiiProxy_IExternalInterface) FromOption__() IExternalInterface {
	var j_ IExternalInterface = &j
	return j_
}

// Even friendlier classes can implement this interface.
type IFriendlier interface {
	scopejsiicalclib.IFriendly
	// Say farewell.
	Farewell() _api_.String
	// Say goodbye.
	//
	// Returns: A goodbye blessing.
	Goodbye() _api_.String
}

// The jsii proxy for IFriendlier
type jsiiProxy_IFriendlier struct {
	internal.Type__scopejsiicalclibIFriendly
}

func (i *jsiiProxy_IFriendlier) Farewell() _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"farewell",
		nil, // no parameters
	)
}

func (i *jsiiProxy_IFriendlier) Goodbye() _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"goodbye",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IFriendlier from an Option[IFriendlier].
// You should never need to call this method directly.
func (j jsiiProxy_IFriendlier) FromOption__() IFriendlier {
	var j_ IFriendlier = &j
	return j_
}

type IFriendlyRandomGenerator interface {
	scopejsiicalclib.IFriendly
	IRandomNumberGenerator
}

// The jsii proxy for IFriendlyRandomGenerator
type jsiiProxy_IFriendlyRandomGenerator struct {
	internal.Type__scopejsiicalclibIFriendly
	jsiiProxy_IRandomNumberGenerator
}

func (i *jsiiProxy_IFriendlyRandomGenerator) Hello() _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"hello",
		nil, // no parameters
	)
}

func (i *jsiiProxy_IFriendlyRandomGenerator) Next() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		i,
		"next",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IFriendlyRandomGenerator from an Option[IFriendlyRandomGenerator].
// You should never need to call this method directly.
func (j jsiiProxy_IFriendlyRandomGenerator) FromOption__() IFriendlyRandomGenerator {
	var j_ IFriendlyRandomGenerator = &j
	return j_
}

// awslabs/jsii#220 Abstract return type.
type IInterfaceImplementedByAbstractClass interface {
	PropFromInterface() _api_.String
}

// The jsii proxy for IInterfaceImplementedByAbstractClass
type jsiiProxy_IInterfaceImplementedByAbstractClass struct {
	_ byte // padding
}

func (j *jsiiProxy_IInterfaceImplementedByAbstractClass) PropFromInterface() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"propFromInterface",
	)
}

// FromOption__ unwraps an IInterfaceImplementedByAbstractClass from an Option[IInterfaceImplementedByAbstractClass].
// You should never need to call this method directly.
func (j jsiiProxy_IInterfaceImplementedByAbstractClass) FromOption__() IInterfaceImplementedByAbstractClass {
	var j_ IInterfaceImplementedByAbstractClass = &j
	return j_
}

// Even though this interface has only properties, it is disqualified from being a datatype because it inherits from an interface that is not a datatype.
type IInterfaceThatShouldNotBeADataType interface {
	IInterfaceWithMethods
	OtherValue() _api_.String
}

// The jsii proxy for IInterfaceThatShouldNotBeADataType
type jsiiProxy_IInterfaceThatShouldNotBeADataType struct {
	jsiiProxy_IInterfaceWithMethods
}

func (j *jsiiProxy_IInterfaceThatShouldNotBeADataType) OtherValue() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"otherValue",
	)
}

// FromOption__ unwraps an IInterfaceThatShouldNotBeADataType from an Option[IInterfaceThatShouldNotBeADataType].
// You should never need to call this method directly.
func (j jsiiProxy_IInterfaceThatShouldNotBeADataType) FromOption__() IInterfaceThatShouldNotBeADataType {
	var j_ IInterfaceThatShouldNotBeADataType = &j
	return j_
}

type IInterfaceWithInternal interface {
	Visible()
}

// The jsii proxy for IInterfaceWithInternal
type jsiiProxy_IInterfaceWithInternal struct {
	_ byte // padding
}

func (i *jsiiProxy_IInterfaceWithInternal) Visible() {
	_jsii_.InvokeVoid(
		i,
		"visible",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IInterfaceWithInternal from an Option[IInterfaceWithInternal].
// You should never need to call this method directly.
func (j jsiiProxy_IInterfaceWithInternal) FromOption__() IInterfaceWithInternal {
	var j_ IInterfaceWithInternal = &j
	return j_
}

type IInterfaceWithMethods interface {
	DoThings()
	Value() _api_.String
}

// The jsii proxy for IInterfaceWithMethods
type jsiiProxy_IInterfaceWithMethods struct {
	_ byte // padding
}

func (i *jsiiProxy_IInterfaceWithMethods) DoThings() {
	_jsii_.InvokeVoid(
		i,
		"doThings",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IInterfaceWithMethods) Value() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"value",
	)
}

// FromOption__ unwraps an IInterfaceWithMethods from an Option[IInterfaceWithMethods].
// You should never need to call this method directly.
func (j jsiiProxy_IInterfaceWithMethods) FromOption__() IInterfaceWithMethods {
	var j_ IInterfaceWithMethods = &j
	return j_
}

// awslabs/jsii#175 Interface proxies (and builders) do not respect optional arguments in methods.
type IInterfaceWithOptionalMethodArguments interface {
	Hello(arg1 _api_.String, arg2 _api_.Option[_api_.Number])
}

// The jsii proxy for IInterfaceWithOptionalMethodArguments
type jsiiProxy_IInterfaceWithOptionalMethodArguments struct {
	_ byte // padding
}

func (i *jsiiProxy_IInterfaceWithOptionalMethodArguments) Hello(arg1 _api_.String, arg2 _api_.Option[_api_.Number]) {
	_jsii_.InvokeVoid(
		i,
		"hello",
		[]interface{}{arg1, arg2},
	)
}

// FromOption__ unwraps an IInterfaceWithOptionalMethodArguments from an Option[IInterfaceWithOptionalMethodArguments].
// You should never need to call this method directly.
func (j jsiiProxy_IInterfaceWithOptionalMethodArguments) FromOption__() IInterfaceWithOptionalMethodArguments {
	var j_ IInterfaceWithOptionalMethodArguments = &j
	return j_
}

type IInterfaceWithProperties interface {
	ReadOnlyString() _api_.String
	ReadWriteString() _api_.String
	SetReadWriteString(r _api_.String)
}

// The jsii proxy for IInterfaceWithProperties
type jsiiProxy_IInterfaceWithProperties struct {
	_ byte // padding
}

func (j *jsiiProxy_IInterfaceWithProperties) ReadOnlyString() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"readOnlyString",
	)
}

func (j *jsiiProxy_IInterfaceWithProperties) ReadWriteString() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"readWriteString",
	)
}

func (j *jsiiProxy_IInterfaceWithProperties) SetReadWriteString(val _api_.String) {
	_jsii_.Set(
		j,
		"readWriteString",
		val,
	)
}

// FromOption__ unwraps an IInterfaceWithProperties from an Option[IInterfaceWithProperties].
// You should never need to call this method directly.
func (j jsiiProxy_IInterfaceWithProperties) FromOption__() IInterfaceWithProperties {
	var j_ IInterfaceWithProperties = &j
	return j_
}

type IInterfaceWithPropertiesExtension interface {
	IInterfaceWithProperties
	Foo() _api_.Number
	SetFoo(f _api_.Number)
}

// The jsii proxy for IInterfaceWithPropertiesExtension
type jsiiProxy_IInterfaceWithPropertiesExtension struct {
	jsiiProxy_IInterfaceWithProperties
}

func (j *jsiiProxy_IInterfaceWithPropertiesExtension) Foo() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"foo",
	)
}

func (j *jsiiProxy_IInterfaceWithPropertiesExtension) SetFoo(val _api_.Number) {
	_jsii_.Set(
		j,
		"foo",
		val,
	)
}

// FromOption__ unwraps an IInterfaceWithPropertiesExtension from an Option[IInterfaceWithPropertiesExtension].
// You should never need to call this method directly.
func (j jsiiProxy_IInterfaceWithPropertiesExtension) FromOption__() IInterfaceWithPropertiesExtension {
	var j_ IInterfaceWithPropertiesExtension = &j
	return j_
}

type IJSII417Derived interface {
	IJSII417PublicBaseOfBase
	Bar()
	Baz()
	Property() _api_.String
}

// The jsii proxy for IJSII417Derived
type jsiiProxy_IJSII417Derived struct {
	jsiiProxy_IJSII417PublicBaseOfBase
}

func (i *jsiiProxy_IJSII417Derived) Bar() {
	_jsii_.InvokeVoid(
		i,
		"bar",
		nil, // no parameters
	)
}

func (i *jsiiProxy_IJSII417Derived) Baz() {
	_jsii_.InvokeVoid(
		i,
		"baz",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IJSII417Derived) Property() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"property",
	)
}

// FromOption__ unwraps an IJSII417Derived from an Option[IJSII417Derived].
// You should never need to call this method directly.
func (j jsiiProxy_IJSII417Derived) FromOption__() IJSII417Derived {
	var j_ IJSII417Derived = &j
	return j_
}

type IJSII417PublicBaseOfBase interface {
	Foo()
	HasRoot() _api_.Bool
}

// The jsii proxy for IJSII417PublicBaseOfBase
type jsiiProxy_IJSII417PublicBaseOfBase struct {
	_ byte // padding
}

func (i *jsiiProxy_IJSII417PublicBaseOfBase) Foo() {
	_jsii_.InvokeVoid(
		i,
		"foo",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IJSII417PublicBaseOfBase) HasRoot() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"hasRoot",
	)
}

// FromOption__ unwraps an IJSII417PublicBaseOfBase from an Option[IJSII417PublicBaseOfBase].
// You should never need to call this method directly.
func (j jsiiProxy_IJSII417PublicBaseOfBase) FromOption__() IJSII417PublicBaseOfBase {
	var j_ IJSII417PublicBaseOfBase = &j
	return j_
}

type IJsii487External interface {
}

// The jsii proxy for IJsii487External
type jsiiProxy_IJsii487External struct {
	_ byte // padding
}

// FromOption__ unwraps an IJsii487External from an Option[IJsii487External].
// You should never need to call this method directly.
func (j jsiiProxy_IJsii487External) FromOption__() IJsii487External {
	var j_ IJsii487External = &j
	return j_
}

type IJsii487External2 interface {
}

// The jsii proxy for IJsii487External2
type jsiiProxy_IJsii487External2 struct {
	_ byte // padding
}

// FromOption__ unwraps an IJsii487External2 from an Option[IJsii487External2].
// You should never need to call this method directly.
func (j jsiiProxy_IJsii487External2) FromOption__() IJsii487External2 {
	var j_ IJsii487External2 = &j
	return j_
}

type IJsii496 interface {
}

// The jsii proxy for IJsii496
type jsiiProxy_IJsii496 struct {
	_ byte // padding
}

// FromOption__ unwraps an IJsii496 from an Option[IJsii496].
// You should never need to call this method directly.
func (j jsiiProxy_IJsii496) FromOption__() IJsii496 {
	var j_ IJsii496 = &j
	return j_
}

type IMutableObjectLiteral interface {
	Value() _api_.String
	SetValue(v _api_.String)
}

// The jsii proxy for IMutableObjectLiteral
type jsiiProxy_IMutableObjectLiteral struct {
	_ byte // padding
}

func (j *jsiiProxy_IMutableObjectLiteral) Value() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"value",
	)
}

func (j *jsiiProxy_IMutableObjectLiteral) SetValue(val _api_.String) {
	_jsii_.Set(
		j,
		"value",
		val,
	)
}

// FromOption__ unwraps an IMutableObjectLiteral from an Option[IMutableObjectLiteral].
// You should never need to call this method directly.
func (j jsiiProxy_IMutableObjectLiteral) FromOption__() IMutableObjectLiteral {
	var j_ IMutableObjectLiteral = &j
	return j_
}

type INonInternalInterface interface {
	IAnotherPublicInterface
	B() _api_.String
	SetB(b _api_.String)
	C() _api_.String
	SetC(c _api_.String)
}

// The jsii proxy for INonInternalInterface
type jsiiProxy_INonInternalInterface struct {
	jsiiProxy_IAnotherPublicInterface
}

func (j *jsiiProxy_INonInternalInterface) B() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"b",
	)
}

func (j *jsiiProxy_INonInternalInterface) SetB(val _api_.String) {
	_jsii_.Set(
		j,
		"b",
		val,
	)
}

func (j *jsiiProxy_INonInternalInterface) C() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"c",
	)
}

func (j *jsiiProxy_INonInternalInterface) SetC(val _api_.String) {
	_jsii_.Set(
		j,
		"c",
		val,
	)
}

// FromOption__ unwraps an INonInternalInterface from an Option[INonInternalInterface].
// You should never need to call this method directly.
func (j jsiiProxy_INonInternalInterface) FromOption__() INonInternalInterface {
	var j_ INonInternalInterface = &j
	return j_
}

// Make sure that setters are properly called on objects with interfaces.
type IObjectWithProperty interface {
	WasSet() _api_.Bool
	Property() _api_.String
	SetProperty(p _api_.String)
}

// The jsii proxy for IObjectWithProperty
type jsiiProxy_IObjectWithProperty struct {
	_ byte // padding
}

func (i *jsiiProxy_IObjectWithProperty) WasSet() _api_.Bool {
	return _jsii_.Invoke[_api_.Bool](
		i,
		"wasSet",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IObjectWithProperty) Property() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"property",
	)
}

func (j *jsiiProxy_IObjectWithProperty) SetProperty(val _api_.String) {
	_jsii_.Set(
		j,
		"property",
		val,
	)
}

// FromOption__ unwraps an IObjectWithProperty from an Option[IObjectWithProperty].
// You should never need to call this method directly.
func (j jsiiProxy_IObjectWithProperty) FromOption__() IObjectWithProperty {
	var j_ IObjectWithProperty = &j
	return j_
}

// Checks that optional result from interface method code generates correctly.
type IOptionalMethod interface {
	Optional() _api_.Option[_api_.String]
}

// The jsii proxy for IOptionalMethod
type jsiiProxy_IOptionalMethod struct {
	_ byte // padding
}

func (i *jsiiProxy_IOptionalMethod) Optional() _api_.Option[_api_.String] {
	return _jsii_.Invoke[_api_.Option[_api_.String]](
		i,
		"optional",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IOptionalMethod from an Option[IOptionalMethod].
// You should never need to call this method directly.
func (j jsiiProxy_IOptionalMethod) FromOption__() IOptionalMethod {
	var j_ IOptionalMethod = &j
	return j_
}

type IPrivatelyImplemented interface {
	Success() _api_.Bool
}

// The jsii proxy for IPrivatelyImplemented
type jsiiProxy_IPrivatelyImplemented struct {
	_ byte // padding
}

func (j *jsiiProxy_IPrivatelyImplemented) Success() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"success",
	)
}

// FromOption__ unwraps an IPrivatelyImplemented from an Option[IPrivatelyImplemented].
// You should never need to call this method directly.
func (j jsiiProxy_IPrivatelyImplemented) FromOption__() IPrivatelyImplemented {
	var j_ IPrivatelyImplemented = &j
	return j_
}

type IPublicInterface interface {
	Bye() _api_.String
}

// The jsii proxy for IPublicInterface
type jsiiProxy_IPublicInterface struct {
	_ byte // padding
}

func (i *jsiiProxy_IPublicInterface) Bye() _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"bye",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IPublicInterface from an Option[IPublicInterface].
// You should never need to call this method directly.
func (j jsiiProxy_IPublicInterface) FromOption__() IPublicInterface {
	var j_ IPublicInterface = &j
	return j_
}

type IPublicInterface2 interface {
	Ciao() _api_.String
}

// The jsii proxy for IPublicInterface2
type jsiiProxy_IPublicInterface2 struct {
	_ byte // padding
}

func (i *jsiiProxy_IPublicInterface2) Ciao() _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"ciao",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IPublicInterface2 from an Option[IPublicInterface2].
// You should never need to call this method directly.
func (j jsiiProxy_IPublicInterface2) FromOption__() IPublicInterface2 {
	var j_ IPublicInterface2 = &j
	return j_
}

// Generates random numbers.
type IRandomNumberGenerator interface {
	// Returns another random number.
	//
	// Returns: A random number.
	Next() _api_.Number
}

// The jsii proxy for IRandomNumberGenerator
type jsiiProxy_IRandomNumberGenerator struct {
	_ byte // padding
}

func (i *jsiiProxy_IRandomNumberGenerator) Next() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		i,
		"next",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IRandomNumberGenerator from an Option[IRandomNumberGenerator].
// You should never need to call this method directly.
func (j jsiiProxy_IRandomNumberGenerator) FromOption__() IRandomNumberGenerator {
	var j_ IRandomNumberGenerator = &j
	return j_
}

// Returns a subclass of a known class which implements an interface.
type IReturnJsii976 interface {
	Foo() _api_.Number
}

// The jsii proxy for IReturnJsii976
type jsiiProxy_IReturnJsii976 struct {
	_ byte // padding
}

func (j *jsiiProxy_IReturnJsii976) Foo() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"foo",
	)
}

// FromOption__ unwraps an IReturnJsii976 from an Option[IReturnJsii976].
// You should never need to call this method directly.
func (j jsiiProxy_IReturnJsii976) FromOption__() IReturnJsii976 {
	var j_ IReturnJsii976 = &j
	return j_
}

type IReturnsNumber interface {
	ObtainNumber() scopejsiicalclib.IDoublable
	NumberProp() scopejsiicalclib.Number
}

// The jsii proxy for IReturnsNumber
type jsiiProxy_IReturnsNumber struct {
	_ byte // padding
}

func (i *jsiiProxy_IReturnsNumber) ObtainNumber() scopejsiicalclib.IDoublable {
	return _jsii_.Invoke[scopejsiicalclib.IDoublable](
		i,
		"obtainNumber",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IReturnsNumber) NumberProp() scopejsiicalclib.Number {
	return _jsii_.Get[scopejsiicalclib.Number](
		j,
		"numberProp",
	)
}

// FromOption__ unwraps an IReturnsNumber from an Option[IReturnsNumber].
// You should never need to call this method directly.
func (j jsiiProxy_IReturnsNumber) FromOption__() IReturnsNumber {
	var j_ IReturnsNumber = &j
	return j_
}

type IStableInterface interface {
	Method()
	MutableProperty() _api_.Number
	SetMutableProperty(m _api_.Number)
}

// The jsii proxy for IStableInterface
type jsiiProxy_IStableInterface struct {
	_ byte // padding
}

func (i *jsiiProxy_IStableInterface) Method() {
	_jsii_.InvokeVoid(
		i,
		"method",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IStableInterface) MutableProperty() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"mutableProperty",
	)
}

func (j *jsiiProxy_IStableInterface) SetMutableProperty(val _api_.Number) {
	_jsii_.Set(
		j,
		"mutableProperty",
		val,
	)
}

// FromOption__ unwraps an IStableInterface from an Option[IStableInterface].
// You should never need to call this method directly.
func (j jsiiProxy_IStableInterface) FromOption__() IStableInterface {
	var j_ IStableInterface = &j
	return j_
}

// Verifies that a "pure" implementation of an interface works correctly.
type IStructReturningDelegate interface {
	ReturnStruct() StructB
}

// The jsii proxy for IStructReturningDelegate
type jsiiProxy_IStructReturningDelegate struct {
	_ byte // padding
}

func (i *jsiiProxy_IStructReturningDelegate) ReturnStruct() StructB {
	return _jsii_.Invoke[StructB](
		i,
		"returnStruct",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IStructReturningDelegate from an Option[IStructReturningDelegate].
// You should never need to call this method directly.
func (j jsiiProxy_IStructReturningDelegate) FromOption__() IStructReturningDelegate {
	var j_ IStructReturningDelegate = &j
	return j_
}

// Implement this interface.
type IWallClock interface {
	// Returns the current time, formatted as an ISO-8601 string.
	Iso8601Now() _api_.String
}

// The jsii proxy for IWallClock
type jsiiProxy_IWallClock struct {
	_ byte // padding
}

func (i *jsiiProxy_IWallClock) Iso8601Now() _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"iso8601Now",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IWallClock from an Option[IWallClock].
// You should never need to call this method directly.
func (j jsiiProxy_IWallClock) FromOption__() IWallClock {
	var j_ IWallClock = &j
	return j_
}

type ImplementInternalInterface interface {
	Prop() _api_.String
	SetProp(val _api_.String)
}

// The jsii proxy struct for ImplementInternalInterface
type jsiiProxy_ImplementInternalInterface struct {
	_ byte // padding
}

func (j *jsiiProxy_ImplementInternalInterface) Prop() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"prop",
	)
}


func NewImplementInternalInterface() ImplementInternalInterface {
	_init_.Initialize()

	j := jsiiProxy_ImplementInternalInterface{}

	_jsii_.Create(
		"jsii-calc.ImplementInternalInterface",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewImplementInternalInterface_Override(i ImplementInternalInterface) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ImplementInternalInterface",
		nil, // no parameters
		i,
	)
}

func (j *jsiiProxy_ImplementInternalInterface) SetProp(val _api_.String) {
	_jsii_.Set(
		j,
		"prop",
		val,
	)
}

// FromOption__ unwraps an ImplementInternalInterface from an Option[ImplementInternalInterface].
// You should never need to call this method directly.
func (j jsiiProxy_ImplementInternalInterface) FromOption__() ImplementInternalInterface {
	var j_ ImplementInternalInterface = &j
	return j_
}

type Implementation interface {
	Value() _api_.Number
}

// The jsii proxy struct for Implementation
type jsiiProxy_Implementation struct {
	_ byte // padding
}

func (j *jsiiProxy_Implementation) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


func NewImplementation() Implementation {
	_init_.Initialize()

	j := jsiiProxy_Implementation{}

	_jsii_.Create(
		"jsii-calc.Implementation",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewImplementation_Override(i Implementation) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Implementation",
		nil, // no parameters
		i,
	)
}

// FromOption__ unwraps an Implementation from an Option[Implementation].
// You should never need to call this method directly.
func (j jsiiProxy_Implementation) FromOption__() Implementation {
	var j_ Implementation = &j
	return j_
}

type ImplementsInterfaceWithInternal interface {
	IInterfaceWithInternal
	Visible()
}

// The jsii proxy struct for ImplementsInterfaceWithInternal
type jsiiProxy_ImplementsInterfaceWithInternal struct {
	jsiiProxy_IInterfaceWithInternal
}

func NewImplementsInterfaceWithInternal() ImplementsInterfaceWithInternal {
	_init_.Initialize()

	j := jsiiProxy_ImplementsInterfaceWithInternal{}

	_jsii_.Create(
		"jsii-calc.ImplementsInterfaceWithInternal",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewImplementsInterfaceWithInternal_Override(i ImplementsInterfaceWithInternal) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ImplementsInterfaceWithInternal",
		nil, // no parameters
		i,
	)
}

func (i *jsiiProxy_ImplementsInterfaceWithInternal) Visible() {
	_jsii_.InvokeVoid(
		i,
		"visible",
		nil, // no parameters
	)
}

// FromOption__ unwraps an ImplementsInterfaceWithInternal from an Option[ImplementsInterfaceWithInternal].
// You should never need to call this method directly.
func (j jsiiProxy_ImplementsInterfaceWithInternal) FromOption__() ImplementsInterfaceWithInternal {
	var j_ ImplementsInterfaceWithInternal = &j
	return j_
}

type ImplementsInterfaceWithInternalSubclass interface {
	ImplementsInterfaceWithInternal
	Visible()
}

// The jsii proxy struct for ImplementsInterfaceWithInternalSubclass
type jsiiProxy_ImplementsInterfaceWithInternalSubclass struct {
	jsiiProxy_ImplementsInterfaceWithInternal
}

func NewImplementsInterfaceWithInternalSubclass() ImplementsInterfaceWithInternalSubclass {
	_init_.Initialize()

	j := jsiiProxy_ImplementsInterfaceWithInternalSubclass{}

	_jsii_.Create(
		"jsii-calc.ImplementsInterfaceWithInternalSubclass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewImplementsInterfaceWithInternalSubclass_Override(i ImplementsInterfaceWithInternalSubclass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ImplementsInterfaceWithInternalSubclass",
		nil, // no parameters
		i,
	)
}

func (i *jsiiProxy_ImplementsInterfaceWithInternalSubclass) Visible() {
	_jsii_.InvokeVoid(
		i,
		"visible",
		nil, // no parameters
	)
}

// FromOption__ unwraps an ImplementsInterfaceWithInternalSubclass from an Option[ImplementsInterfaceWithInternalSubclass].
// You should never need to call this method directly.
func (j jsiiProxy_ImplementsInterfaceWithInternalSubclass) FromOption__() ImplementsInterfaceWithInternalSubclass {
	var j_ ImplementsInterfaceWithInternalSubclass = &j
	return j_
}

type ImplementsPrivateInterface interface {
	Private() _api_.String
	SetPrivate(val _api_.String)
}

// The jsii proxy struct for ImplementsPrivateInterface
type jsiiProxy_ImplementsPrivateInterface struct {
	_ byte // padding
}

func (j *jsiiProxy_ImplementsPrivateInterface) Private() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"private",
	)
}


func NewImplementsPrivateInterface() ImplementsPrivateInterface {
	_init_.Initialize()

	j := jsiiProxy_ImplementsPrivateInterface{}

	_jsii_.Create(
		"jsii-calc.ImplementsPrivateInterface",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewImplementsPrivateInterface_Override(i ImplementsPrivateInterface) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ImplementsPrivateInterface",
		nil, // no parameters
		i,
	)
}

func (j *jsiiProxy_ImplementsPrivateInterface) SetPrivate(val _api_.String) {
	_jsii_.Set(
		j,
		"private",
		val,
	)
}

// FromOption__ unwraps an ImplementsPrivateInterface from an Option[ImplementsPrivateInterface].
// You should never need to call this method directly.
func (j jsiiProxy_ImplementsPrivateInterface) FromOption__() ImplementsPrivateInterface {
	var j_ ImplementsPrivateInterface = &j
	return j_
}

type ImplictBaseOfBase struct {
	Foo scopejsiicalcbaseofbase.Very \`json:"foo"\`
	Bar _api_.String \`json:"bar"\`
	Goo _api_.Time \`json:"goo"\`
}

// FromOption__ unwraps an ImplictBaseOfBase from an Option[ImplictBaseOfBase].
// You should never need to call this method directly.
func (i ImplictBaseOfBase) FromOption__() ImplictBaseOfBase {
	return i
}

type InbetweenClass interface {
	PublicClass
	IPublicInterface2
	Ciao() _api_.String
	Hello()
}

// The jsii proxy struct for InbetweenClass
type jsiiProxy_InbetweenClass struct {
	jsiiProxy_PublicClass
	jsiiProxy_IPublicInterface2
}

func NewInbetweenClass() InbetweenClass {
	_init_.Initialize()

	j := jsiiProxy_InbetweenClass{}

	_jsii_.Create(
		"jsii-calc.InbetweenClass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewInbetweenClass_Override(i InbetweenClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.InbetweenClass",
		nil, // no parameters
		i,
	)
}

func (i *jsiiProxy_InbetweenClass) Ciao() _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"ciao",
		nil, // no parameters
	)
}

func (i *jsiiProxy_InbetweenClass) Hello() {
	_jsii_.InvokeVoid(
		i,
		"hello",
		nil, // no parameters
	)
}

// FromOption__ unwraps an InbetweenClass from an Option[InbetweenClass].
// You should never need to call this method directly.
func (j jsiiProxy_InbetweenClass) FromOption__() InbetweenClass {
	var j_ InbetweenClass = &j
	return j_
}

// Verifies that collections of interfaces or structs are correctly handled.
//
// See: https://github.com/aws/jsii/issues/1196
type InterfaceCollections interface {
}

// The jsii proxy struct for InterfaceCollections
type jsiiProxy_InterfaceCollections struct {
	_ byte // padding
}

func InterfaceCollections_ListOfInterfaces() _api_.Slice[IBell] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Slice[IBell]](
		"jsii-calc.InterfaceCollections",
		"listOfInterfaces",
		nil, // no parameters
	)
}

func InterfaceCollections_ListOfStructs() _api_.Slice[StructA] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Slice[StructA]](
		"jsii-calc.InterfaceCollections",
		"listOfStructs",
		nil, // no parameters
	)
}

func InterfaceCollections_MapOfInterfaces() _api_.Map[IBell] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Map[IBell]](
		"jsii-calc.InterfaceCollections",
		"mapOfInterfaces",
		nil, // no parameters
	)
}

func InterfaceCollections_MapOfStructs() _api_.Map[StructA] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Map[StructA]](
		"jsii-calc.InterfaceCollections",
		"mapOfStructs",
		nil, // no parameters
	)
}

// FromOption__ unwraps an InterfaceCollections from an Option[InterfaceCollections].
// You should never need to call this method directly.
func (j jsiiProxy_InterfaceCollections) FromOption__() InterfaceCollections {
	var j_ InterfaceCollections = &j
	return j_
}

// We can return arrays of interfaces See aws/aws-cdk#2362.
type InterfacesMaker interface {
}

// The jsii proxy struct for InterfacesMaker
type jsiiProxy_InterfacesMaker struct {
	_ byte // padding
}

func InterfacesMaker_MakeInterfaces(count _api_.Number) _api_.Slice[scopejsiicalclib.IDoublable] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Slice[scopejsiicalclib.IDoublable]](
		"jsii-calc.InterfacesMaker",
		"makeInterfaces",
		[]interface{}{count},
	)
}

// FromOption__ unwraps an InterfacesMaker from an Option[InterfacesMaker].
// You should never need to call this method directly.
func (j jsiiProxy_InterfacesMaker) FromOption__() InterfacesMaker {
	var j_ InterfacesMaker = &j
	return j_
}

// Checks the "same instance" isomorphism is preserved within the constructor.
//
// Create a subclass of this, and assert that \`this.myself()\` actually returns
// \`this\` from within the constructor.
type Isomorphism interface {
	Myself() Isomorphism
}

// The jsii proxy struct for Isomorphism
type jsiiProxy_Isomorphism struct {
	_ byte // padding
}

func NewIsomorphism_Override(i Isomorphism) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Isomorphism",
		nil, // no parameters
		i,
	)
}

func (i *jsiiProxy_Isomorphism) Myself() Isomorphism {
	return _jsii_.Invoke[Isomorphism](
		i,
		"myself",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Isomorphism from an Option[Isomorphism].
// You should never need to call this method directly.
func (j jsiiProxy_Isomorphism) FromOption__() Isomorphism {
	var j_ Isomorphism = &j
	return j_
}

// Docstrings with period.
// See: https://github.com/aws/jsii/issues/2638
//
type Issue2638 interface {
}

// The jsii proxy struct for Issue2638
type jsiiProxy_Issue2638 struct {
	_ byte // padding
}

// First sentence.
//
// Second sentence. Third sentence.
func NewIssue2638() Issue2638 {
	_init_.Initialize()

	j := jsiiProxy_Issue2638{}

	_jsii_.Create(
		"jsii-calc.Issue2638",
		nil, // no parameters
		&j,
	)

	return &j
}

// First sentence.
//
// Second sentence. Third sentence.
func NewIssue2638_Override(i Issue2638) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Issue2638",
		nil, // no parameters
		i,
	)
}

// FromOption__ unwraps an Issue2638 from an Option[Issue2638].
// You should never need to call this method directly.
func (j jsiiProxy_Issue2638) FromOption__() Issue2638 {
	var j_ Issue2638 = &j
	return j_
}

type Issue2638B interface {
}

// The jsii proxy struct for Issue2638B
type jsiiProxy_Issue2638B struct {
	_ byte // padding
}

func NewIssue2638B() Issue2638B {
	_init_.Initialize()

	j := jsiiProxy_Issue2638B{}

	_jsii_.Create(
		"jsii-calc.Issue2638B",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewIssue2638B_Override(i Issue2638B) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Issue2638B",
		nil, // no parameters
		i,
	)
}

// FromOption__ unwraps an Issue2638B from an Option[Issue2638B].
// You should never need to call this method directly.
func (j jsiiProxy_Issue2638B) FromOption__() Issue2638B {
	var j_ Issue2638B = &j
	return j_
}

type JSII417Derived interface {
	JSII417PublicBaseOfBase
	HasRoot() _api_.Bool
	Property() _api_.String
	Bar()
	Baz()
	Foo()
}

// The jsii proxy struct for JSII417Derived
type jsiiProxy_JSII417Derived struct {
	jsiiProxy_JSII417PublicBaseOfBase
}

func (j *jsiiProxy_JSII417Derived) HasRoot() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"hasRoot",
	)
}

func (j *jsiiProxy_JSII417Derived) Property() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"property",
	)
}


func NewJSII417Derived(property _api_.String) JSII417Derived {
	_init_.Initialize()

	j := jsiiProxy_JSII417Derived{}

	_jsii_.Create(
		"jsii-calc.JSII417Derived",
		[]interface{}{property},
		&j,
	)

	return &j
}

func NewJSII417Derived_Override(j JSII417Derived, property _api_.String) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.JSII417Derived",
		[]interface{}{property},
		j,
	)
}

func JSII417Derived_MakeInstance() JSII417PublicBaseOfBase {
	_init_.Initialize()

	return _jsii_.StaticInvoke[JSII417PublicBaseOfBase](
		"jsii-calc.JSII417Derived",
		"makeInstance",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JSII417Derived) Bar() {
	_jsii_.InvokeVoid(
		j,
		"bar",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JSII417Derived) Baz() {
	_jsii_.InvokeVoid(
		j,
		"baz",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JSII417Derived) Foo() {
	_jsii_.InvokeVoid(
		j,
		"foo",
		nil, // no parameters
	)
}

// FromOption__ unwraps an JSII417Derived from an Option[JSII417Derived].
// You should never need to call this method directly.
func (j jsiiProxy_JSII417Derived) FromOption__() JSII417Derived {
	var j_ JSII417Derived = &j
	return j_
}

type JSII417PublicBaseOfBase interface {
	HasRoot() _api_.Bool
	Foo()
}

// The jsii proxy struct for JSII417PublicBaseOfBase
type jsiiProxy_JSII417PublicBaseOfBase struct {
	_ byte // padding
}

func (j *jsiiProxy_JSII417PublicBaseOfBase) HasRoot() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"hasRoot",
	)
}


func NewJSII417PublicBaseOfBase() JSII417PublicBaseOfBase {
	_init_.Initialize()

	j := jsiiProxy_JSII417PublicBaseOfBase{}

	_jsii_.Create(
		"jsii-calc.JSII417PublicBaseOfBase",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewJSII417PublicBaseOfBase_Override(j JSII417PublicBaseOfBase) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.JSII417PublicBaseOfBase",
		nil, // no parameters
		j,
	)
}

func JSII417PublicBaseOfBase_MakeInstance() JSII417PublicBaseOfBase {
	_init_.Initialize()

	return _jsii_.StaticInvoke[JSII417PublicBaseOfBase](
		"jsii-calc.JSII417PublicBaseOfBase",
		"makeInstance",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JSII417PublicBaseOfBase) Foo() {
	_jsii_.InvokeVoid(
		j,
		"foo",
		nil, // no parameters
	)
}

// FromOption__ unwraps an JSII417PublicBaseOfBase from an Option[JSII417PublicBaseOfBase].
// You should never need to call this method directly.
func (j jsiiProxy_JSII417PublicBaseOfBase) FromOption__() JSII417PublicBaseOfBase {
	var j_ JSII417PublicBaseOfBase = &j
	return j_
}

type JSObjectLiteralForInterface interface {
	GiveMeFriendly() scopejsiicalclib.IFriendly
	GiveMeFriendlyGenerator() IFriendlyRandomGenerator
}

// The jsii proxy struct for JSObjectLiteralForInterface
type jsiiProxy_JSObjectLiteralForInterface struct {
	_ byte // padding
}

func NewJSObjectLiteralForInterface() JSObjectLiteralForInterface {
	_init_.Initialize()

	j := jsiiProxy_JSObjectLiteralForInterface{}

	_jsii_.Create(
		"jsii-calc.JSObjectLiteralForInterface",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewJSObjectLiteralForInterface_Override(j JSObjectLiteralForInterface) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.JSObjectLiteralForInterface",
		nil, // no parameters
		j,
	)
}

func (j *jsiiProxy_JSObjectLiteralForInterface) GiveMeFriendly() scopejsiicalclib.IFriendly {
	return _jsii_.Invoke[scopejsiicalclib.IFriendly](
		j,
		"giveMeFriendly",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JSObjectLiteralForInterface) GiveMeFriendlyGenerator() IFriendlyRandomGenerator {
	return _jsii_.Invoke[IFriendlyRandomGenerator](
		j,
		"giveMeFriendlyGenerator",
		nil, // no parameters
	)
}

// FromOption__ unwraps an JSObjectLiteralForInterface from an Option[JSObjectLiteralForInterface].
// You should never need to call this method directly.
func (j jsiiProxy_JSObjectLiteralForInterface) FromOption__() JSObjectLiteralForInterface {
	var j_ JSObjectLiteralForInterface = &j
	return j_
}

type JSObjectLiteralToNative interface {
	ReturnLiteral() JSObjectLiteralToNativeClass
}

// The jsii proxy struct for JSObjectLiteralToNative
type jsiiProxy_JSObjectLiteralToNative struct {
	_ byte // padding
}

func NewJSObjectLiteralToNative() JSObjectLiteralToNative {
	_init_.Initialize()

	j := jsiiProxy_JSObjectLiteralToNative{}

	_jsii_.Create(
		"jsii-calc.JSObjectLiteralToNative",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewJSObjectLiteralToNative_Override(j JSObjectLiteralToNative) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.JSObjectLiteralToNative",
		nil, // no parameters
		j,
	)
}

func (j *jsiiProxy_JSObjectLiteralToNative) ReturnLiteral() JSObjectLiteralToNativeClass {
	return _jsii_.Invoke[JSObjectLiteralToNativeClass](
		j,
		"returnLiteral",
		nil, // no parameters
	)
}

// FromOption__ unwraps an JSObjectLiteralToNative from an Option[JSObjectLiteralToNative].
// You should never need to call this method directly.
func (j jsiiProxy_JSObjectLiteralToNative) FromOption__() JSObjectLiteralToNative {
	var j_ JSObjectLiteralToNative = &j
	return j_
}

type JSObjectLiteralToNativeClass interface {
	PropA() _api_.String
	SetPropA(val _api_.String)
	PropB() _api_.Number
	SetPropB(val _api_.Number)
}

// The jsii proxy struct for JSObjectLiteralToNativeClass
type jsiiProxy_JSObjectLiteralToNativeClass struct {
	_ byte // padding
}

func (j *jsiiProxy_JSObjectLiteralToNativeClass) PropA() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"propA",
	)
}

func (j *jsiiProxy_JSObjectLiteralToNativeClass) PropB() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"propB",
	)
}


func NewJSObjectLiteralToNativeClass() JSObjectLiteralToNativeClass {
	_init_.Initialize()

	j := jsiiProxy_JSObjectLiteralToNativeClass{}

	_jsii_.Create(
		"jsii-calc.JSObjectLiteralToNativeClass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewJSObjectLiteralToNativeClass_Override(j JSObjectLiteralToNativeClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.JSObjectLiteralToNativeClass",
		nil, // no parameters
		j,
	)
}

func (j *jsiiProxy_JSObjectLiteralToNativeClass) SetPropA(val _api_.String) {
	_jsii_.Set(
		j,
		"propA",
		val,
	)
}

func (j *jsiiProxy_JSObjectLiteralToNativeClass) SetPropB(val _api_.Number) {
	_jsii_.Set(
		j,
		"propB",
		val,
	)
}

// FromOption__ unwraps an JSObjectLiteralToNativeClass from an Option[JSObjectLiteralToNativeClass].
// You should never need to call this method directly.
func (j jsiiProxy_JSObjectLiteralToNativeClass) FromOption__() JSObjectLiteralToNativeClass {
	var j_ JSObjectLiteralToNativeClass = &j
	return j_
}

type JavaReservedWords interface {
	While() _api_.String
	SetWhile(val _api_.String)
	Abstract()
	Assert()
	Boolean()
	Break()
	Byte()
	Case()
	Catch()
	Char()
	Class()
	Const()
	Continue()
	Default()
	Do()
	Double()
	Else()
	Enum()
	Extends()
	False()
	Final()
	Finally()
	Float()
	For()
	Goto()
	If()
	Implements()
	Import()
	Instanceof()
	Int()
	Interface()
	Long()
	Native()
	New()
	Null()
	Package()
	Private()
	Protected()
	Public()
	Return()
	Short()
	Static()
	Strictfp()
	Super()
	Switch()
	Synchronized()
	This()
	Throw()
	Throws()
	Transient()
	True()
	Try()
	Void()
	Volatile()
}

// The jsii proxy struct for JavaReservedWords
type jsiiProxy_JavaReservedWords struct {
	_ byte // padding
}

func (j *jsiiProxy_JavaReservedWords) While() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"while",
	)
}


func NewJavaReservedWords() JavaReservedWords {
	_init_.Initialize()

	j := jsiiProxy_JavaReservedWords{}

	_jsii_.Create(
		"jsii-calc.JavaReservedWords",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewJavaReservedWords_Override(j JavaReservedWords) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.JavaReservedWords",
		nil, // no parameters
		j,
	)
}

func (j *jsiiProxy_JavaReservedWords) SetWhile(val _api_.String) {
	_jsii_.Set(
		j,
		"while",
		val,
	)
}

func (j *jsiiProxy_JavaReservedWords) Abstract() {
	_jsii_.InvokeVoid(
		j,
		"abstract",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Assert() {
	_jsii_.InvokeVoid(
		j,
		"assert",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Boolean() {
	_jsii_.InvokeVoid(
		j,
		"boolean",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Break() {
	_jsii_.InvokeVoid(
		j,
		"break",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Byte() {
	_jsii_.InvokeVoid(
		j,
		"byte",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Case() {
	_jsii_.InvokeVoid(
		j,
		"case",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Catch() {
	_jsii_.InvokeVoid(
		j,
		"catch",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Char() {
	_jsii_.InvokeVoid(
		j,
		"char",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Class() {
	_jsii_.InvokeVoid(
		j,
		"class",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Const() {
	_jsii_.InvokeVoid(
		j,
		"const",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Continue() {
	_jsii_.InvokeVoid(
		j,
		"continue",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Default() {
	_jsii_.InvokeVoid(
		j,
		"default",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Do() {
	_jsii_.InvokeVoid(
		j,
		"do",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Double() {
	_jsii_.InvokeVoid(
		j,
		"double",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Else() {
	_jsii_.InvokeVoid(
		j,
		"else",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Enum() {
	_jsii_.InvokeVoid(
		j,
		"enum",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Extends() {
	_jsii_.InvokeVoid(
		j,
		"extends",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) False() {
	_jsii_.InvokeVoid(
		j,
		"false",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Final() {
	_jsii_.InvokeVoid(
		j,
		"final",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Finally() {
	_jsii_.InvokeVoid(
		j,
		"finally",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Float() {
	_jsii_.InvokeVoid(
		j,
		"float",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) For() {
	_jsii_.InvokeVoid(
		j,
		"for",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Goto() {
	_jsii_.InvokeVoid(
		j,
		"goto",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) If() {
	_jsii_.InvokeVoid(
		j,
		"if",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Implements() {
	_jsii_.InvokeVoid(
		j,
		"implements",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Import() {
	_jsii_.InvokeVoid(
		j,
		"import",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Instanceof() {
	_jsii_.InvokeVoid(
		j,
		"instanceof",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Int() {
	_jsii_.InvokeVoid(
		j,
		"int",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Interface() {
	_jsii_.InvokeVoid(
		j,
		"interface",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Long() {
	_jsii_.InvokeVoid(
		j,
		"long",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Native() {
	_jsii_.InvokeVoid(
		j,
		"native",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) New() {
	_jsii_.InvokeVoid(
		j,
		"new",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Null() {
	_jsii_.InvokeVoid(
		j,
		"null",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Package() {
	_jsii_.InvokeVoid(
		j,
		"package",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Private() {
	_jsii_.InvokeVoid(
		j,
		"private",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Protected() {
	_jsii_.InvokeVoid(
		j,
		"protected",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Public() {
	_jsii_.InvokeVoid(
		j,
		"public",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Return() {
	_jsii_.InvokeVoid(
		j,
		"return",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Short() {
	_jsii_.InvokeVoid(
		j,
		"short",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Static() {
	_jsii_.InvokeVoid(
		j,
		"static",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Strictfp() {
	_jsii_.InvokeVoid(
		j,
		"strictfp",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Super() {
	_jsii_.InvokeVoid(
		j,
		"super",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Switch() {
	_jsii_.InvokeVoid(
		j,
		"switch",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Synchronized() {
	_jsii_.InvokeVoid(
		j,
		"synchronized",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) This() {
	_jsii_.InvokeVoid(
		j,
		"this",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Throw() {
	_jsii_.InvokeVoid(
		j,
		"throw",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Throws() {
	_jsii_.InvokeVoid(
		j,
		"throws",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Transient() {
	_jsii_.InvokeVoid(
		j,
		"transient",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) True() {
	_jsii_.InvokeVoid(
		j,
		"true",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Try() {
	_jsii_.InvokeVoid(
		j,
		"try",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Void() {
	_jsii_.InvokeVoid(
		j,
		"void",
		nil, // no parameters
	)
}

func (j *jsiiProxy_JavaReservedWords) Volatile() {
	_jsii_.InvokeVoid(
		j,
		"volatile",
		nil, // no parameters
	)
}

// FromOption__ unwraps an JavaReservedWords from an Option[JavaReservedWords].
// You should never need to call this method directly.
func (j jsiiProxy_JavaReservedWords) FromOption__() JavaReservedWords {
	var j_ JavaReservedWords = &j
	return j_
}

type Jsii487Derived interface {
	IJsii487External
	IJsii487External2
}

// The jsii proxy struct for Jsii487Derived
type jsiiProxy_Jsii487Derived struct {
	jsiiProxy_IJsii487External
	jsiiProxy_IJsii487External2
}

func NewJsii487Derived() Jsii487Derived {
	_init_.Initialize()

	j := jsiiProxy_Jsii487Derived{}

	_jsii_.Create(
		"jsii-calc.Jsii487Derived",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewJsii487Derived_Override(j Jsii487Derived) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Jsii487Derived",
		nil, // no parameters
		j,
	)
}

// FromOption__ unwraps an Jsii487Derived from an Option[Jsii487Derived].
// You should never need to call this method directly.
func (j jsiiProxy_Jsii487Derived) FromOption__() Jsii487Derived {
	var j_ Jsii487Derived = &j
	return j_
}

type Jsii496Derived interface {
	IJsii496
}

// The jsii proxy struct for Jsii496Derived
type jsiiProxy_Jsii496Derived struct {
	jsiiProxy_IJsii496
}

func NewJsii496Derived() Jsii496Derived {
	_init_.Initialize()

	j := jsiiProxy_Jsii496Derived{}

	_jsii_.Create(
		"jsii-calc.Jsii496Derived",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewJsii496Derived_Override(j Jsii496Derived) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Jsii496Derived",
		nil, // no parameters
		j,
	)
}

// FromOption__ unwraps an Jsii496Derived from an Option[Jsii496Derived].
// You should never need to call this method directly.
func (j jsiiProxy_Jsii496Derived) FromOption__() Jsii496Derived {
	var j_ Jsii496Derived = &j
	return j_
}

// Host runtime version should be set via JSII_AGENT.
type JsiiAgent interface {
}

// The jsii proxy struct for JsiiAgent
type jsiiProxy_JsiiAgent struct {
	_ byte // padding
}

func NewJsiiAgent() JsiiAgent {
	_init_.Initialize()

	j := jsiiProxy_JsiiAgent{}

	_jsii_.Create(
		"jsii-calc.JsiiAgent",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewJsiiAgent_Override(j JsiiAgent) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.JsiiAgent",
		nil, // no parameters
		j,
	)
}

func JsiiAgent_Value() _api_.Option[_api_.String] {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Option[_api_.String]](
		"jsii-calc.JsiiAgent",
		"value",
	)
}

// FromOption__ unwraps an JsiiAgent from an Option[JsiiAgent].
// You should never need to call this method directly.
func (j jsiiProxy_JsiiAgent) FromOption__() JsiiAgent {
	var j_ JsiiAgent = &j
	return j_
}

// Make sure structs are un-decorated on the way in.
// See: https://github.com/aws/aws-cdk/issues/5066
//
type JsonFormatter interface {
}

// The jsii proxy struct for JsonFormatter
type jsiiProxy_JsonFormatter struct {
	_ byte // padding
}

func JsonFormatter_AnyArray() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyArray",
		nil, // no parameters
	)
}

func JsonFormatter_AnyBooleanFalse() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyBooleanFalse",
		nil, // no parameters
	)
}

func JsonFormatter_AnyBooleanTrue() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyBooleanTrue",
		nil, // no parameters
	)
}

func JsonFormatter_AnyDate() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyDate",
		nil, // no parameters
	)
}

func JsonFormatter_AnyEmptyString() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyEmptyString",
		nil, // no parameters
	)
}

func JsonFormatter_AnyFunction() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyFunction",
		nil, // no parameters
	)
}

func JsonFormatter_AnyHash() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyHash",
		nil, // no parameters
	)
}

func JsonFormatter_AnyNull() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyNull",
		nil, // no parameters
	)
}

func JsonFormatter_AnyNumber() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyNumber",
		nil, // no parameters
	)
}

func JsonFormatter_AnyRef() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyRef",
		nil, // no parameters
	)
}

func JsonFormatter_AnyString() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyString",
		nil, // no parameters
	)
}

func JsonFormatter_AnyUndefined() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyUndefined",
		nil, // no parameters
	)
}

func JsonFormatter_AnyZero() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.JsonFormatter",
		"anyZero",
		nil, // no parameters
	)
}

func JsonFormatter_Stringify(value interface{}) _api_.Option[_api_.String] {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Option[_api_.String]](
		"jsii-calc.JsonFormatter",
		"stringify",
		[]interface{}{value},
	)
}

// FromOption__ unwraps an JsonFormatter from an Option[JsonFormatter].
// You should never need to call this method directly.
func (j jsiiProxy_JsonFormatter) FromOption__() JsonFormatter {
	var j_ JsonFormatter = &j
	return j_
}

// Validates that nested classes get correct code generation for the occasional forward reference.
type LevelOne interface {
	Props() LevelOneProps
}

// The jsii proxy struct for LevelOne
type jsiiProxy_LevelOne struct {
	_ byte // padding
}

func (j *jsiiProxy_LevelOne) Props() LevelOneProps {
	return _jsii_.Get[LevelOneProps](
		j,
		"props",
	)
}


func NewLevelOne(props LevelOneProps) LevelOne {
	_init_.Initialize()

	j := jsiiProxy_LevelOne{}

	_jsii_.Create(
		"jsii-calc.LevelOne",
		[]interface{}{props},
		&j,
	)

	return &j
}

func NewLevelOne_Override(l LevelOne, props LevelOneProps) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.LevelOne",
		[]interface{}{props},
		l,
	)
}

// FromOption__ unwraps an LevelOne from an Option[LevelOne].
// You should never need to call this method directly.
func (j jsiiProxy_LevelOne) FromOption__() LevelOne {
	var j_ LevelOne = &j
	return j_
}

type LevelOne_PropBooleanValue struct {
	Value _api_.Bool \`json:"value"\`
}

// FromOption__ unwraps an LevelOne_PropBooleanValue from an Option[LevelOne_PropBooleanValue].
// You should never need to call this method directly.
func (l LevelOne_PropBooleanValue) FromOption__() LevelOne_PropBooleanValue {
	return l
}

type LevelOne_PropProperty struct {
	Prop LevelOne_PropBooleanValue \`json:"prop"\`
}

// FromOption__ unwraps an LevelOne_PropProperty from an Option[LevelOne_PropProperty].
// You should never need to call this method directly.
func (l LevelOne_PropProperty) FromOption__() LevelOne_PropProperty {
	return l
}

type LevelOneProps struct {
	Prop LevelOne_PropProperty \`json:"prop"\`
}

// FromOption__ unwraps an LevelOneProps from an Option[LevelOneProps].
// You should never need to call this method directly.
func (l LevelOneProps) FromOption__() LevelOneProps {
	return l
}

// jsii#298: show default values in sphinx documentation, and respect newlines.
type LoadBalancedFargateServiceProps struct {
	// The container port of the application load balancer attached to your Fargate service.
	//
	// Corresponds to container port mapping.
	ContainerPort _api_.Option[_api_.Number] \`json:"containerPort"\`
	// The number of cpu units used by the task.
	//
	// Valid values, which determines your range of valid values for the memory parameter:
	// 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB
	// 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB
	// 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB
	// 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments
	// 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments
	//
	// This default is set in the underlying FargateTaskDefinition construct.
	Cpu _api_.Option[_api_.String] \`json:"cpu"\`
	// The amount (in MiB) of memory used by the task.
	//
	// This field is required and you must use one of the following values, which determines your range of valid values
	// for the cpu parameter:
	//
	// 0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)
	//
	// 1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)
	//
	// 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)
	//
	// Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)
	//
	// Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)
	//
	// This default is set in the underlying FargateTaskDefinition construct.
	MemoryMiB _api_.Option[_api_.String] \`json:"memoryMiB"\`
	// Determines whether the Application Load Balancer will be internet-facing.
	PublicLoadBalancer _api_.Option[_api_.Bool] \`json:"publicLoadBalancer"\`
	// Determines whether your Fargate Service will be assigned a public IP address.
	PublicTasks _api_.Option[_api_.Bool] \`json:"publicTasks"\`
}

// FromOption__ unwraps an LoadBalancedFargateServiceProps from an Option[LoadBalancedFargateServiceProps].
// You should never need to call this method directly.
func (l LoadBalancedFargateServiceProps) FromOption__() LoadBalancedFargateServiceProps {
	return l
}

type MethodNamedProperty interface {
	Elite() _api_.Number
	Property() _api_.String
}

// The jsii proxy struct for MethodNamedProperty
type jsiiProxy_MethodNamedProperty struct {
	_ byte // padding
}

func (j *jsiiProxy_MethodNamedProperty) Elite() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"elite",
	)
}


func NewMethodNamedProperty() MethodNamedProperty {
	_init_.Initialize()

	j := jsiiProxy_MethodNamedProperty{}

	_jsii_.Create(
		"jsii-calc.MethodNamedProperty",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewMethodNamedProperty_Override(m MethodNamedProperty) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.MethodNamedProperty",
		nil, // no parameters
		m,
	)
}

func (m *jsiiProxy_MethodNamedProperty) Property() _api_.String {
	return _jsii_.Invoke[_api_.String](
		m,
		"property",
		nil, // no parameters
	)
}

// FromOption__ unwraps an MethodNamedProperty from an Option[MethodNamedProperty].
// You should never need to call this method directly.
func (j jsiiProxy_MethodNamedProperty) FromOption__() MethodNamedProperty {
	var j_ MethodNamedProperty = &j
	return j_
}

// The "*" binary operation.
type Multiply interface {
	BinaryOperation
	IFriendlier
	IRandomNumberGenerator
	Lhs() scopejsiicalclib.NumericValue
	Rhs() scopejsiicalclib.NumericValue
	Value() _api_.Number
	Farewell() _api_.String
	Goodbye() _api_.String
	Hello() _api_.String
	Next() _api_.Number
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for Multiply
type jsiiProxy_Multiply struct {
	jsiiProxy_BinaryOperation
	jsiiProxy_IFriendlier
	jsiiProxy_IRandomNumberGenerator
}

func (j *jsiiProxy_Multiply) Lhs() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"lhs",
	)
}

func (j *jsiiProxy_Multiply) Rhs() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"rhs",
	)
}

func (j *jsiiProxy_Multiply) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


// Creates a BinaryOperation.
func NewMultiply(lhs scopejsiicalclib.NumericValue, rhs scopejsiicalclib.NumericValue) Multiply {
	_init_.Initialize()

	if lhs == nil { panic("Parameters \\"lhs\\" is required (received nil)") }
	if rhs == nil { panic("Parameters \\"rhs\\" is required (received nil)") }
	j := jsiiProxy_Multiply{}

	_jsii_.Create(
		"jsii-calc.Multiply",
		[]interface{}{lhs, rhs},
		&j,
	)

	return &j
}

// Creates a BinaryOperation.
func NewMultiply_Override(m Multiply, lhs scopejsiicalclib.NumericValue, rhs scopejsiicalclib.NumericValue) {
	_init_.Initialize()

	if lhs == nil { panic("Parameters \\"lhs\\" is required (received nil)") }
	if rhs == nil { panic("Parameters \\"rhs\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.Multiply",
		[]interface{}{lhs, rhs},
		m,
	)
}

// Say farewell.
func (m *jsiiProxy_Multiply) Farewell() _api_.String {
	return _jsii_.Invoke[_api_.String](
		m,
		"farewell",
		nil, // no parameters
	)
}

// Say goodbye.
func (m *jsiiProxy_Multiply) Goodbye() _api_.String {
	return _jsii_.Invoke[_api_.String](
		m,
		"goodbye",
		nil, // no parameters
	)
}

// (deprecated) Say hello!
func (m *jsiiProxy_Multiply) Hello() _api_.String {
	return _jsii_.Invoke[_api_.String](
		m,
		"hello",
		nil, // no parameters
	)
}

// Returns another random number.
func (m *jsiiProxy_Multiply) Next() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		m,
		"next",
		nil, // no parameters
	)
}

// (deprecated) String representation of the value.
func (m *jsiiProxy_Multiply) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		m,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (m *jsiiProxy_Multiply) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		m,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Multiply from an Option[Multiply].
// You should never need to call this method directly.
func (j jsiiProxy_Multiply) FromOption__() Multiply {
	var j_ Multiply = &j
	return j_
}

// The negation operation ("-value").
type Negate interface {
	UnaryOperation
	IFriendlier
	Operand() scopejsiicalclib.NumericValue
	Value() _api_.Number
	Farewell() _api_.String
	Goodbye() _api_.String
	Hello() _api_.String
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for Negate
type jsiiProxy_Negate struct {
	jsiiProxy_UnaryOperation
	jsiiProxy_IFriendlier
}

func (j *jsiiProxy_Negate) Operand() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"operand",
	)
}

func (j *jsiiProxy_Negate) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


func NewNegate(operand scopejsiicalclib.NumericValue) Negate {
	_init_.Initialize()

	if operand == nil { panic("Parameters \\"operand\\" is required (received nil)") }
	j := jsiiProxy_Negate{}

	_jsii_.Create(
		"jsii-calc.Negate",
		[]interface{}{operand},
		&j,
	)

	return &j
}

func NewNegate_Override(n Negate, operand scopejsiicalclib.NumericValue) {
	_init_.Initialize()

	if operand == nil { panic("Parameters \\"operand\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.Negate",
		[]interface{}{operand},
		n,
	)
}

// Say farewell.
func (n *jsiiProxy_Negate) Farewell() _api_.String {
	return _jsii_.Invoke[_api_.String](
		n,
		"farewell",
		nil, // no parameters
	)
}

// Say goodbye.
func (n *jsiiProxy_Negate) Goodbye() _api_.String {
	return _jsii_.Invoke[_api_.String](
		n,
		"goodbye",
		nil, // no parameters
	)
}

// (deprecated) Say hello!
func (n *jsiiProxy_Negate) Hello() _api_.String {
	return _jsii_.Invoke[_api_.String](
		n,
		"hello",
		nil, // no parameters
	)
}

// (deprecated) String representation of the value.
func (n *jsiiProxy_Negate) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		n,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (n *jsiiProxy_Negate) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		n,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Negate from an Option[Negate].
// You should never need to call this method directly.
func (j jsiiProxy_Negate) FromOption__() Negate {
	var j_ Negate = &j
	return j_
}

type NestedClassInstance interface {
}

// The jsii proxy struct for NestedClassInstance
type jsiiProxy_NestedClassInstance struct {
	_ byte // padding
}

func NestedClassInstance_MakeInstance() customsubmodulename.NestingClass_NestedClass {
	_init_.Initialize()

	return _jsii_.StaticInvoke[customsubmodulename.NestingClass_NestedClass](
		"jsii-calc.NestedClassInstance",
		"makeInstance",
		nil, // no parameters
	)
}

// FromOption__ unwraps an NestedClassInstance from an Option[NestedClassInstance].
// You should never need to call this method directly.
func (j jsiiProxy_NestedClassInstance) FromOption__() NestedClassInstance {
	var j_ NestedClassInstance = &j
	return j_
}

type NestedStruct struct {
	// When provided, must be > 0.
	NumberProp _api_.Number \`json:"numberProp"\`
}

// FromOption__ unwraps an NestedStruct from an Option[NestedStruct].
// You should never need to call this method directly.
func (n NestedStruct) FromOption__() NestedStruct {
	return n
}

// Test fixture to verify that jsii modules can use the node standard library.
type NodeStandardLibrary interface {
	OsPlatform() _api_.String
	CryptoSha256() _api_.String
	FsReadFile() _api_.String
	FsReadFileSync() _api_.String
}

// The jsii proxy struct for NodeStandardLibrary
type jsiiProxy_NodeStandardLibrary struct {
	_ byte // padding
}

func (j *jsiiProxy_NodeStandardLibrary) OsPlatform() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"osPlatform",
	)
}


func NewNodeStandardLibrary() NodeStandardLibrary {
	_init_.Initialize()

	j := jsiiProxy_NodeStandardLibrary{}

	_jsii_.Create(
		"jsii-calc.NodeStandardLibrary",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewNodeStandardLibrary_Override(n NodeStandardLibrary) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.NodeStandardLibrary",
		nil, // no parameters
		n,
	)
}

// Uses node.js "crypto" module to calculate sha256 of a string.
//
// Returns: "6a2da20943931e9834fc12cfe5bb47bbd9ae43489a30726962b576f4e3993e50"
func (n *jsiiProxy_NodeStandardLibrary) CryptoSha256() _api_.String {
	return _jsii_.Invoke[_api_.String](
		n,
		"cryptoSha256",
		nil, // no parameters
	)
}

// Reads a local resource file (resource.txt) asynchronously.
//
// Returns: "Hello, resource!"
func (n *jsiiProxy_NodeStandardLibrary) FsReadFile() _api_.String {
	return _jsii_.Invoke[_api_.String](
		n,
		"fsReadFile",
		nil, // no parameters
	)
}

// Sync version of fsReadFile.
//
// Returns: "Hello, resource! SYNC!"
func (n *jsiiProxy_NodeStandardLibrary) FsReadFileSync() _api_.String {
	return _jsii_.Invoke[_api_.String](
		n,
		"fsReadFileSync",
		nil, // no parameters
	)
}

// FromOption__ unwraps an NodeStandardLibrary from an Option[NodeStandardLibrary].
// You should never need to call this method directly.
func (j jsiiProxy_NodeStandardLibrary) FromOption__() NodeStandardLibrary {
	var j_ NodeStandardLibrary = &j
	return j_
}

// jsii#282, aws-cdk#157: null should be treated as "undefined".
type NullShouldBeTreatedAsUndefined interface {
	ChangeMeToUndefined() _api_.Option[_api_.String]
	SetChangeMeToUndefined(val _api_.Option[_api_.String])
	GiveMeUndefined(value interface{})
	GiveMeUndefinedInsideAnObject(input NullShouldBeTreatedAsUndefinedData)
	VerifyPropertyIsUndefined()
}

// The jsii proxy struct for NullShouldBeTreatedAsUndefined
type jsiiProxy_NullShouldBeTreatedAsUndefined struct {
	_ byte // padding
}

func (j *jsiiProxy_NullShouldBeTreatedAsUndefined) ChangeMeToUndefined() _api_.Option[_api_.String] {
	return _jsii_.Get[_api_.Option[_api_.String]](
		j,
		"changeMeToUndefined",
	)
}


func NewNullShouldBeTreatedAsUndefined(_param1 _api_.String, optional interface{}) NullShouldBeTreatedAsUndefined {
	_init_.Initialize()

	j := jsiiProxy_NullShouldBeTreatedAsUndefined{}

	_jsii_.Create(
		"jsii-calc.NullShouldBeTreatedAsUndefined",
		[]interface{}{_param1, optional},
		&j,
	)

	return &j
}

func NewNullShouldBeTreatedAsUndefined_Override(n NullShouldBeTreatedAsUndefined, _param1 _api_.String, optional interface{}) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.NullShouldBeTreatedAsUndefined",
		[]interface{}{_param1, optional},
		n,
	)
}

func (j *jsiiProxy_NullShouldBeTreatedAsUndefined) SetChangeMeToUndefined(val _api_.Option[_api_.String]) {
	_jsii_.Set(
		j,
		"changeMeToUndefined",
		val,
	)
}

func (n *jsiiProxy_NullShouldBeTreatedAsUndefined) GiveMeUndefined(value interface{}) {
	_jsii_.InvokeVoid(
		n,
		"giveMeUndefined",
		[]interface{}{value},
	)
}

func (n *jsiiProxy_NullShouldBeTreatedAsUndefined) GiveMeUndefinedInsideAnObject(input NullShouldBeTreatedAsUndefinedData) {
	_jsii_.InvokeVoid(
		n,
		"giveMeUndefinedInsideAnObject",
		[]interface{}{input},
	)
}

func (n *jsiiProxy_NullShouldBeTreatedAsUndefined) VerifyPropertyIsUndefined() {
	_jsii_.InvokeVoid(
		n,
		"verifyPropertyIsUndefined",
		nil, // no parameters
	)
}

// FromOption__ unwraps an NullShouldBeTreatedAsUndefined from an Option[NullShouldBeTreatedAsUndefined].
// You should never need to call this method directly.
func (j jsiiProxy_NullShouldBeTreatedAsUndefined) FromOption__() NullShouldBeTreatedAsUndefined {
	var j_ NullShouldBeTreatedAsUndefined = &j
	return j_
}

type NullShouldBeTreatedAsUndefinedData struct {
	ArrayWithThreeElementsAndUndefinedAsSecondArgument _api_.Slice[interface{}] \`json:"arrayWithThreeElementsAndUndefinedAsSecondArgument"\`
	ThisShouldBeUndefined interface{} \`json:"thisShouldBeUndefined"\`
}

// FromOption__ unwraps an NullShouldBeTreatedAsUndefinedData from an Option[NullShouldBeTreatedAsUndefinedData].
// You should never need to call this method directly.
func (n NullShouldBeTreatedAsUndefinedData) FromOption__() NullShouldBeTreatedAsUndefinedData {
	return n
}

// This allows us to test that a reference can be stored for objects that implement interfaces.
type NumberGenerator interface {
	Generator() IRandomNumberGenerator
	SetGenerator(val IRandomNumberGenerator)
	IsSameGenerator(gen IRandomNumberGenerator) _api_.Bool
	NextTimes100() _api_.Number
}

// The jsii proxy struct for NumberGenerator
type jsiiProxy_NumberGenerator struct {
	_ byte // padding
}

func (j *jsiiProxy_NumberGenerator) Generator() IRandomNumberGenerator {
	return _jsii_.Get[IRandomNumberGenerator](
		j,
		"generator",
	)
}


func NewNumberGenerator(generator IRandomNumberGenerator) NumberGenerator {
	_init_.Initialize()

	if generator == nil { panic("Parameters \\"generator\\" is required (received nil)") }
	j := jsiiProxy_NumberGenerator{}

	_jsii_.Create(
		"jsii-calc.NumberGenerator",
		[]interface{}{generator},
		&j,
	)

	return &j
}

func NewNumberGenerator_Override(n NumberGenerator, generator IRandomNumberGenerator) {
	_init_.Initialize()

	if generator == nil { panic("Parameters \\"generator\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.NumberGenerator",
		[]interface{}{generator},
		n,
	)
}

func (j *jsiiProxy_NumberGenerator) SetGenerator(val IRandomNumberGenerator) {
	_jsii_.Set(
		j,
		"generator",
		val,
	)
}

func (n *jsiiProxy_NumberGenerator) IsSameGenerator(gen IRandomNumberGenerator) _api_.Bool {
	if gen == nil { panic("Parameters \\"gen\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.Bool](
		n,
		"isSameGenerator",
		[]interface{}{gen},
	)
}

func (n *jsiiProxy_NumberGenerator) NextTimes100() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		n,
		"nextTimes100",
		nil, // no parameters
	)
}

// FromOption__ unwraps an NumberGenerator from an Option[NumberGenerator].
// You should never need to call this method directly.
func (j jsiiProxy_NumberGenerator) FromOption__() NumberGenerator {
	var j_ NumberGenerator = &j
	return j_
}

// Verify that object references can be passed inside collections.
type ObjectRefsInCollections interface {
	SumFromArray(values _api_.Slice[scopejsiicalclib.NumericValue]) _api_.Number
	SumFromMap(values _api_.Map[scopejsiicalclib.NumericValue]) _api_.Number
}

// The jsii proxy struct for ObjectRefsInCollections
type jsiiProxy_ObjectRefsInCollections struct {
	_ byte // padding
}

func NewObjectRefsInCollections() ObjectRefsInCollections {
	_init_.Initialize()

	j := jsiiProxy_ObjectRefsInCollections{}

	_jsii_.Create(
		"jsii-calc.ObjectRefsInCollections",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewObjectRefsInCollections_Override(o ObjectRefsInCollections) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ObjectRefsInCollections",
		nil, // no parameters
		o,
	)
}

// Returns the sum of all values.
func (o *jsiiProxy_ObjectRefsInCollections) SumFromArray(values _api_.Slice[scopejsiicalclib.NumericValue]) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		o,
		"sumFromArray",
		[]interface{}{values},
	)
}

// Returns the sum of all values in a map.
func (o *jsiiProxy_ObjectRefsInCollections) SumFromMap(values _api_.Map[scopejsiicalclib.NumericValue]) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		o,
		"sumFromMap",
		[]interface{}{values},
	)
}

// FromOption__ unwraps an ObjectRefsInCollections from an Option[ObjectRefsInCollections].
// You should never need to call this method directly.
func (j jsiiProxy_ObjectRefsInCollections) FromOption__() ObjectRefsInCollections {
	var j_ ObjectRefsInCollections = &j
	return j_
}

type ObjectWithPropertyProvider interface {
}

// The jsii proxy struct for ObjectWithPropertyProvider
type jsiiProxy_ObjectWithPropertyProvider struct {
	_ byte // padding
}

func ObjectWithPropertyProvider_Provide() IObjectWithProperty {
	_init_.Initialize()

	return _jsii_.StaticInvoke[IObjectWithProperty](
		"jsii-calc.ObjectWithPropertyProvider",
		"provide",
		nil, // no parameters
	)
}

// FromOption__ unwraps an ObjectWithPropertyProvider from an Option[ObjectWithPropertyProvider].
// You should never need to call this method directly.
func (j jsiiProxy_ObjectWithPropertyProvider) FromOption__() ObjectWithPropertyProvider {
	var j_ ObjectWithPropertyProvider = &j
	return j_
}

// Old class.
// Deprecated: Use the new class or the old class whatever you want because
// whatever you like is always the best
type Old interface {
	DoAThing()
}

// The jsii proxy struct for Old
type jsiiProxy_Old struct {
	_ byte // padding
}

// Deprecated: Use the new class or the old class whatever you want because
// whatever you like is always the best
func NewOld() Old {
	_init_.Initialize()

	j := jsiiProxy_Old{}

	_jsii_.Create(
		"jsii-calc.Old",
		nil, // no parameters
		&j,
	)

	return &j
}

// Deprecated: Use the new class or the old class whatever you want because
// whatever you like is always the best
func NewOld_Override(o Old) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Old",
		nil, // no parameters
		o,
	)
}

// Doo wop that thing.
// Deprecated: Use the new class or the old class whatever you want because
// whatever you like is always the best
func (o *jsiiProxy_Old) DoAThing() {
	_jsii_.InvokeVoid(
		o,
		"doAThing",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Old from an Option[Old].
// You should never need to call this method directly.
func (j jsiiProxy_Old) FromOption__() Old {
	var j_ Old = &j
	return j_
}

type OptionalArgumentInvoker interface {
	InvokeWithOptional()
	InvokeWithoutOptional()
}

// The jsii proxy struct for OptionalArgumentInvoker
type jsiiProxy_OptionalArgumentInvoker struct {
	_ byte // padding
}

func NewOptionalArgumentInvoker(delegate IInterfaceWithOptionalMethodArguments) OptionalArgumentInvoker {
	_init_.Initialize()

	if delegate == nil { panic("Parameters \\"delegate\\" is required (received nil)") }
	j := jsiiProxy_OptionalArgumentInvoker{}

	_jsii_.Create(
		"jsii-calc.OptionalArgumentInvoker",
		[]interface{}{delegate},
		&j,
	)

	return &j
}

func NewOptionalArgumentInvoker_Override(o OptionalArgumentInvoker, delegate IInterfaceWithOptionalMethodArguments) {
	_init_.Initialize()

	if delegate == nil { panic("Parameters \\"delegate\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.OptionalArgumentInvoker",
		[]interface{}{delegate},
		o,
	)
}

func (o *jsiiProxy_OptionalArgumentInvoker) InvokeWithOptional() {
	_jsii_.InvokeVoid(
		o,
		"invokeWithOptional",
		nil, // no parameters
	)
}

func (o *jsiiProxy_OptionalArgumentInvoker) InvokeWithoutOptional() {
	_jsii_.InvokeVoid(
		o,
		"invokeWithoutOptional",
		nil, // no parameters
	)
}

// FromOption__ unwraps an OptionalArgumentInvoker from an Option[OptionalArgumentInvoker].
// You should never need to call this method directly.
func (j jsiiProxy_OptionalArgumentInvoker) FromOption__() OptionalArgumentInvoker {
	var j_ OptionalArgumentInvoker = &j
	return j_
}

type OptionalConstructorArgument interface {
	Arg1() _api_.Number
	Arg2() _api_.String
	Arg3() _api_.Option[_api_.Time]
}

// The jsii proxy struct for OptionalConstructorArgument
type jsiiProxy_OptionalConstructorArgument struct {
	_ byte // padding
}

func (j *jsiiProxy_OptionalConstructorArgument) Arg1() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"arg1",
	)
}

func (j *jsiiProxy_OptionalConstructorArgument) Arg2() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"arg2",
	)
}

func (j *jsiiProxy_OptionalConstructorArgument) Arg3() _api_.Option[_api_.Time] {
	return _jsii_.Get[_api_.Option[_api_.Time]](
		j,
		"arg3",
	)
}


func NewOptionalConstructorArgument(arg1 _api_.Number, arg2 _api_.String, arg3 _api_.Option[_api_.Time]) OptionalConstructorArgument {
	_init_.Initialize()

	j := jsiiProxy_OptionalConstructorArgument{}

	_jsii_.Create(
		"jsii-calc.OptionalConstructorArgument",
		[]interface{}{arg1, arg2, arg3},
		&j,
	)

	return &j
}

func NewOptionalConstructorArgument_Override(o OptionalConstructorArgument, arg1 _api_.Number, arg2 _api_.String, arg3 _api_.Option[_api_.Time]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.OptionalConstructorArgument",
		[]interface{}{arg1, arg2, arg3},
		o,
	)
}

// FromOption__ unwraps an OptionalConstructorArgument from an Option[OptionalConstructorArgument].
// You should never need to call this method directly.
func (j jsiiProxy_OptionalConstructorArgument) FromOption__() OptionalConstructorArgument {
	var j_ OptionalConstructorArgument = &j
	return j_
}

type OptionalStruct struct {
	Field _api_.Option[_api_.String] \`json:"field"\`
}

// FromOption__ unwraps an OptionalStruct from an Option[OptionalStruct].
// You should never need to call this method directly.
func (o OptionalStruct) FromOption__() OptionalStruct {
	return o
}

type OptionalStructConsumer interface {
	FieldValue() _api_.Option[_api_.String]
	ParameterWasUndefined() _api_.Bool
}

// The jsii proxy struct for OptionalStructConsumer
type jsiiProxy_OptionalStructConsumer struct {
	_ byte // padding
}

func (j *jsiiProxy_OptionalStructConsumer) FieldValue() _api_.Option[_api_.String] {
	return _jsii_.Get[_api_.Option[_api_.String]](
		j,
		"fieldValue",
	)
}

func (j *jsiiProxy_OptionalStructConsumer) ParameterWasUndefined() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"parameterWasUndefined",
	)
}


func NewOptionalStructConsumer(optionalStruct _api_.Option[OptionalStruct]) OptionalStructConsumer {
	_init_.Initialize()

	j := jsiiProxy_OptionalStructConsumer{}

	_jsii_.Create(
		"jsii-calc.OptionalStructConsumer",
		[]interface{}{optionalStruct},
		&j,
	)

	return &j
}

func NewOptionalStructConsumer_Override(o OptionalStructConsumer, optionalStruct _api_.Option[OptionalStruct]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.OptionalStructConsumer",
		[]interface{}{optionalStruct},
		o,
	)
}

// FromOption__ unwraps an OptionalStructConsumer from an Option[OptionalStructConsumer].
// You should never need to call this method directly.
func (j jsiiProxy_OptionalStructConsumer) FromOption__() OptionalStructConsumer {
	var j_ OptionalStructConsumer = &j
	return j_
}

// See: https://github.com/aws/jsii/issues/903
//
type OverridableProtectedMember interface {
	OverrideReadOnly() _api_.String
	OverrideReadWrite() _api_.String
	SetOverrideReadWrite(val _api_.String)
	OverrideMe() _api_.String
	SwitchModes()
	ValueFromProtected() _api_.String
}

// The jsii proxy struct for OverridableProtectedMember
type jsiiProxy_OverridableProtectedMember struct {
	_ byte // padding
}

func (j *jsiiProxy_OverridableProtectedMember) OverrideReadOnly() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"overrideReadOnly",
	)
}

func (j *jsiiProxy_OverridableProtectedMember) OverrideReadWrite() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"overrideReadWrite",
	)
}


func NewOverridableProtectedMember() OverridableProtectedMember {
	_init_.Initialize()

	j := jsiiProxy_OverridableProtectedMember{}

	_jsii_.Create(
		"jsii-calc.OverridableProtectedMember",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewOverridableProtectedMember_Override(o OverridableProtectedMember) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.OverridableProtectedMember",
		nil, // no parameters
		o,
	)
}

func (j *jsiiProxy_OverridableProtectedMember) SetOverrideReadWrite(val _api_.String) {
	_jsii_.Set(
		j,
		"overrideReadWrite",
		val,
	)
}

func (o *jsiiProxy_OverridableProtectedMember) OverrideMe() _api_.String {
	return _jsii_.Invoke[_api_.String](
		o,
		"overrideMe",
		nil, // no parameters
	)
}

func (o *jsiiProxy_OverridableProtectedMember) SwitchModes() {
	_jsii_.InvokeVoid(
		o,
		"switchModes",
		nil, // no parameters
	)
}

func (o *jsiiProxy_OverridableProtectedMember) ValueFromProtected() _api_.String {
	return _jsii_.Invoke[_api_.String](
		o,
		"valueFromProtected",
		nil, // no parameters
	)
}

// FromOption__ unwraps an OverridableProtectedMember from an Option[OverridableProtectedMember].
// You should never need to call this method directly.
func (j jsiiProxy_OverridableProtectedMember) FromOption__() OverridableProtectedMember {
	var j_ OverridableProtectedMember = &j
	return j_
}

type OverrideReturnsObject interface {
	Test(obj IReturnsNumber) _api_.Number
}

// The jsii proxy struct for OverrideReturnsObject
type jsiiProxy_OverrideReturnsObject struct {
	_ byte // padding
}

func NewOverrideReturnsObject() OverrideReturnsObject {
	_init_.Initialize()

	j := jsiiProxy_OverrideReturnsObject{}

	_jsii_.Create(
		"jsii-calc.OverrideReturnsObject",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewOverrideReturnsObject_Override(o OverrideReturnsObject) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.OverrideReturnsObject",
		nil, // no parameters
		o,
	)
}

func (o *jsiiProxy_OverrideReturnsObject) Test(obj IReturnsNumber) _api_.Number {
	if obj == nil { panic("Parameters \\"obj\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.Number](
		o,
		"test",
		[]interface{}{obj},
	)
}

// FromOption__ unwraps an OverrideReturnsObject from an Option[OverrideReturnsObject].
// You should never need to call this method directly.
func (j jsiiProxy_OverrideReturnsObject) FromOption__() OverrideReturnsObject {
	var j_ OverrideReturnsObject = &j
	return j_
}

// https://github.com/aws/jsii/issues/982.
type ParentStruct982 struct {
	Foo _api_.String \`json:"foo"\`
}

// FromOption__ unwraps an ParentStruct982 from an Option[ParentStruct982].
// You should never need to call this method directly.
func (p ParentStruct982) FromOption__() ParentStruct982 {
	return p
}

type PartiallyInitializedThisConsumer interface {
	ConsumePartiallyInitializedThis(obj ConstructorPassesThisOut, dt _api_.Time, ev AllTypesEnum) _api_.String
}

// The jsii proxy struct for PartiallyInitializedThisConsumer
type jsiiProxy_PartiallyInitializedThisConsumer struct {
	_ byte // padding
}

func NewPartiallyInitializedThisConsumer_Override(p PartiallyInitializedThisConsumer) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.PartiallyInitializedThisConsumer",
		nil, // no parameters
		p,
	)
}

func (p *jsiiProxy_PartiallyInitializedThisConsumer) ConsumePartiallyInitializedThis(obj ConstructorPassesThisOut, dt _api_.Time, ev AllTypesEnum) _api_.String {
	if obj == nil { panic("Parameters \\"obj\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.String](
		p,
		"consumePartiallyInitializedThis",
		[]interface{}{obj, dt, ev},
	)
}

// FromOption__ unwraps an PartiallyInitializedThisConsumer from an Option[PartiallyInitializedThisConsumer].
// You should never need to call this method directly.
func (j jsiiProxy_PartiallyInitializedThisConsumer) FromOption__() PartiallyInitializedThisConsumer {
	var j_ PartiallyInitializedThisConsumer = &j
	return j_
}

type Polymorphism interface {
	SayHello(friendly scopejsiicalclib.IFriendly) _api_.String
}

// The jsii proxy struct for Polymorphism
type jsiiProxy_Polymorphism struct {
	_ byte // padding
}

func NewPolymorphism() Polymorphism {
	_init_.Initialize()

	j := jsiiProxy_Polymorphism{}

	_jsii_.Create(
		"jsii-calc.Polymorphism",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewPolymorphism_Override(p Polymorphism) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Polymorphism",
		nil, // no parameters
		p,
	)
}

func (p *jsiiProxy_Polymorphism) SayHello(friendly scopejsiicalclib.IFriendly) _api_.String {
	if friendly == nil { panic("Parameters \\"friendly\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.String](
		p,
		"sayHello",
		[]interface{}{friendly},
	)
}

// FromOption__ unwraps an Polymorphism from an Option[Polymorphism].
// You should never need to call this method directly.
func (j jsiiProxy_Polymorphism) FromOption__() Polymorphism {
	var j_ Polymorphism = &j
	return j_
}

// The power operation.
type Power interface {
	composition.CompositeOperation
	Base() scopejsiicalclib.NumericValue
	DecorationPostfixes() _api_.Slice[_api_.String]
	SetDecorationPostfixes(val _api_.Slice[_api_.String])
	DecorationPrefixes() _api_.Slice[_api_.String]
	SetDecorationPrefixes(val _api_.Slice[_api_.String])
	Expression() scopejsiicalclib.NumericValue
	Pow() scopejsiicalclib.NumericValue
	StringStyle() composition.CompositeOperation_CompositionStringStyle
	SetStringStyle(val composition.CompositeOperation_CompositionStringStyle)
	Value() _api_.Number
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for Power
type jsiiProxy_Power struct {
	internal.Type__compositionCompositeOperation
}

func (j *jsiiProxy_Power) Base() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"base",
	)
}

func (j *jsiiProxy_Power) DecorationPostfixes() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"decorationPostfixes",
	)
}

func (j *jsiiProxy_Power) DecorationPrefixes() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"decorationPrefixes",
	)
}

func (j *jsiiProxy_Power) Expression() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"expression",
	)
}

func (j *jsiiProxy_Power) Pow() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"pow",
	)
}

func (j *jsiiProxy_Power) StringStyle() composition.CompositeOperation_CompositionStringStyle {
	return _jsii_.Get[composition.CompositeOperation_CompositionStringStyle](
		j,
		"stringStyle",
	)
}

func (j *jsiiProxy_Power) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


// Creates a Power operation.
func NewPower(base scopejsiicalclib.NumericValue, pow scopejsiicalclib.NumericValue) Power {
	_init_.Initialize()

	if base == nil { panic("Parameters \\"base\\" is required (received nil)") }
	if pow == nil { panic("Parameters \\"pow\\" is required (received nil)") }
	j := jsiiProxy_Power{}

	_jsii_.Create(
		"jsii-calc.Power",
		[]interface{}{base, pow},
		&j,
	)

	return &j
}

// Creates a Power operation.
func NewPower_Override(p Power, base scopejsiicalclib.NumericValue, pow scopejsiicalclib.NumericValue) {
	_init_.Initialize()

	if base == nil { panic("Parameters \\"base\\" is required (received nil)") }
	if pow == nil { panic("Parameters \\"pow\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.Power",
		[]interface{}{base, pow},
		p,
	)
}

func (j *jsiiProxy_Power) SetDecorationPostfixes(val _api_.Slice[_api_.String]) {
	_jsii_.Set(
		j,
		"decorationPostfixes",
		val,
	)
}

func (j *jsiiProxy_Power) SetDecorationPrefixes(val _api_.Slice[_api_.String]) {
	_jsii_.Set(
		j,
		"decorationPrefixes",
		val,
	)
}

func (j *jsiiProxy_Power) SetStringStyle(val composition.CompositeOperation_CompositionStringStyle) {
	_jsii_.Set(
		j,
		"stringStyle",
		val,
	)
}

// (deprecated) String representation of the value.
func (p *jsiiProxy_Power) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		p,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (p *jsiiProxy_Power) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		p,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Power from an Option[Power].
// You should never need to call this method directly.
func (j jsiiProxy_Power) FromOption__() Power {
	var j_ Power = &j
	return j_
}

// Reproduction for https://github.com/aws/jsii/issues/1113 Where a method or property named "property" would result in impossible to load Python code.
type PropertyNamedProperty interface {
	Property() _api_.String
	YetAnoterOne() _api_.Bool
}

// The jsii proxy struct for PropertyNamedProperty
type jsiiProxy_PropertyNamedProperty struct {
	_ byte // padding
}

func (j *jsiiProxy_PropertyNamedProperty) Property() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"property",
	)
}

func (j *jsiiProxy_PropertyNamedProperty) YetAnoterOne() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"yetAnoterOne",
	)
}


func NewPropertyNamedProperty() PropertyNamedProperty {
	_init_.Initialize()

	j := jsiiProxy_PropertyNamedProperty{}

	_jsii_.Create(
		"jsii-calc.PropertyNamedProperty",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewPropertyNamedProperty_Override(p PropertyNamedProperty) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.PropertyNamedProperty",
		nil, // no parameters
		p,
	)
}

// FromOption__ unwraps an PropertyNamedProperty from an Option[PropertyNamedProperty].
// You should never need to call this method directly.
func (j jsiiProxy_PropertyNamedProperty) FromOption__() PropertyNamedProperty {
	var j_ PropertyNamedProperty = &j
	return j_
}

type PublicClass interface {
	Hello()
}

// The jsii proxy struct for PublicClass
type jsiiProxy_PublicClass struct {
	_ byte // padding
}

func NewPublicClass() PublicClass {
	_init_.Initialize()

	j := jsiiProxy_PublicClass{}

	_jsii_.Create(
		"jsii-calc.PublicClass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewPublicClass_Override(p PublicClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.PublicClass",
		nil, // no parameters
		p,
	)
}

func (p *jsiiProxy_PublicClass) Hello() {
	_jsii_.InvokeVoid(
		p,
		"hello",
		nil, // no parameters
	)
}

// FromOption__ unwraps an PublicClass from an Option[PublicClass].
// You should never need to call this method directly.
func (j jsiiProxy_PublicClass) FromOption__() PublicClass {
	var j_ PublicClass = &j
	return j_
}

type PythonReservedWords interface {
	And()
	As()
	Assert()
	Async()
	Await()
	Break()
	Class()
	Continue()
	Def()
	Del()
	Elif()
	Else()
	Except()
	Finally()
	For()
	From()
	Global()
	If()
	Import()
	In()
	Is()
	Lambda()
	Nonlocal()
	Not()
	Or()
	Pass()
	Raise()
	Return()
	Try()
	While()
	With()
	Yield()
}

// The jsii proxy struct for PythonReservedWords
type jsiiProxy_PythonReservedWords struct {
	_ byte // padding
}

func NewPythonReservedWords() PythonReservedWords {
	_init_.Initialize()

	j := jsiiProxy_PythonReservedWords{}

	_jsii_.Create(
		"jsii-calc.PythonReservedWords",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewPythonReservedWords_Override(p PythonReservedWords) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.PythonReservedWords",
		nil, // no parameters
		p,
	)
}

func (p *jsiiProxy_PythonReservedWords) And() {
	_jsii_.InvokeVoid(
		p,
		"and",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) As() {
	_jsii_.InvokeVoid(
		p,
		"as",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Assert() {
	_jsii_.InvokeVoid(
		p,
		"assert",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Async() {
	_jsii_.InvokeVoid(
		p,
		"async",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Await() {
	_jsii_.InvokeVoid(
		p,
		"await",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Break() {
	_jsii_.InvokeVoid(
		p,
		"break",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Class() {
	_jsii_.InvokeVoid(
		p,
		"class",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Continue() {
	_jsii_.InvokeVoid(
		p,
		"continue",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Def() {
	_jsii_.InvokeVoid(
		p,
		"def",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Del() {
	_jsii_.InvokeVoid(
		p,
		"del",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Elif() {
	_jsii_.InvokeVoid(
		p,
		"elif",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Else() {
	_jsii_.InvokeVoid(
		p,
		"else",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Except() {
	_jsii_.InvokeVoid(
		p,
		"except",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Finally() {
	_jsii_.InvokeVoid(
		p,
		"finally",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) For() {
	_jsii_.InvokeVoid(
		p,
		"for",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) From() {
	_jsii_.InvokeVoid(
		p,
		"from",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Global() {
	_jsii_.InvokeVoid(
		p,
		"global",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) If() {
	_jsii_.InvokeVoid(
		p,
		"if",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Import() {
	_jsii_.InvokeVoid(
		p,
		"import",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) In() {
	_jsii_.InvokeVoid(
		p,
		"in",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Is() {
	_jsii_.InvokeVoid(
		p,
		"is",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Lambda() {
	_jsii_.InvokeVoid(
		p,
		"lambda",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Nonlocal() {
	_jsii_.InvokeVoid(
		p,
		"nonlocal",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Not() {
	_jsii_.InvokeVoid(
		p,
		"not",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Or() {
	_jsii_.InvokeVoid(
		p,
		"or",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Pass() {
	_jsii_.InvokeVoid(
		p,
		"pass",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Raise() {
	_jsii_.InvokeVoid(
		p,
		"raise",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Return() {
	_jsii_.InvokeVoid(
		p,
		"return",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Try() {
	_jsii_.InvokeVoid(
		p,
		"try",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) While() {
	_jsii_.InvokeVoid(
		p,
		"while",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) With() {
	_jsii_.InvokeVoid(
		p,
		"with",
		nil, // no parameters
	)
}

func (p *jsiiProxy_PythonReservedWords) Yield() {
	_jsii_.InvokeVoid(
		p,
		"yield",
		nil, // no parameters
	)
}

// FromOption__ unwraps an PythonReservedWords from an Option[PythonReservedWords].
// You should never need to call this method directly.
func (j jsiiProxy_PythonReservedWords) FromOption__() PythonReservedWords {
	var j_ PythonReservedWords = &j
	return j_
}

// See awslabs/jsii#138.
type ReferenceEnumFromScopedPackage interface {
	Foo() _api_.Option[scopejsiicalclib.EnumFromScopedModule]
	SetFoo(val _api_.Option[scopejsiicalclib.EnumFromScopedModule])
	LoadFoo() _api_.Option[scopejsiicalclib.EnumFromScopedModule]
	SaveFoo(value scopejsiicalclib.EnumFromScopedModule)
}

// The jsii proxy struct for ReferenceEnumFromScopedPackage
type jsiiProxy_ReferenceEnumFromScopedPackage struct {
	_ byte // padding
}

func (j *jsiiProxy_ReferenceEnumFromScopedPackage) Foo() _api_.Option[scopejsiicalclib.EnumFromScopedModule] {
	return _jsii_.Get[_api_.Option[scopejsiicalclib.EnumFromScopedModule]](
		j,
		"foo",
	)
}


func NewReferenceEnumFromScopedPackage() ReferenceEnumFromScopedPackage {
	_init_.Initialize()

	j := jsiiProxy_ReferenceEnumFromScopedPackage{}

	_jsii_.Create(
		"jsii-calc.ReferenceEnumFromScopedPackage",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewReferenceEnumFromScopedPackage_Override(r ReferenceEnumFromScopedPackage) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ReferenceEnumFromScopedPackage",
		nil, // no parameters
		r,
	)
}

func (j *jsiiProxy_ReferenceEnumFromScopedPackage) SetFoo(val _api_.Option[scopejsiicalclib.EnumFromScopedModule]) {
	_jsii_.Set(
		j,
		"foo",
		val,
	)
}

func (r *jsiiProxy_ReferenceEnumFromScopedPackage) LoadFoo() _api_.Option[scopejsiicalclib.EnumFromScopedModule] {
	return _jsii_.Invoke[_api_.Option[scopejsiicalclib.EnumFromScopedModule]](
		r,
		"loadFoo",
		nil, // no parameters
	)
}

func (r *jsiiProxy_ReferenceEnumFromScopedPackage) SaveFoo(value scopejsiicalclib.EnumFromScopedModule) {
	_jsii_.InvokeVoid(
		r,
		"saveFoo",
		[]interface{}{value},
	)
}

// FromOption__ unwraps an ReferenceEnumFromScopedPackage from an Option[ReferenceEnumFromScopedPackage].
// You should never need to call this method directly.
func (j jsiiProxy_ReferenceEnumFromScopedPackage) FromOption__() ReferenceEnumFromScopedPackage {
	var j_ ReferenceEnumFromScopedPackage = &j
	return j_
}

// Helps ensure the JSII kernel & runtime cooperate correctly when an un-exported instance of a class is returned with a declared type that is an exported interface, and the instance inherits from an exported class.
//
// Returns: an instance of an un-exported class that extends \`ExportedBaseClass\`, declared as \`IPrivatelyImplemented\`.
// See: https://github.com/aws/jsii/issues/320
//
type ReturnsPrivateImplementationOfInterface interface {
	PrivateImplementation() IPrivatelyImplemented
}

// The jsii proxy struct for ReturnsPrivateImplementationOfInterface
type jsiiProxy_ReturnsPrivateImplementationOfInterface struct {
	_ byte // padding
}

func (j *jsiiProxy_ReturnsPrivateImplementationOfInterface) PrivateImplementation() IPrivatelyImplemented {
	return _jsii_.Get[IPrivatelyImplemented](
		j,
		"privateImplementation",
	)
}


func NewReturnsPrivateImplementationOfInterface() ReturnsPrivateImplementationOfInterface {
	_init_.Initialize()

	j := jsiiProxy_ReturnsPrivateImplementationOfInterface{}

	_jsii_.Create(
		"jsii-calc.ReturnsPrivateImplementationOfInterface",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewReturnsPrivateImplementationOfInterface_Override(r ReturnsPrivateImplementationOfInterface) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.ReturnsPrivateImplementationOfInterface",
		nil, // no parameters
		r,
	)
}

// FromOption__ unwraps an ReturnsPrivateImplementationOfInterface from an Option[ReturnsPrivateImplementationOfInterface].
// You should never need to call this method directly.
func (j jsiiProxy_ReturnsPrivateImplementationOfInterface) FromOption__() ReturnsPrivateImplementationOfInterface {
	var j_ ReturnsPrivateImplementationOfInterface = &j
	return j_
}

// This is here to check that we can pass a nested struct into a kwargs by specifying it as an in-line dictionary.
//
// This is cheating with the (current) declared types, but this is the "more
// idiomatic" way for Pythonists.
type RootStruct struct {
	// May not be empty.
	StringProp _api_.String \`json:"stringProp"\`
	NestedStruct _api_.Option[NestedStruct] \`json:"nestedStruct"\`
}

// FromOption__ unwraps an RootStruct from an Option[RootStruct].
// You should never need to call this method directly.
func (r RootStruct) FromOption__() RootStruct {
	return r
}

type RootStructValidator interface {
}

// The jsii proxy struct for RootStructValidator
type jsiiProxy_RootStructValidator struct {
	_ byte // padding
}

func RootStructValidator_Validate(struct_ RootStruct) {
	_init_.Initialize()

	_jsii_.StaticInvokeVoid(
		"jsii-calc.RootStructValidator",
		"validate",
		[]interface{}{struct_},
	)
}

// FromOption__ unwraps an RootStructValidator from an Option[RootStructValidator].
// You should never need to call this method directly.
func (j jsiiProxy_RootStructValidator) FromOption__() RootStructValidator {
	var j_ RootStructValidator = &j
	return j_
}

type RuntimeTypeChecking interface {
	MethodWithDefaultedArguments(arg1 _api_.Option[_api_.Number], arg2 _api_.Option[_api_.String], arg3 _api_.Option[_api_.Time])
	MethodWithOptionalAnyArgument(arg interface{})
	MethodWithOptionalArguments(arg1 _api_.Number, arg2 _api_.String, arg3 _api_.Option[_api_.Time])
}

// The jsii proxy struct for RuntimeTypeChecking
type jsiiProxy_RuntimeTypeChecking struct {
	_ byte // padding
}

func NewRuntimeTypeChecking() RuntimeTypeChecking {
	_init_.Initialize()

	j := jsiiProxy_RuntimeTypeChecking{}

	_jsii_.Create(
		"jsii-calc.RuntimeTypeChecking",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewRuntimeTypeChecking_Override(r RuntimeTypeChecking) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.RuntimeTypeChecking",
		nil, // no parameters
		r,
	)
}

func (r *jsiiProxy_RuntimeTypeChecking) MethodWithDefaultedArguments(arg1 _api_.Option[_api_.Number], arg2 _api_.Option[_api_.String], arg3 _api_.Option[_api_.Time]) {
	_jsii_.InvokeVoid(
		r,
		"methodWithDefaultedArguments",
		[]interface{}{arg1, arg2, arg3},
	)
}

func (r *jsiiProxy_RuntimeTypeChecking) MethodWithOptionalAnyArgument(arg interface{}) {
	_jsii_.InvokeVoid(
		r,
		"methodWithOptionalAnyArgument",
		[]interface{}{arg},
	)
}

// Used to verify verification of number of method arguments.
func (r *jsiiProxy_RuntimeTypeChecking) MethodWithOptionalArguments(arg1 _api_.Number, arg2 _api_.String, arg3 _api_.Option[_api_.Time]) {
	_jsii_.InvokeVoid(
		r,
		"methodWithOptionalArguments",
		[]interface{}{arg1, arg2, arg3},
	)
}

// FromOption__ unwraps an RuntimeTypeChecking from an Option[RuntimeTypeChecking].
// You should never need to call this method directly.
func (j jsiiProxy_RuntimeTypeChecking) FromOption__() RuntimeTypeChecking {
	var j_ RuntimeTypeChecking = &j
	return j_
}

type SecondLevelStruct struct {
	// It's long and required.
	DeeperRequiredProp _api_.String \`json:"deeperRequiredProp"\`
	// It's long, but you'll almost never pass it.
	DeeperOptionalProp _api_.Option[_api_.String] \`json:"deeperOptionalProp"\`
}

// FromOption__ unwraps an SecondLevelStruct from an Option[SecondLevelStruct].
// You should never need to call this method directly.
func (s SecondLevelStruct) FromOption__() SecondLevelStruct {
	return s
}

// Test that a single instance can be returned under two different FQNs.
//
// JSII clients can instantiate 2 different strongly-typed wrappers for the same
// object. Unfortunately, this will break object equality, but if we didn't do
// this it would break runtime type checks in the JVM or CLR.
type SingleInstanceTwoTypes interface {
	Interface1() InbetweenClass
	Interface2() IPublicInterface
}

// The jsii proxy struct for SingleInstanceTwoTypes
type jsiiProxy_SingleInstanceTwoTypes struct {
	_ byte // padding
}

func NewSingleInstanceTwoTypes() SingleInstanceTwoTypes {
	_init_.Initialize()

	j := jsiiProxy_SingleInstanceTwoTypes{}

	_jsii_.Create(
		"jsii-calc.SingleInstanceTwoTypes",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewSingleInstanceTwoTypes_Override(s SingleInstanceTwoTypes) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.SingleInstanceTwoTypes",
		nil, // no parameters
		s,
	)
}

func (s *jsiiProxy_SingleInstanceTwoTypes) Interface1() InbetweenClass {
	return _jsii_.Invoke[InbetweenClass](
		s,
		"interface1",
		nil, // no parameters
	)
}

func (s *jsiiProxy_SingleInstanceTwoTypes) Interface2() IPublicInterface {
	return _jsii_.Invoke[IPublicInterface](
		s,
		"interface2",
		nil, // no parameters
	)
}

// FromOption__ unwraps an SingleInstanceTwoTypes from an Option[SingleInstanceTwoTypes].
// You should never need to call this method directly.
func (j jsiiProxy_SingleInstanceTwoTypes) FromOption__() SingleInstanceTwoTypes {
	var j_ SingleInstanceTwoTypes = &j
	return j_
}

// Verifies that singleton enums are handled correctly.
//
// https://github.com/aws/jsii/issues/231
type SingletonInt interface {
	IsSingletonInt(value _api_.Number) _api_.Bool
}

// The jsii proxy struct for SingletonInt
type jsiiProxy_SingletonInt struct {
	_ byte // padding
}

func (s *jsiiProxy_SingletonInt) IsSingletonInt(value _api_.Number) _api_.Bool {
	return _jsii_.Invoke[_api_.Bool](
		s,
		"isSingletonInt",
		[]interface{}{value},
	)
}

// FromOption__ unwraps an SingletonInt from an Option[SingletonInt].
// You should never need to call this method directly.
func (j jsiiProxy_SingletonInt) FromOption__() SingletonInt {
	var j_ SingletonInt = &j
	return j_
}

// A singleton integer.
type SingletonIntEnum string

const (
	SingletonIntEnum_SINGLETON_INT SingletonIntEnum = "SINGLETON_INT"
)

// FromOption__ unwraps an SingletonIntEnum from an Option[SingletonIntEnum].
// You should never need to call this method directly.
func (s SingletonIntEnum) FromOption__() SingletonIntEnum {
	return s
}

// Verifies that singleton enums are handled correctly.
//
// https://github.com/aws/jsii/issues/231
type SingletonString interface {
	IsSingletonString(value _api_.String) _api_.Bool
}

// The jsii proxy struct for SingletonString
type jsiiProxy_SingletonString struct {
	_ byte // padding
}

func (s *jsiiProxy_SingletonString) IsSingletonString(value _api_.String) _api_.Bool {
	return _jsii_.Invoke[_api_.Bool](
		s,
		"isSingletonString",
		[]interface{}{value},
	)
}

// FromOption__ unwraps an SingletonString from an Option[SingletonString].
// You should never need to call this method directly.
func (j jsiiProxy_SingletonString) FromOption__() SingletonString {
	var j_ SingletonString = &j
	return j_
}

// A singleton string.
type SingletonStringEnum string

const (
	SingletonStringEnum_SINGLETON_STRING SingletonStringEnum = "SINGLETON_STRING"
)

// FromOption__ unwraps an SingletonStringEnum from an Option[SingletonStringEnum].
// You should never need to call this method directly.
func (s SingletonStringEnum) FromOption__() SingletonStringEnum {
	return s
}

type SmellyStruct struct {
	Property _api_.String \`json:"property"\`
	YetAnoterOne _api_.Bool \`json:"yetAnoterOne"\`
}

// FromOption__ unwraps an SmellyStruct from an Option[SmellyStruct].
// You should never need to call this method directly.
func (s SmellyStruct) FromOption__() SmellyStruct {
	return s
}

type SomeTypeJsii976 interface {
}

// The jsii proxy struct for SomeTypeJsii976
type jsiiProxy_SomeTypeJsii976 struct {
	_ byte // padding
}

func NewSomeTypeJsii976() SomeTypeJsii976 {
	_init_.Initialize()

	j := jsiiProxy_SomeTypeJsii976{}

	_jsii_.Create(
		"jsii-calc.SomeTypeJsii976",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewSomeTypeJsii976_Override(s SomeTypeJsii976) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.SomeTypeJsii976",
		nil, // no parameters
		s,
	)
}

func SomeTypeJsii976_ReturnAnonymous() interface{} {
	_init_.Initialize()

	return _jsii_.StaticInvoke[interface{}](
		"jsii-calc.SomeTypeJsii976",
		"returnAnonymous",
		nil, // no parameters
	)
}

func SomeTypeJsii976_ReturnReturn() IReturnJsii976 {
	_init_.Initialize()

	return _jsii_.StaticInvoke[IReturnJsii976](
		"jsii-calc.SomeTypeJsii976",
		"returnReturn",
		nil, // no parameters
	)
}

// FromOption__ unwraps an SomeTypeJsii976 from an Option[SomeTypeJsii976].
// You should never need to call this method directly.
func (j jsiiProxy_SomeTypeJsii976) FromOption__() SomeTypeJsii976 {
	var j_ SomeTypeJsii976 = &j
	return j_
}

type StableClass interface {
	MutableProperty() _api_.Option[_api_.Number]
	SetMutableProperty(val _api_.Option[_api_.Number])
	ReadonlyProperty() _api_.String
	Method()
}

// The jsii proxy struct for StableClass
type jsiiProxy_StableClass struct {
	_ byte // padding
}

func (j *jsiiProxy_StableClass) MutableProperty() _api_.Option[_api_.Number] {
	return _jsii_.Get[_api_.Option[_api_.Number]](
		j,
		"mutableProperty",
	)
}

func (j *jsiiProxy_StableClass) ReadonlyProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"readonlyProperty",
	)
}


func NewStableClass(readonlyString _api_.String, mutableNumber _api_.Option[_api_.Number]) StableClass {
	_init_.Initialize()

	j := jsiiProxy_StableClass{}

	_jsii_.Create(
		"jsii-calc.StableClass",
		[]interface{}{readonlyString, mutableNumber},
		&j,
	)

	return &j
}

func NewStableClass_Override(s StableClass, readonlyString _api_.String, mutableNumber _api_.Option[_api_.Number]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.StableClass",
		[]interface{}{readonlyString, mutableNumber},
		s,
	)
}

func (j *jsiiProxy_StableClass) SetMutableProperty(val _api_.Option[_api_.Number]) {
	_jsii_.Set(
		j,
		"mutableProperty",
		val,
	)
}

func (s *jsiiProxy_StableClass) Method() {
	_jsii_.InvokeVoid(
		s,
		"method",
		nil, // no parameters
	)
}

// FromOption__ unwraps an StableClass from an Option[StableClass].
// You should never need to call this method directly.
func (j jsiiProxy_StableClass) FromOption__() StableClass {
	var j_ StableClass = &j
	return j_
}

type StableEnum string

const (
	StableEnum_OPTION_A StableEnum = "OPTION_A"
	StableEnum_OPTION_B StableEnum = "OPTION_B"
)

// FromOption__ unwraps an StableEnum from an Option[StableEnum].
// You should never need to call this method directly.
func (s StableEnum) FromOption__() StableEnum {
	return s
}

type StableStruct struct {
	ReadonlyProperty _api_.String \`json:"readonlyProperty"\`
}

// FromOption__ unwraps an StableStruct from an Option[StableStruct].
// You should never need to call this method directly.
func (s StableStruct) FromOption__() StableStruct {
	return s
}

// This is used to validate the ability to use \`this\` from within a static context.
//
// https://github.com/awslabs/aws-cdk/issues/2304
type StaticContext interface {
}

// The jsii proxy struct for StaticContext
type jsiiProxy_StaticContext struct {
	_ byte // padding
}

func StaticContext_CanAccessStaticContext() _api_.Bool {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Bool](
		"jsii-calc.StaticContext",
		"canAccessStaticContext",
		nil, // no parameters
	)
}

func StaticContext_StaticVariable() _api_.Bool {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Bool](
		"jsii-calc.StaticContext",
		"staticVariable",
	)
}

func StaticContext_SetStaticVariable(val _api_.Bool) {
	_init_.Initialize()
	_jsii_.StaticSet(
		"jsii-calc.StaticContext",
		"staticVariable",
		val,
	)
}

// FromOption__ unwraps an StaticContext from an Option[StaticContext].
// You should never need to call this method directly.
func (j jsiiProxy_StaticContext) FromOption__() StaticContext {
	var j_ StaticContext = &j
	return j_
}

type StaticHelloChild interface {
	StaticHelloParent
}

// The jsii proxy struct for StaticHelloChild
type jsiiProxy_StaticHelloChild struct {
	jsiiProxy_StaticHelloParent
}

func StaticHelloChild_Method() {
	_init_.Initialize()

	_jsii_.StaticInvokeVoid(
		"jsii-calc.StaticHelloChild",
		"method",
		nil, // no parameters
	)
}

func StaticHelloChild_Property() _api_.Number {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Number](
		"jsii-calc.StaticHelloChild",
		"property",
	)
}

// FromOption__ unwraps an StaticHelloChild from an Option[StaticHelloChild].
// You should never need to call this method directly.
func (j jsiiProxy_StaticHelloChild) FromOption__() StaticHelloChild {
	var j_ StaticHelloChild = &j
	return j_
}

// Static methods that override parent class are technically overrides (the inheritance of statics is part of the ES6 specification), but certain other languages such as Java do not carry statics in the inheritance chain at all, so they cannot be overridden, only hidden.
//
// The difference is fairly minor (for typical use-cases, the end result is the
// same), however this has implications on what the generated code should look
// like.
type StaticHelloParent interface {
}

// The jsii proxy struct for StaticHelloParent
type jsiiProxy_StaticHelloParent struct {
	_ byte // padding
}

func NewStaticHelloParent() StaticHelloParent {
	_init_.Initialize()

	j := jsiiProxy_StaticHelloParent{}

	_jsii_.Create(
		"jsii-calc.StaticHelloParent",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewStaticHelloParent_Override(s StaticHelloParent) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.StaticHelloParent",
		nil, // no parameters
		s,
	)
}

func StaticHelloParent_Method() {
	_init_.Initialize()

	_jsii_.StaticInvokeVoid(
		"jsii-calc.StaticHelloParent",
		"method",
		nil, // no parameters
	)
}

func StaticHelloParent_Property() _api_.Number {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Number](
		"jsii-calc.StaticHelloParent",
		"property",
	)
}

// FromOption__ unwraps an StaticHelloParent from an Option[StaticHelloParent].
// You should never need to call this method directly.
func (j jsiiProxy_StaticHelloParent) FromOption__() StaticHelloParent {
	var j_ StaticHelloParent = &j
	return j_
}

type Statics interface {
	Value() _api_.String
	JustMethod() _api_.String
}

// The jsii proxy struct for Statics
type jsiiProxy_Statics struct {
	_ byte // padding
}

func (j *jsiiProxy_Statics) Value() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"value",
	)
}


func NewStatics(value _api_.String) Statics {
	_init_.Initialize()

	j := jsiiProxy_Statics{}

	_jsii_.Create(
		"jsii-calc.Statics",
		[]interface{}{value},
		&j,
	)

	return &j
}

func NewStatics_Override(s Statics, value _api_.String) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Statics",
		[]interface{}{value},
		s,
	)
}

// Jsdocs for static method.
func Statics_StaticMethod(name _api_.String) _api_.String {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.String](
		"jsii-calc.Statics",
		"staticMethod",
		[]interface{}{name},
	)
}

func Statics_BAR() _api_.Number {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Number](
		"jsii-calc.Statics",
		"BAR",
	)
}

func Statics_ConstObj() DoubleTrouble {
	_init_.Initialize()
	return _jsii_.StaticGet[DoubleTrouble](
		"jsii-calc.Statics",
		"ConstObj",
	)
}

func Statics_Foo() _api_.String {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.String](
		"jsii-calc.Statics",
		"Foo",
	)
}

func Statics_Instance() Statics {
	_init_.Initialize()
	return _jsii_.StaticGet[Statics](
		"jsii-calc.Statics",
		"instance",
	)
}

func Statics_SetInstance(val Statics) {
	_init_.Initialize()
	_jsii_.StaticSet(
		"jsii-calc.Statics",
		"instance",
		val,
	)
}

func Statics_NonConstStatic() _api_.Number {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Number](
		"jsii-calc.Statics",
		"nonConstStatic",
	)
}

func Statics_SetNonConstStatic(val _api_.Number) {
	_init_.Initialize()
	_jsii_.StaticSet(
		"jsii-calc.Statics",
		"nonConstStatic",
		val,
	)
}

func Statics_ZooBar() _api_.Map[_api_.String] {
	_init_.Initialize()
	return _jsii_.StaticGet[_api_.Map[_api_.String]](
		"jsii-calc.Statics",
		"zooBar",
	)
}

func (s *jsiiProxy_Statics) JustMethod() _api_.String {
	return _jsii_.Invoke[_api_.String](
		s,
		"justMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Statics from an Option[Statics].
// You should never need to call this method directly.
func (j jsiiProxy_Statics) FromOption__() Statics {
	var j_ Statics = &j
	return j_
}

type StringEnum string

const (
	StringEnum_A StringEnum = "A"
	StringEnum_B StringEnum = "B"
	StringEnum_C StringEnum = "C"
)

// FromOption__ unwraps an StringEnum from an Option[StringEnum].
// You should never need to call this method directly.
func (s StringEnum) FromOption__() StringEnum {
	return s
}

type StripInternal interface {
	YouSeeMe() _api_.String
	SetYouSeeMe(val _api_.String)
}

// The jsii proxy struct for StripInternal
type jsiiProxy_StripInternal struct {
	_ byte // padding
}

func (j *jsiiProxy_StripInternal) YouSeeMe() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"youSeeMe",
	)
}


func NewStripInternal() StripInternal {
	_init_.Initialize()

	j := jsiiProxy_StripInternal{}

	_jsii_.Create(
		"jsii-calc.StripInternal",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewStripInternal_Override(s StripInternal) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.StripInternal",
		nil, // no parameters
		s,
	)
}

func (j *jsiiProxy_StripInternal) SetYouSeeMe(val _api_.String) {
	_jsii_.Set(
		j,
		"youSeeMe",
		val,
	)
}

// FromOption__ unwraps an StripInternal from an Option[StripInternal].
// You should never need to call this method directly.
func (j jsiiProxy_StripInternal) FromOption__() StripInternal {
	var j_ StripInternal = &j
	return j_
}

// We can serialize and deserialize structs without silently ignoring optional fields.
type StructA struct {
	RequiredString _api_.String \`json:"requiredString"\`
	OptionalNumber _api_.Option[_api_.Number] \`json:"optionalNumber"\`
	OptionalString _api_.Option[_api_.String] \`json:"optionalString"\`
}

// FromOption__ unwraps an StructA from an Option[StructA].
// You should never need to call this method directly.
func (s StructA) FromOption__() StructA {
	return s
}

// This intentionally overlaps with StructA (where only requiredString is provided) to test htat the kernel properly disambiguates those.
type StructB struct {
	RequiredString _api_.String \`json:"requiredString"\`
	OptionalBoolean _api_.Option[_api_.Bool] \`json:"optionalBoolean"\`
	OptionalStructA _api_.Option[StructA] \`json:"optionalStructA"\`
}

// FromOption__ unwraps an StructB from an Option[StructB].
// You should never need to call this method directly.
func (s StructB) FromOption__() StructB {
	return s
}

// Verifies that, in languages that do keyword lifting (e.g: Python), having a struct member with the same name as a positional parameter results in the correct code being emitted.
//
// See: https://github.com/aws/aws-cdk/issues/4302
type StructParameterType struct {
	Scope _api_.String \`json:"scope"\`
	Props _api_.Option[_api_.Bool] \`json:"props"\`
}

// FromOption__ unwraps an StructParameterType from an Option[StructParameterType].
// You should never need to call this method directly.
func (s StructParameterType) FromOption__() StructParameterType {
	return s
}

// Just because we can.
type StructPassing interface {
}

// The jsii proxy struct for StructPassing
type jsiiProxy_StructPassing struct {
	_ byte // padding
}

func NewStructPassing() StructPassing {
	_init_.Initialize()

	j := jsiiProxy_StructPassing{}

	_jsii_.Create(
		"jsii-calc.StructPassing",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewStructPassing_Override(s StructPassing) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.StructPassing",
		nil, // no parameters
		s,
	)
}

func StructPassing_HowManyVarArgsDidIPass(_positional _api_.Number, inputs ...TopLevelStruct) _api_.Number {
	_init_.Initialize()

	args := []interface{}{_positional}
	for _, a := range inputs {
		args = append(args, a)
	}

	return _jsii_.StaticInvoke[_api_.Number](
		"jsii-calc.StructPassing",
		"howManyVarArgsDidIPass",
		args,
	)
}

func StructPassing_RoundTrip(_positional _api_.Number, input TopLevelStruct) TopLevelStruct {
	_init_.Initialize()

	return _jsii_.StaticInvoke[TopLevelStruct](
		"jsii-calc.StructPassing",
		"roundTrip",
		[]interface{}{_positional, input},
	)
}

// FromOption__ unwraps an StructPassing from an Option[StructPassing].
// You should never need to call this method directly.
func (j jsiiProxy_StructPassing) FromOption__() StructPassing {
	var j_ StructPassing = &j
	return j_
}

type StructUnionConsumer interface {
}

// The jsii proxy struct for StructUnionConsumer
type jsiiProxy_StructUnionConsumer struct {
	_ byte // padding
}

func StructUnionConsumer_IsStructA(struct_ interface{}) _api_.Bool {
	_init_.Initialize()

	if struct_ == nil { panic("Parameters \\"struct_\\" is required (received nil)") }
	return _jsii_.StaticInvoke[_api_.Bool](
		"jsii-calc.StructUnionConsumer",
		"isStructA",
		[]interface{}{struct_},
	)
}

func StructUnionConsumer_IsStructB(struct_ interface{}) _api_.Bool {
	_init_.Initialize()

	if struct_ == nil { panic("Parameters \\"struct_\\" is required (received nil)") }
	return _jsii_.StaticInvoke[_api_.Bool](
		"jsii-calc.StructUnionConsumer",
		"isStructB",
		[]interface{}{struct_},
	)
}

// FromOption__ unwraps an StructUnionConsumer from an Option[StructUnionConsumer].
// You should never need to call this method directly.
func (j jsiiProxy_StructUnionConsumer) FromOption__() StructUnionConsumer {
	var j_ StructUnionConsumer = &j
	return j_
}

type StructWithEnum struct {
	// An enum value.
	Foo StringEnum \`json:"foo"\`
	// Optional enum value (of type integer).
	Bar _api_.Option[AllTypesEnum] \`json:"bar"\`
}

// FromOption__ unwraps an StructWithEnum from an Option[StructWithEnum].
// You should never need to call this method directly.
func (s StructWithEnum) FromOption__() StructWithEnum {
	return s
}

type StructWithJavaReservedWords struct {
	Default _api_.String \`json:"default"\`
	Assert _api_.Option[_api_.String] \`json:"assert"\`
	Result _api_.Option[_api_.String] \`json:"result"\`
	That _api_.Option[_api_.String] \`json:"that"\`
}

// FromOption__ unwraps an StructWithJavaReservedWords from an Option[StructWithJavaReservedWords].
// You should never need to call this method directly.
func (s StructWithJavaReservedWords) FromOption__() StructWithJavaReservedWords {
	return s
}

// An operation that sums multiple values.
type Sum interface {
	composition.CompositeOperation
	DecorationPostfixes() _api_.Slice[_api_.String]
	SetDecorationPostfixes(val _api_.Slice[_api_.String])
	DecorationPrefixes() _api_.Slice[_api_.String]
	SetDecorationPrefixes(val _api_.Slice[_api_.String])
	Expression() scopejsiicalclib.NumericValue
	Parts() _api_.Slice[scopejsiicalclib.NumericValue]
	SetParts(val _api_.Slice[scopejsiicalclib.NumericValue])
	StringStyle() composition.CompositeOperation_CompositionStringStyle
	SetStringStyle(val composition.CompositeOperation_CompositionStringStyle)
	Value() _api_.Number
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for Sum
type jsiiProxy_Sum struct {
	internal.Type__compositionCompositeOperation
}

func (j *jsiiProxy_Sum) DecorationPostfixes() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"decorationPostfixes",
	)
}

func (j *jsiiProxy_Sum) DecorationPrefixes() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"decorationPrefixes",
	)
}

func (j *jsiiProxy_Sum) Expression() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"expression",
	)
}

func (j *jsiiProxy_Sum) Parts() _api_.Slice[scopejsiicalclib.NumericValue] {
	return _jsii_.Get[_api_.Slice[scopejsiicalclib.NumericValue]](
		j,
		"parts",
	)
}

func (j *jsiiProxy_Sum) StringStyle() composition.CompositeOperation_CompositionStringStyle {
	return _jsii_.Get[composition.CompositeOperation_CompositionStringStyle](
		j,
		"stringStyle",
	)
}

func (j *jsiiProxy_Sum) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


func NewSum() Sum {
	_init_.Initialize()

	j := jsiiProxy_Sum{}

	_jsii_.Create(
		"jsii-calc.Sum",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewSum_Override(s Sum) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Sum",
		nil, // no parameters
		s,
	)
}

func (j *jsiiProxy_Sum) SetDecorationPostfixes(val _api_.Slice[_api_.String]) {
	_jsii_.Set(
		j,
		"decorationPostfixes",
		val,
	)
}

func (j *jsiiProxy_Sum) SetDecorationPrefixes(val _api_.Slice[_api_.String]) {
	_jsii_.Set(
		j,
		"decorationPrefixes",
		val,
	)
}

func (j *jsiiProxy_Sum) SetParts(val _api_.Slice[scopejsiicalclib.NumericValue]) {
	_jsii_.Set(
		j,
		"parts",
		val,
	)
}

func (j *jsiiProxy_Sum) SetStringStyle(val composition.CompositeOperation_CompositionStringStyle) {
	_jsii_.Set(
		j,
		"stringStyle",
		val,
	)
}

// (deprecated) String representation of the value.
func (s *jsiiProxy_Sum) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		s,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (s *jsiiProxy_Sum) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		s,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Sum from an Option[Sum].
// You should never need to call this method directly.
func (j jsiiProxy_Sum) FromOption__() Sum {
	var j_ Sum = &j
	return j_
}

type SupportsNiceJavaBuilder interface {
	SupportsNiceJavaBuilderWithRequiredProps
	Bar() _api_.Number
	Id() _api_.Number
	PropId() _api_.Option[_api_.String]
	Rest() _api_.Slice[_api_.String]
}

// The jsii proxy struct for SupportsNiceJavaBuilder
type jsiiProxy_SupportsNiceJavaBuilder struct {
	jsiiProxy_SupportsNiceJavaBuilderWithRequiredProps
}

func (j *jsiiProxy_SupportsNiceJavaBuilder) Bar() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"bar",
	)
}

func (j *jsiiProxy_SupportsNiceJavaBuilder) Id() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"id",
	)
}

func (j *jsiiProxy_SupportsNiceJavaBuilder) PropId() _api_.Option[_api_.String] {
	return _jsii_.Get[_api_.Option[_api_.String]](
		j,
		"propId",
	)
}

func (j *jsiiProxy_SupportsNiceJavaBuilder) Rest() _api_.Slice[_api_.String] {
	return _jsii_.Get[_api_.Slice[_api_.String]](
		j,
		"rest",
	)
}


func NewSupportsNiceJavaBuilder(id _api_.Number, defaultBar _api_.Option[_api_.Number], props _api_.Option[SupportsNiceJavaBuilderProps], rest ..._api_.String) SupportsNiceJavaBuilder {
	_init_.Initialize()

	args := []interface{}{id, defaultBar, props}
	for _, a := range rest {
		args = append(args, a)
	}

	j := jsiiProxy_SupportsNiceJavaBuilder{}

	_jsii_.Create(
		"jsii-calc.SupportsNiceJavaBuilder",
		args,
		&j,
	)

	return &j
}

func NewSupportsNiceJavaBuilder_Override(s SupportsNiceJavaBuilder, id _api_.Number, defaultBar _api_.Option[_api_.Number], props _api_.Option[SupportsNiceJavaBuilderProps], rest ..._api_.String) {
	_init_.Initialize()

	args := []interface{}{id, defaultBar, props}
	for _, a := range rest {
		args = append(args, a)
	}

	_jsii_.Create(
		"jsii-calc.SupportsNiceJavaBuilder",
		args,
		s,
	)
}

// FromOption__ unwraps an SupportsNiceJavaBuilder from an Option[SupportsNiceJavaBuilder].
// You should never need to call this method directly.
func (j jsiiProxy_SupportsNiceJavaBuilder) FromOption__() SupportsNiceJavaBuilder {
	var j_ SupportsNiceJavaBuilder = &j
	return j_
}

type SupportsNiceJavaBuilderProps struct {
	// Some number, like 42.
	Bar _api_.Number \`json:"bar"\`
	// An \`id\` field here is terrible API design, because the constructor of \`SupportsNiceJavaBuilder\` already has a parameter named \`id\`.
	//
	// But here we are, doing it like we didn't care.
	Id _api_.Option[_api_.String] \`json:"id"\`
}

// FromOption__ unwraps an SupportsNiceJavaBuilderProps from an Option[SupportsNiceJavaBuilderProps].
// You should never need to call this method directly.
func (s SupportsNiceJavaBuilderProps) FromOption__() SupportsNiceJavaBuilderProps {
	return s
}

// We can generate fancy builders in Java for classes which take a mix of positional & struct parameters.
type SupportsNiceJavaBuilderWithRequiredProps interface {
	Bar() _api_.Number
	Id() _api_.Number
	PropId() _api_.Option[_api_.String]
}

// The jsii proxy struct for SupportsNiceJavaBuilderWithRequiredProps
type jsiiProxy_SupportsNiceJavaBuilderWithRequiredProps struct {
	_ byte // padding
}

func (j *jsiiProxy_SupportsNiceJavaBuilderWithRequiredProps) Bar() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"bar",
	)
}

func (j *jsiiProxy_SupportsNiceJavaBuilderWithRequiredProps) Id() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"id",
	)
}

func (j *jsiiProxy_SupportsNiceJavaBuilderWithRequiredProps) PropId() _api_.Option[_api_.String] {
	return _jsii_.Get[_api_.Option[_api_.String]](
		j,
		"propId",
	)
}


func NewSupportsNiceJavaBuilderWithRequiredProps(id _api_.Number, props SupportsNiceJavaBuilderProps) SupportsNiceJavaBuilderWithRequiredProps {
	_init_.Initialize()

	j := jsiiProxy_SupportsNiceJavaBuilderWithRequiredProps{}

	_jsii_.Create(
		"jsii-calc.SupportsNiceJavaBuilderWithRequiredProps",
		[]interface{}{id, props},
		&j,
	)

	return &j
}

func NewSupportsNiceJavaBuilderWithRequiredProps_Override(s SupportsNiceJavaBuilderWithRequiredProps, id _api_.Number, props SupportsNiceJavaBuilderProps) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.SupportsNiceJavaBuilderWithRequiredProps",
		[]interface{}{id, props},
		s,
	)
}

// FromOption__ unwraps an SupportsNiceJavaBuilderWithRequiredProps from an Option[SupportsNiceJavaBuilderWithRequiredProps].
// You should never need to call this method directly.
func (j jsiiProxy_SupportsNiceJavaBuilderWithRequiredProps) FromOption__() SupportsNiceJavaBuilderWithRequiredProps {
	var j_ SupportsNiceJavaBuilderWithRequiredProps = &j
	return j_
}

type SyncVirtualMethods interface {
	A() _api_.Number
	SetA(val _api_.Number)
	CallerIsProperty() _api_.Number
	SetCallerIsProperty(val _api_.Number)
	OtherProperty() _api_.String
	SetOtherProperty(val _api_.String)
	ReadonlyProperty() _api_.String
	TheProperty() _api_.String
	SetTheProperty(val _api_.String)
	ValueOfOtherProperty() _api_.String
	SetValueOfOtherProperty(val _api_.String)
	CallerIsAsync() _api_.Number
	CallerIsMethod() _api_.Number
	ModifyOtherProperty(value _api_.String)
	ModifyValueOfTheProperty(value _api_.String)
	ReadA() _api_.Number
	RetrieveOtherProperty() _api_.String
	RetrieveReadOnlyProperty() _api_.String
	RetrieveValueOfTheProperty() _api_.String
	VirtualMethod(n _api_.Number) _api_.Number
	WriteA(value _api_.Number)
}

// The jsii proxy struct for SyncVirtualMethods
type jsiiProxy_SyncVirtualMethods struct {
	_ byte // padding
}

func (j *jsiiProxy_SyncVirtualMethods) A() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"a",
	)
}

func (j *jsiiProxy_SyncVirtualMethods) CallerIsProperty() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"callerIsProperty",
	)
}

func (j *jsiiProxy_SyncVirtualMethods) OtherProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"otherProperty",
	)
}

func (j *jsiiProxy_SyncVirtualMethods) ReadonlyProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"readonlyProperty",
	)
}

func (j *jsiiProxy_SyncVirtualMethods) TheProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"theProperty",
	)
}

func (j *jsiiProxy_SyncVirtualMethods) ValueOfOtherProperty() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"valueOfOtherProperty",
	)
}


func NewSyncVirtualMethods() SyncVirtualMethods {
	_init_.Initialize()

	j := jsiiProxy_SyncVirtualMethods{}

	_jsii_.Create(
		"jsii-calc.SyncVirtualMethods",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewSyncVirtualMethods_Override(s SyncVirtualMethods) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.SyncVirtualMethods",
		nil, // no parameters
		s,
	)
}

func (j *jsiiProxy_SyncVirtualMethods) SetA(val _api_.Number) {
	_jsii_.Set(
		j,
		"a",
		val,
	)
}

func (j *jsiiProxy_SyncVirtualMethods) SetCallerIsProperty(val _api_.Number) {
	_jsii_.Set(
		j,
		"callerIsProperty",
		val,
	)
}

func (j *jsiiProxy_SyncVirtualMethods) SetOtherProperty(val _api_.String) {
	_jsii_.Set(
		j,
		"otherProperty",
		val,
	)
}

func (j *jsiiProxy_SyncVirtualMethods) SetTheProperty(val _api_.String) {
	_jsii_.Set(
		j,
		"theProperty",
		val,
	)
}

func (j *jsiiProxy_SyncVirtualMethods) SetValueOfOtherProperty(val _api_.String) {
	_jsii_.Set(
		j,
		"valueOfOtherProperty",
		val,
	)
}

func (s *jsiiProxy_SyncVirtualMethods) CallerIsAsync() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		s,
		"callerIsAsync",
		nil, // no parameters
	)
}

func (s *jsiiProxy_SyncVirtualMethods) CallerIsMethod() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		s,
		"callerIsMethod",
		nil, // no parameters
	)
}

func (s *jsiiProxy_SyncVirtualMethods) ModifyOtherProperty(value _api_.String) {
	_jsii_.InvokeVoid(
		s,
		"modifyOtherProperty",
		[]interface{}{value},
	)
}

func (s *jsiiProxy_SyncVirtualMethods) ModifyValueOfTheProperty(value _api_.String) {
	_jsii_.InvokeVoid(
		s,
		"modifyValueOfTheProperty",
		[]interface{}{value},
	)
}

func (s *jsiiProxy_SyncVirtualMethods) ReadA() _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		s,
		"readA",
		nil, // no parameters
	)
}

func (s *jsiiProxy_SyncVirtualMethods) RetrieveOtherProperty() _api_.String {
	return _jsii_.Invoke[_api_.String](
		s,
		"retrieveOtherProperty",
		nil, // no parameters
	)
}

func (s *jsiiProxy_SyncVirtualMethods) RetrieveReadOnlyProperty() _api_.String {
	return _jsii_.Invoke[_api_.String](
		s,
		"retrieveReadOnlyProperty",
		nil, // no parameters
	)
}

func (s *jsiiProxy_SyncVirtualMethods) RetrieveValueOfTheProperty() _api_.String {
	return _jsii_.Invoke[_api_.String](
		s,
		"retrieveValueOfTheProperty",
		nil, // no parameters
	)
}

func (s *jsiiProxy_SyncVirtualMethods) VirtualMethod(n _api_.Number) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		s,
		"virtualMethod",
		[]interface{}{n},
	)
}

func (s *jsiiProxy_SyncVirtualMethods) WriteA(value _api_.Number) {
	_jsii_.InvokeVoid(
		s,
		"writeA",
		[]interface{}{value},
	)
}

// FromOption__ unwraps an SyncVirtualMethods from an Option[SyncVirtualMethods].
// You should never need to call this method directly.
func (j jsiiProxy_SyncVirtualMethods) FromOption__() SyncVirtualMethods {
	var j_ SyncVirtualMethods = &j
	return j_
}

type TestStructWithEnum interface {
	StructWithFoo() StructWithEnum
	StructWithFooBar() StructWithEnum
	IsStringEnumA(input StructWithEnum) _api_.Bool
	IsStringEnumB(input StructWithEnum) _api_.Bool
}

// The jsii proxy struct for TestStructWithEnum
type jsiiProxy_TestStructWithEnum struct {
	_ byte // padding
}

func (j *jsiiProxy_TestStructWithEnum) StructWithFoo() StructWithEnum {
	return _jsii_.Get[StructWithEnum](
		j,
		"structWithFoo",
	)
}

func (j *jsiiProxy_TestStructWithEnum) StructWithFooBar() StructWithEnum {
	return _jsii_.Get[StructWithEnum](
		j,
		"structWithFooBar",
	)
}


func NewTestStructWithEnum() TestStructWithEnum {
	_init_.Initialize()

	j := jsiiProxy_TestStructWithEnum{}

	_jsii_.Create(
		"jsii-calc.TestStructWithEnum",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewTestStructWithEnum_Override(t TestStructWithEnum) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.TestStructWithEnum",
		nil, // no parameters
		t,
	)
}

// Returns true if \`foo\` is \`StringEnum.A\`.
func (t *jsiiProxy_TestStructWithEnum) IsStringEnumA(input StructWithEnum) _api_.Bool {
	return _jsii_.Invoke[_api_.Bool](
		t,
		"isStringEnumA",
		[]interface{}{input},
	)
}

// Returns true if \`foo\` is \`StringEnum.B\` and \`bar\` is \`AllTypesEnum.THIS_IS_GREAT\`.
func (t *jsiiProxy_TestStructWithEnum) IsStringEnumB(input StructWithEnum) _api_.Bool {
	return _jsii_.Invoke[_api_.Bool](
		t,
		"isStringEnumB",
		[]interface{}{input},
	)
}

// FromOption__ unwraps an TestStructWithEnum from an Option[TestStructWithEnum].
// You should never need to call this method directly.
func (j jsiiProxy_TestStructWithEnum) FromOption__() TestStructWithEnum {
	var j_ TestStructWithEnum = &j
	return j_
}

type Thrower interface {
	ThrowError()
}

// The jsii proxy struct for Thrower
type jsiiProxy_Thrower struct {
	_ byte // padding
}

func NewThrower() Thrower {
	_init_.Initialize()

	j := jsiiProxy_Thrower{}

	_jsii_.Create(
		"jsii-calc.Thrower",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewThrower_Override(t Thrower) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.Thrower",
		nil, // no parameters
		t,
	)
}

func (t *jsiiProxy_Thrower) ThrowError() {
	_jsii_.InvokeVoid(
		t,
		"throwError",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Thrower from an Option[Thrower].
// You should never need to call this method directly.
func (j jsiiProxy_Thrower) FromOption__() Thrower {
	var j_ Thrower = &j
	return j_
}

type TopLevelStruct struct {
	// This is a required field.
	Required _api_.String \`json:"required"\`
	// A union to really stress test our serialization.
	SecondLevel interface{} \`json:"secondLevel"\`
	// You don't have to pass this.
	Optional _api_.Option[_api_.String] \`json:"optional"\`
}

// FromOption__ unwraps an TopLevelStruct from an Option[TopLevelStruct].
// You should never need to call this method directly.
func (t TopLevelStruct) FromOption__() TopLevelStruct {
	return t
}

// In TypeScript it is possible to have two methods with the same name but different capitalization.
// See: https://github.com/aws/jsii/issues/2508
//
type TwoMethodsWithSimilarCapitalization interface {
	FooBar() _api_.Number
	FooBAR() _api_.Number
	ToIsoString() _api_.String
	ToIsOString() _api_.String
	ToISOString() _api_.String
}

// The jsii proxy struct for TwoMethodsWithSimilarCapitalization
type jsiiProxy_TwoMethodsWithSimilarCapitalization struct {
	_ byte // padding
}

func (j *jsiiProxy_TwoMethodsWithSimilarCapitalization) FooBar() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"fooBar",
	)
}

func (j *jsiiProxy_TwoMethodsWithSimilarCapitalization) FooBAR() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"fooBAR",
	)
}


func NewTwoMethodsWithSimilarCapitalization() TwoMethodsWithSimilarCapitalization {
	_init_.Initialize()

	j := jsiiProxy_TwoMethodsWithSimilarCapitalization{}

	_jsii_.Create(
		"jsii-calc.TwoMethodsWithSimilarCapitalization",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewTwoMethodsWithSimilarCapitalization_Override(t TwoMethodsWithSimilarCapitalization) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.TwoMethodsWithSimilarCapitalization",
		nil, // no parameters
		t,
	)
}

func (t *jsiiProxy_TwoMethodsWithSimilarCapitalization) ToIsoString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		t,
		"toIsoString",
		nil, // no parameters
	)
}

// Deprecated: python requires that all alternatives are deprecated
func (t *jsiiProxy_TwoMethodsWithSimilarCapitalization) ToIsOString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		t,
		"toIsOString",
		nil, // no parameters
	)
}

// Deprecated: python requires that all alternatives are deprecated
func (t *jsiiProxy_TwoMethodsWithSimilarCapitalization) ToISOString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		t,
		"toISOString",
		nil, // no parameters
	)
}

// FromOption__ unwraps an TwoMethodsWithSimilarCapitalization from an Option[TwoMethodsWithSimilarCapitalization].
// You should never need to call this method directly.
func (j jsiiProxy_TwoMethodsWithSimilarCapitalization) FromOption__() TwoMethodsWithSimilarCapitalization {
	var j_ TwoMethodsWithSimilarCapitalization = &j
	return j_
}

// Checks the current file permissions are cool (no funky UMASK down-scoping happened).
// See: https://github.com/aws/jsii/issues/1765
//
type UmaskCheck interface {
}

// The jsii proxy struct for UmaskCheck
type jsiiProxy_UmaskCheck struct {
	_ byte // padding
}

// This should return 0o644 (-rw-r--r--).
func UmaskCheck_Mode() _api_.Number {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Number](
		"jsii-calc.UmaskCheck",
		"mode",
		nil, // no parameters
	)
}

// FromOption__ unwraps an UmaskCheck from an Option[UmaskCheck].
// You should never need to call this method directly.
func (j jsiiProxy_UmaskCheck) FromOption__() UmaskCheck {
	var j_ UmaskCheck = &j
	return j_
}

// An operation on a single operand.
type UnaryOperation interface {
	scopejsiicalclib.Operation
	Operand() scopejsiicalclib.NumericValue
	Value() _api_.Number
	ToString() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for UnaryOperation
type jsiiProxy_UnaryOperation struct {
	internal.Type__scopejsiicalclibOperation
}

func (j *jsiiProxy_UnaryOperation) Operand() scopejsiicalclib.NumericValue {
	return _jsii_.Get[scopejsiicalclib.NumericValue](
		j,
		"operand",
	)
}

func (j *jsiiProxy_UnaryOperation) Value() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"value",
	)
}


func NewUnaryOperation_Override(u UnaryOperation, operand scopejsiicalclib.NumericValue) {
	_init_.Initialize()

	if operand == nil { panic("Parameters \\"operand\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.UnaryOperation",
		[]interface{}{operand},
		u,
	)
}

// String representation of the value.
// Deprecated.
func (u *jsiiProxy_UnaryOperation) ToString() _api_.String {
	return _jsii_.Invoke[_api_.String](
		u,
		"toString",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (u *jsiiProxy_UnaryOperation) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		u,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an UnaryOperation from an Option[UnaryOperation].
// You should never need to call this method directly.
func (j jsiiProxy_UnaryOperation) FromOption__() UnaryOperation {
	var j_ UnaryOperation = &j
	return j_
}

type UnionProperties struct {
	Bar interface{} \`json:"bar"\`
	Foo interface{} \`json:"foo"\`
}

// FromOption__ unwraps an UnionProperties from an Option[UnionProperties].
// You should never need to call this method directly.
func (u UnionProperties) FromOption__() UnionProperties {
	return u
}

// Ensures submodule-imported types from dependencies can be used correctly.
type UpcasingReflectable interface {
	customsubmodulename.IReflectable
	Entries() _api_.Slice[customsubmodulename.ReflectableEntry]
}

// The jsii proxy struct for UpcasingReflectable
type jsiiProxy_UpcasingReflectable struct {
	internal.Type__customsubmodulenameIReflectable
}

func (j *jsiiProxy_UpcasingReflectable) Entries() _api_.Slice[customsubmodulename.ReflectableEntry] {
	return _jsii_.Get[_api_.Slice[customsubmodulename.ReflectableEntry]](
		j,
		"entries",
	)
}


func NewUpcasingReflectable(delegate _api_.Map[interface{}]) UpcasingReflectable {
	_init_.Initialize()

	j := jsiiProxy_UpcasingReflectable{}

	_jsii_.Create(
		"jsii-calc.UpcasingReflectable",
		[]interface{}{delegate},
		&j,
	)

	return &j
}

func NewUpcasingReflectable_Override(u UpcasingReflectable, delegate _api_.Map[interface{}]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.UpcasingReflectable",
		[]interface{}{delegate},
		u,
	)
}

func UpcasingReflectable_Reflector() customsubmodulename.Reflector {
	_init_.Initialize()
	return _jsii_.StaticGet[customsubmodulename.Reflector](
		"jsii-calc.UpcasingReflectable",
		"reflector",
	)
}

// FromOption__ unwraps an UpcasingReflectable from an Option[UpcasingReflectable].
// You should never need to call this method directly.
func (j jsiiProxy_UpcasingReflectable) FromOption__() UpcasingReflectable {
	var j_ UpcasingReflectable = &j
	return j_
}

type UseBundledDependency interface {
	Value() interface{}
}

// The jsii proxy struct for UseBundledDependency
type jsiiProxy_UseBundledDependency struct {
	_ byte // padding
}

func NewUseBundledDependency() UseBundledDependency {
	_init_.Initialize()

	j := jsiiProxy_UseBundledDependency{}

	_jsii_.Create(
		"jsii-calc.UseBundledDependency",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewUseBundledDependency_Override(u UseBundledDependency) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.UseBundledDependency",
		nil, // no parameters
		u,
	)
}

func (u *jsiiProxy_UseBundledDependency) Value() interface{} {
	return _jsii_.Invoke[interface{}](
		u,
		"value",
		nil, // no parameters
	)
}

// FromOption__ unwraps an UseBundledDependency from an Option[UseBundledDependency].
// You should never need to call this method directly.
func (j jsiiProxy_UseBundledDependency) FromOption__() UseBundledDependency {
	var j_ UseBundledDependency = &j
	return j_
}

// Depend on a type from jsii-calc-base as a test for awslabs/jsii#128.
type UseCalcBase interface {
	Hello() jcb.Base
}

// The jsii proxy struct for UseCalcBase
type jsiiProxy_UseCalcBase struct {
	_ byte // padding
}

func NewUseCalcBase() UseCalcBase {
	_init_.Initialize()

	j := jsiiProxy_UseCalcBase{}

	_jsii_.Create(
		"jsii-calc.UseCalcBase",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewUseCalcBase_Override(u UseCalcBase) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.UseCalcBase",
		nil, // no parameters
		u,
	)
}

func (u *jsiiProxy_UseCalcBase) Hello() jcb.Base {
	return _jsii_.Invoke[jcb.Base](
		u,
		"hello",
		nil, // no parameters
	)
}

// FromOption__ unwraps an UseCalcBase from an Option[UseCalcBase].
// You should never need to call this method directly.
func (j jsiiProxy_UseCalcBase) FromOption__() UseCalcBase {
	var j_ UseCalcBase = &j
	return j_
}

type UsesInterfaceWithProperties interface {
	Obj() IInterfaceWithProperties
	JustRead() _api_.String
	ReadStringAndNumber(ext IInterfaceWithPropertiesExtension) _api_.String
	WriteAndRead(value _api_.String) _api_.String
}

// The jsii proxy struct for UsesInterfaceWithProperties
type jsiiProxy_UsesInterfaceWithProperties struct {
	_ byte // padding
}

func (j *jsiiProxy_UsesInterfaceWithProperties) Obj() IInterfaceWithProperties {
	return _jsii_.Get[IInterfaceWithProperties](
		j,
		"obj",
	)
}


func NewUsesInterfaceWithProperties(obj IInterfaceWithProperties) UsesInterfaceWithProperties {
	_init_.Initialize()

	if obj == nil { panic("Parameters \\"obj\\" is required (received nil)") }
	j := jsiiProxy_UsesInterfaceWithProperties{}

	_jsii_.Create(
		"jsii-calc.UsesInterfaceWithProperties",
		[]interface{}{obj},
		&j,
	)

	return &j
}

func NewUsesInterfaceWithProperties_Override(u UsesInterfaceWithProperties, obj IInterfaceWithProperties) {
	_init_.Initialize()

	if obj == nil { panic("Parameters \\"obj\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.UsesInterfaceWithProperties",
		[]interface{}{obj},
		u,
	)
}

func (u *jsiiProxy_UsesInterfaceWithProperties) JustRead() _api_.String {
	return _jsii_.Invoke[_api_.String](
		u,
		"justRead",
		nil, // no parameters
	)
}

func (u *jsiiProxy_UsesInterfaceWithProperties) ReadStringAndNumber(ext IInterfaceWithPropertiesExtension) _api_.String {
	if ext == nil { panic("Parameters \\"ext\\" is required (received nil)") }
	return _jsii_.Invoke[_api_.String](
		u,
		"readStringAndNumber",
		[]interface{}{ext},
	)
}

func (u *jsiiProxy_UsesInterfaceWithProperties) WriteAndRead(value _api_.String) _api_.String {
	return _jsii_.Invoke[_api_.String](
		u,
		"writeAndRead",
		[]interface{}{value},
	)
}

// FromOption__ unwraps an UsesInterfaceWithProperties from an Option[UsesInterfaceWithProperties].
// You should never need to call this method directly.
func (j jsiiProxy_UsesInterfaceWithProperties) FromOption__() UsesInterfaceWithProperties {
	var j_ UsesInterfaceWithProperties = &j
	return j_
}

type VariadicInvoker interface {
	AsArray(values ..._api_.Number) _api_.Slice[_api_.Number]
}

// The jsii proxy struct for VariadicInvoker
type jsiiProxy_VariadicInvoker struct {
	_ byte // padding
}

func NewVariadicInvoker(method VariadicMethod) VariadicInvoker {
	_init_.Initialize()

	if method == nil { panic("Parameters \\"method\\" is required (received nil)") }
	j := jsiiProxy_VariadicInvoker{}

	_jsii_.Create(
		"jsii-calc.VariadicInvoker",
		[]interface{}{method},
		&j,
	)

	return &j
}

func NewVariadicInvoker_Override(v VariadicInvoker, method VariadicMethod) {
	_init_.Initialize()

	if method == nil { panic("Parameters \\"method\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.VariadicInvoker",
		[]interface{}{method},
		v,
	)
}

func (v *jsiiProxy_VariadicInvoker) AsArray(values ..._api_.Number) _api_.Slice[_api_.Number] {
	args := []interface{}{}
	for _, a := range values {
		args = append(args, a)
	}

	return _jsii_.Invoke[_api_.Slice[_api_.Number]](
		v,
		"asArray",
		args,
	)
}

// FromOption__ unwraps an VariadicInvoker from an Option[VariadicInvoker].
// You should never need to call this method directly.
func (j jsiiProxy_VariadicInvoker) FromOption__() VariadicInvoker {
	var j_ VariadicInvoker = &j
	return j_
}

type VariadicMethod interface {
	AsArray(first _api_.Number, others ..._api_.Number) _api_.Slice[_api_.Number]
}

// The jsii proxy struct for VariadicMethod
type jsiiProxy_VariadicMethod struct {
	_ byte // padding
}

func NewVariadicMethod(prefix ..._api_.Number) VariadicMethod {
	_init_.Initialize()

	args := []interface{}{}
	for _, a := range prefix {
		args = append(args, a)
	}

	j := jsiiProxy_VariadicMethod{}

	_jsii_.Create(
		"jsii-calc.VariadicMethod",
		args,
		&j,
	)

	return &j
}

func NewVariadicMethod_Override(v VariadicMethod, prefix ..._api_.Number) {
	_init_.Initialize()

	args := []interface{}{}
	for _, a := range prefix {
		args = append(args, a)
	}

	_jsii_.Create(
		"jsii-calc.VariadicMethod",
		args,
		v,
	)
}

func (v *jsiiProxy_VariadicMethod) AsArray(first _api_.Number, others ..._api_.Number) _api_.Slice[_api_.Number] {
	args := []interface{}{first}
	for _, a := range others {
		args = append(args, a)
	}

	return _jsii_.Invoke[_api_.Slice[_api_.Number]](
		v,
		"asArray",
		args,
	)
}

// FromOption__ unwraps an VariadicMethod from an Option[VariadicMethod].
// You should never need to call this method directly.
func (j jsiiProxy_VariadicMethod) FromOption__() VariadicMethod {
	var j_ VariadicMethod = &j
	return j_
}

type VirtualMethodPlayground interface {
	OverrideMeAsync(index _api_.Number) _api_.Number
	OverrideMeSync(index _api_.Number) _api_.Number
	ParallelSumAsync(count _api_.Number) _api_.Number
	SerialSumAsync(count _api_.Number) _api_.Number
	SumSync(count _api_.Number) _api_.Number
}

// The jsii proxy struct for VirtualMethodPlayground
type jsiiProxy_VirtualMethodPlayground struct {
	_ byte // padding
}

func NewVirtualMethodPlayground() VirtualMethodPlayground {
	_init_.Initialize()

	j := jsiiProxy_VirtualMethodPlayground{}

	_jsii_.Create(
		"jsii-calc.VirtualMethodPlayground",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewVirtualMethodPlayground_Override(v VirtualMethodPlayground) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.VirtualMethodPlayground",
		nil, // no parameters
		v,
	)
}

func (v *jsiiProxy_VirtualMethodPlayground) OverrideMeAsync(index _api_.Number) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		v,
		"overrideMeAsync",
		[]interface{}{index},
	)
}

func (v *jsiiProxy_VirtualMethodPlayground) OverrideMeSync(index _api_.Number) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		v,
		"overrideMeSync",
		[]interface{}{index},
	)
}

func (v *jsiiProxy_VirtualMethodPlayground) ParallelSumAsync(count _api_.Number) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		v,
		"parallelSumAsync",
		[]interface{}{count},
	)
}

func (v *jsiiProxy_VirtualMethodPlayground) SerialSumAsync(count _api_.Number) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		v,
		"serialSumAsync",
		[]interface{}{count},
	)
}

func (v *jsiiProxy_VirtualMethodPlayground) SumSync(count _api_.Number) _api_.Number {
	return _jsii_.Invoke[_api_.Number](
		v,
		"sumSync",
		[]interface{}{count},
	)
}

// FromOption__ unwraps an VirtualMethodPlayground from an Option[VirtualMethodPlayground].
// You should never need to call this method directly.
func (j jsiiProxy_VirtualMethodPlayground) FromOption__() VirtualMethodPlayground {
	var j_ VirtualMethodPlayground = &j
	return j_
}

// This test is used to validate the runtimes can return correctly from a void callback.
//
// - Implement \`overrideMe\` (method does not have to do anything).
// - Invoke \`callMe\`
// - Verify that \`methodWasCalled\` is \`true\`.
type VoidCallback interface {
	MethodWasCalled() _api_.Bool
	CallMe()
	OverrideMe()
}

// The jsii proxy struct for VoidCallback
type jsiiProxy_VoidCallback struct {
	_ byte // padding
}

func (j *jsiiProxy_VoidCallback) MethodWasCalled() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"methodWasCalled",
	)
}


func NewVoidCallback_Override(v VoidCallback) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.VoidCallback",
		nil, // no parameters
		v,
	)
}

func (v *jsiiProxy_VoidCallback) CallMe() {
	_jsii_.InvokeVoid(
		v,
		"callMe",
		nil, // no parameters
	)
}

func (v *jsiiProxy_VoidCallback) OverrideMe() {
	_jsii_.InvokeVoid(
		v,
		"overrideMe",
		nil, // no parameters
	)
}

// FromOption__ unwraps an VoidCallback from an Option[VoidCallback].
// You should never need to call this method directly.
func (j jsiiProxy_VoidCallback) FromOption__() VoidCallback {
	var j_ VoidCallback = &j
	return j_
}

// Verifies that private property declarations in constructor arguments are hidden.
type WithPrivatePropertyInConstructor interface {
	Success() _api_.Bool
}

// The jsii proxy struct for WithPrivatePropertyInConstructor
type jsiiProxy_WithPrivatePropertyInConstructor struct {
	_ byte // padding
}

func (j *jsiiProxy_WithPrivatePropertyInConstructor) Success() _api_.Bool {
	return _jsii_.Get[_api_.Bool](
		j,
		"success",
	)
}


func NewWithPrivatePropertyInConstructor(privateField _api_.Option[_api_.String]) WithPrivatePropertyInConstructor {
	_init_.Initialize()

	j := jsiiProxy_WithPrivatePropertyInConstructor{}

	_jsii_.Create(
		"jsii-calc.WithPrivatePropertyInConstructor",
		[]interface{}{privateField},
		&j,
	)

	return &j
}

func NewWithPrivatePropertyInConstructor_Override(w WithPrivatePropertyInConstructor, privateField _api_.Option[_api_.String]) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.WithPrivatePropertyInConstructor",
		[]interface{}{privateField},
		w,
	)
}

// FromOption__ unwraps an WithPrivatePropertyInConstructor from an Option[WithPrivatePropertyInConstructor].
// You should never need to call this method directly.
func (j jsiiProxy_WithPrivatePropertyInConstructor) FromOption__() WithPrivatePropertyInConstructor {
	var j_ WithPrivatePropertyInConstructor = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/jsiicalc.init.go 1`] = `
package jsiicalc

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterClass[AbstractClass](
		"jsii-calc.AbstractClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "abstractMethod", GoMethod: "AbstractMethod"},
			_jsii_.MemberProperty{JsiiProperty: "abstractProperty", GoGetter: "AbstractProperty"},
			_jsii_.MemberMethod{JsiiMethod: "nonAbstractMethod", GoMethod: "NonAbstractMethod"},
			_jsii_.MemberProperty{JsiiProperty: "propFromInterface", GoGetter: "PropFromInterface"},
		},
		func() interface{} {
			j := jsiiProxy_AbstractClass{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_AbstractClassBase)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IInterfaceImplementedByAbstractClass)
			return &j
		},
	)
	_jsii_.RegisterClass[AbstractClassBase](
		"jsii-calc.AbstractClassBase",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "abstractProperty", GoGetter: "AbstractProperty"},
		},
		func() interface{} {
			return &jsiiProxy_AbstractClassBase{}
		},
	)
	_jsii_.RegisterClass[AbstractClassReturner](
		"jsii-calc.AbstractClassReturner",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "giveMeAbstract", GoMethod: "GiveMeAbstract"},
			_jsii_.MemberMethod{JsiiMethod: "giveMeInterface", GoMethod: "GiveMeInterface"},
			_jsii_.MemberProperty{JsiiProperty: "returnAbstractFromProperty", GoGetter: "ReturnAbstractFromProperty"},
		},
		func() interface{} {
			return &jsiiProxy_AbstractClassReturner{}
		},
	)
	_jsii_.RegisterClass[AbstractSuite](
		"jsii-calc.AbstractSuite",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "property", GoGetter: "Property"},
			_jsii_.MemberMethod{JsiiMethod: "someMethod", GoMethod: "SomeMethod"},
			_jsii_.MemberMethod{JsiiMethod: "workItAll", GoMethod: "WorkItAll"},
		},
		func() interface{} {
			return &jsiiProxy_AbstractSuite{}
		},
	)
	_jsii_.RegisterClass[Add](
		"jsii-calc.Add",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
			_jsii_.MemberProperty{JsiiProperty: "lhs", GoGetter: "Lhs"},
			_jsii_.MemberProperty{JsiiProperty: "rhs", GoGetter: "Rhs"},
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_Add{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_BinaryOperation)
			return &j
		},
	)
	_jsii_.RegisterClass[AllTypes](
		"jsii-calc.AllTypes",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "anyArrayProperty", GoGetter: "AnyArrayProperty"},
			_jsii_.MemberMethod{JsiiMethod: "anyIn", GoMethod: "AnyIn"},
			_jsii_.MemberProperty{JsiiProperty: "anyMapProperty", GoGetter: "AnyMapProperty"},
			_jsii_.MemberMethod{JsiiMethod: "anyOut", GoMethod: "AnyOut"},
			_jsii_.MemberProperty{JsiiProperty: "anyProperty", GoGetter: "AnyProperty"},
			_jsii_.MemberProperty{JsiiProperty: "arrayProperty", GoGetter: "ArrayProperty"},
			_jsii_.MemberProperty{JsiiProperty: "booleanProperty", GoGetter: "BooleanProperty"},
			_jsii_.MemberProperty{JsiiProperty: "dateProperty", GoGetter: "DateProperty"},
			_jsii_.MemberMethod{JsiiMethod: "enumMethod", GoMethod: "EnumMethod"},
			_jsii_.MemberProperty{JsiiProperty: "enumProperty", GoGetter: "EnumProperty"},
			_jsii_.MemberProperty{JsiiProperty: "enumPropertyValue", GoGetter: "EnumPropertyValue"},
			_jsii_.MemberProperty{JsiiProperty: "jsonProperty", GoGetter: "JsonProperty"},
			_jsii_.MemberProperty{JsiiProperty: "mapProperty", GoGetter: "MapProperty"},
			_jsii_.MemberProperty{JsiiProperty: "numberProperty", GoGetter: "NumberProperty"},
			_jsii_.MemberProperty{JsiiProperty: "optionalEnumValue", GoGetter: "OptionalEnumValue"},
			_jsii_.MemberProperty{JsiiProperty: "stringProperty", GoGetter: "StringProperty"},
			_jsii_.MemberProperty{JsiiProperty: "unionArrayProperty", GoGetter: "UnionArrayProperty"},
			_jsii_.MemberProperty{JsiiProperty: "unionMapProperty", GoGetter: "UnionMapProperty"},
			_jsii_.MemberProperty{JsiiProperty: "unionProperty", GoGetter: "UnionProperty"},
			_jsii_.MemberProperty{JsiiProperty: "unknownArrayProperty", GoGetter: "UnknownArrayProperty"},
			_jsii_.MemberProperty{JsiiProperty: "unknownMapProperty", GoGetter: "UnknownMapProperty"},
			_jsii_.MemberProperty{JsiiProperty: "unknownProperty", GoGetter: "UnknownProperty"},
		},
		func() interface{} {
			return &jsiiProxy_AllTypes{}
		},
	)
	_jsii_.RegisterEnum[AllTypesEnum](
		"jsii-calc.AllTypesEnum",
		_init_.Initialize,
		map[string]interface{}{
			"MY_ENUM_VALUE": AllTypesEnum_MY_ENUM_VALUE,
			"YOUR_ENUM_VALUE": AllTypesEnum_YOUR_ENUM_VALUE,
			"THIS_IS_GREAT": AllTypesEnum_THIS_IS_GREAT,
		},
	)
	_jsii_.RegisterClass[AllowedMethodNames](
		"jsii-calc.AllowedMethodNames",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "getBar", GoMethod: "GetBar"},
			_jsii_.MemberMethod{JsiiMethod: "getFoo", GoMethod: "GetFoo"},
			_jsii_.MemberMethod{JsiiMethod: "setBar", GoMethod: "SetBar"},
			_jsii_.MemberMethod{JsiiMethod: "setFoo", GoMethod: "SetFoo"},
		},
		func() interface{} {
			return &jsiiProxy_AllowedMethodNames{}
		},
	)
	_jsii_.RegisterClass[AmbiguousParameters](
		"jsii-calc.AmbiguousParameters",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "props", GoGetter: "Props"},
			_jsii_.MemberProperty{JsiiProperty: "scope", GoGetter: "Scope"},
		},
		func() interface{} {
			return &jsiiProxy_AmbiguousParameters{}
		},
	)
	_jsii_.RegisterClass[AnonymousImplementationProvider](
		"jsii-calc.AnonymousImplementationProvider",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "provideAsClass", GoMethod: "ProvideAsClass"},
			_jsii_.MemberMethod{JsiiMethod: "provideAsInterface", GoMethod: "ProvideAsInterface"},
		},
		func() interface{} {
			j := jsiiProxy_AnonymousImplementationProvider{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IAnonymousImplementationProvider)
			return &j
		},
	)
	_jsii_.RegisterClass[AsyncVirtualMethods](
		"jsii-calc.AsyncVirtualMethods",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "callMe", GoMethod: "CallMe"},
			_jsii_.MemberMethod{JsiiMethod: "callMe2", GoMethod: "CallMe2"},
			_jsii_.MemberMethod{JsiiMethod: "callMeDoublePromise", GoMethod: "CallMeDoublePromise"},
			_jsii_.MemberMethod{JsiiMethod: "dontOverrideMe", GoMethod: "DontOverrideMe"},
			_jsii_.MemberMethod{JsiiMethod: "overrideMe", GoMethod: "OverrideMe"},
			_jsii_.MemberMethod{JsiiMethod: "overrideMeToo", GoMethod: "OverrideMeToo"},
		},
		func() interface{} {
			return &jsiiProxy_AsyncVirtualMethods{}
		},
	)
	_jsii_.RegisterClass[AugmentableClass](
		"jsii-calc.AugmentableClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "methodOne", GoMethod: "MethodOne"},
			_jsii_.MemberMethod{JsiiMethod: "methodTwo", GoMethod: "MethodTwo"},
		},
		func() interface{} {
			return &jsiiProxy_AugmentableClass{}
		},
	)
	_jsii_.RegisterClass[BaseJsii976](
		"jsii-calc.BaseJsii976",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_BaseJsii976{}
		},
	)
	_jsii_.RegisterClass[Bell](
		"jsii-calc.Bell",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "ring", GoMethod: "Ring"},
			_jsii_.MemberProperty{JsiiProperty: "rung", GoGetter: "Rung"},
		},
		func() interface{} {
			j := jsiiProxy_Bell{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IBell)
			return &j
		},
	)
	_jsii_.RegisterClass[BinaryOperation](
		"jsii-calc.BinaryOperation",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
			_jsii_.MemberProperty{JsiiProperty: "lhs", GoGetter: "Lhs"},
			_jsii_.MemberProperty{JsiiProperty: "rhs", GoGetter: "Rhs"},
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_BinaryOperation{}
			_jsii_.InitJsiiProxy(&j.Type__scopejsiicalclibOperation)
			_jsii_.InitJsiiProxy(&j.Type__scopejsiicalclibIFriendly)
			return &j
		},
	)
	_jsii_.RegisterClass[BurriedAnonymousObject](
		"jsii-calc.BurriedAnonymousObject",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "check", GoMethod: "Check"},
			_jsii_.MemberMethod{JsiiMethod: "giveItBack", GoMethod: "GiveItBack"},
		},
		func() interface{} {
			return &jsiiProxy_BurriedAnonymousObject{}
		},
	)
	_jsii_.RegisterClass[Calculator](
		"jsii-calc.Calculator",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "add", GoMethod: "Add"},
			_jsii_.MemberProperty{JsiiProperty: "curr", GoGetter: "Curr"},
			_jsii_.MemberProperty{JsiiProperty: "decorationPostfixes", GoGetter: "DecorationPostfixes"},
			_jsii_.MemberProperty{JsiiProperty: "decorationPrefixes", GoGetter: "DecorationPrefixes"},
			_jsii_.MemberProperty{JsiiProperty: "expression", GoGetter: "Expression"},
			_jsii_.MemberProperty{JsiiProperty: "maxValue", GoGetter: "MaxValue"},
			_jsii_.MemberMethod{JsiiMethod: "mul", GoMethod: "Mul"},
			_jsii_.MemberMethod{JsiiMethod: "neg", GoMethod: "Neg"},
			_jsii_.MemberProperty{JsiiProperty: "operationsLog", GoGetter: "OperationsLog"},
			_jsii_.MemberProperty{JsiiProperty: "operationsMap", GoGetter: "OperationsMap"},
			_jsii_.MemberMethod{JsiiMethod: "pow", GoMethod: "Pow"},
			_jsii_.MemberMethod{JsiiMethod: "readUnionValue", GoMethod: "ReadUnionValue"},
			_jsii_.MemberProperty{JsiiProperty: "stringStyle", GoGetter: "StringStyle"},
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "unionProperty", GoGetter: "UnionProperty"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_Calculator{}
			_jsii_.InitJsiiProxy(&j.Type__compositionCompositeOperation)
			return &j
		},
	)
	_jsii_.RegisterStruct[CalculatorProps](
		"jsii-calc.CalculatorProps",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[ChildStruct982](
		"jsii-calc.ChildStruct982",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[ClassThatImplementsTheInternalInterface](
		"jsii-calc.ClassThatImplementsTheInternalInterface",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "a", GoGetter: "A"},
			_jsii_.MemberProperty{JsiiProperty: "b", GoGetter: "B"},
			_jsii_.MemberProperty{JsiiProperty: "c", GoGetter: "C"},
			_jsii_.MemberProperty{JsiiProperty: "d", GoGetter: "D"},
		},
		func() interface{} {
			j := jsiiProxy_ClassThatImplementsTheInternalInterface{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_INonInternalInterface)
			return &j
		},
	)
	_jsii_.RegisterClass[ClassThatImplementsThePrivateInterface](
		"jsii-calc.ClassThatImplementsThePrivateInterface",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "a", GoGetter: "A"},
			_jsii_.MemberProperty{JsiiProperty: "b", GoGetter: "B"},
			_jsii_.MemberProperty{JsiiProperty: "c", GoGetter: "C"},
			_jsii_.MemberProperty{JsiiProperty: "e", GoGetter: "E"},
		},
		func() interface{} {
			j := jsiiProxy_ClassThatImplementsThePrivateInterface{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_INonInternalInterface)
			return &j
		},
	)
	_jsii_.RegisterClass[ClassWithCollections](
		"jsii-calc.ClassWithCollections",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "array", GoGetter: "Array"},
			_jsii_.MemberProperty{JsiiProperty: "map", GoGetter: "Map"},
		},
		func() interface{} {
			return &jsiiProxy_ClassWithCollections{}
		},
	)
	_jsii_.RegisterClass[ClassWithContainerTypes](
		"jsii-calc.ClassWithContainerTypes",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "array", GoGetter: "Array"},
			_jsii_.MemberProperty{JsiiProperty: "obj", GoGetter: "Obj"},
			_jsii_.MemberProperty{JsiiProperty: "props", GoGetter: "Props"},
			_jsii_.MemberProperty{JsiiProperty: "record", GoGetter: "Record"},
		},
		func() interface{} {
			return &jsiiProxy_ClassWithContainerTypes{}
		},
	)
	_jsii_.RegisterClass[ClassWithDocs](
		"jsii-calc.ClassWithDocs",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_ClassWithDocs{}
		},
	)
	_jsii_.RegisterClass[ClassWithJavaReservedWords](
		"jsii-calc.ClassWithJavaReservedWords",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "import", GoMethod: "Import"},
			_jsii_.MemberProperty{JsiiProperty: "int", GoGetter: "Int"},
		},
		func() interface{} {
			return &jsiiProxy_ClassWithJavaReservedWords{}
		},
	)
	_jsii_.RegisterClass[ClassWithMutableObjectLiteralProperty](
		"jsii-calc.ClassWithMutableObjectLiteralProperty",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "mutableObject", GoGetter: "MutableObject"},
		},
		func() interface{} {
			return &jsiiProxy_ClassWithMutableObjectLiteralProperty{}
		},
	)
	_jsii_.RegisterClass[ClassWithPrivateConstructorAndAutomaticProperties](
		"jsii-calc.ClassWithPrivateConstructorAndAutomaticProperties",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "readOnlyString", GoGetter: "ReadOnlyString"},
			_jsii_.MemberProperty{JsiiProperty: "readWriteString", GoGetter: "ReadWriteString"},
		},
		func() interface{} {
			j := jsiiProxy_ClassWithPrivateConstructorAndAutomaticProperties{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IInterfaceWithProperties)
			return &j
		},
	)
	_jsii_.RegisterClass[ConfusingToJackson](
		"jsii-calc.ConfusingToJackson",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "unionProperty", GoGetter: "UnionProperty"},
		},
		func() interface{} {
			return &jsiiProxy_ConfusingToJackson{}
		},
	)
	_jsii_.RegisterStruct[ConfusingToJacksonStruct](
		"jsii-calc.ConfusingToJacksonStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[ConstructorPassesThisOut](
		"jsii-calc.ConstructorPassesThisOut",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_ConstructorPassesThisOut{}
		},
	)
	_jsii_.RegisterClass[Constructors](
		"jsii-calc.Constructors",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_Constructors{}
		},
	)
	_jsii_.RegisterClass[ConsumePureInterface](
		"jsii-calc.ConsumePureInterface",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "workItBaby", GoMethod: "WorkItBaby"},
		},
		func() interface{} {
			return &jsiiProxy_ConsumePureInterface{}
		},
	)
	_jsii_.RegisterClass[ConsumerCanRingBell](
		"jsii-calc.ConsumerCanRingBell",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "implementedByObjectLiteral", GoMethod: "ImplementedByObjectLiteral"},
			_jsii_.MemberMethod{JsiiMethod: "implementedByPrivateClass", GoMethod: "ImplementedByPrivateClass"},
			_jsii_.MemberMethod{JsiiMethod: "implementedByPublicClass", GoMethod: "ImplementedByPublicClass"},
			_jsii_.MemberMethod{JsiiMethod: "whenTypedAsClass", GoMethod: "WhenTypedAsClass"},
		},
		func() interface{} {
			return &jsiiProxy_ConsumerCanRingBell{}
		},
	)
	_jsii_.RegisterClass[ConsumersOfThisCrazyTypeSystem](
		"jsii-calc.ConsumersOfThisCrazyTypeSystem",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "consumeAnotherPublicInterface", GoMethod: "ConsumeAnotherPublicInterface"},
			_jsii_.MemberMethod{JsiiMethod: "consumeNonInternalInterface", GoMethod: "ConsumeNonInternalInterface"},
		},
		func() interface{} {
			return &jsiiProxy_ConsumersOfThisCrazyTypeSystem{}
		},
	)
	_jsii_.RegisterStruct[ContainerProps](
		"jsii-calc.ContainerProps",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[DataRenderer](
		"jsii-calc.DataRenderer",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "render", GoMethod: "Render"},
			_jsii_.MemberMethod{JsiiMethod: "renderArbitrary", GoMethod: "RenderArbitrary"},
			_jsii_.MemberMethod{JsiiMethod: "renderMap", GoMethod: "RenderMap"},
		},
		func() interface{} {
			return &jsiiProxy_DataRenderer{}
		},
	)
	_jsii_.RegisterClass[Default](
		"jsii-calc.Default",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "pleaseCompile", GoMethod: "PleaseCompile"},
		},
		func() interface{} {
			return &jsiiProxy_Default{}
		},
	)
	_jsii_.RegisterClass[DefaultedConstructorArgument](
		"jsii-calc.DefaultedConstructorArgument",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "arg1", GoGetter: "Arg1"},
			_jsii_.MemberProperty{JsiiProperty: "arg2", GoGetter: "Arg2"},
			_jsii_.MemberProperty{JsiiProperty: "arg3", GoGetter: "Arg3"},
		},
		func() interface{} {
			return &jsiiProxy_DefaultedConstructorArgument{}
		},
	)
	_jsii_.RegisterClass[Demonstrate982](
		"jsii-calc.Demonstrate982",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_Demonstrate982{}
		},
	)
	_jsii_.RegisterClass[DeprecatedClass](
		"jsii-calc.DeprecatedClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
			_jsii_.MemberProperty{JsiiProperty: "mutableProperty", GoGetter: "MutableProperty"},
			_jsii_.MemberProperty{JsiiProperty: "readonlyProperty", GoGetter: "ReadonlyProperty"},
		},
		func() interface{} {
			return &jsiiProxy_DeprecatedClass{}
		},
	)
	_jsii_.RegisterEnum[DeprecatedEnum](
		"jsii-calc.DeprecatedEnum",
		_init_.Initialize,
		map[string]interface{}{
			"OPTION_A": DeprecatedEnum_OPTION_A,
			"OPTION_B": DeprecatedEnum_OPTION_B,
		},
	)
	_jsii_.RegisterStruct[DeprecatedStruct](
		"jsii-calc.DeprecatedStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[DerivedStruct](
		"jsii-calc.DerivedStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[DiamondBottom](
		"jsii-calc.DiamondBottom",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[DiamondInheritanceBaseLevelStruct](
		"jsii-calc.DiamondInheritanceBaseLevelStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[DiamondInheritanceFirstMidLevelStruct](
		"jsii-calc.DiamondInheritanceFirstMidLevelStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[DiamondInheritanceSecondMidLevelStruct](
		"jsii-calc.DiamondInheritanceSecondMidLevelStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[DiamondInheritanceTopLevelStruct](
		"jsii-calc.DiamondInheritanceTopLevelStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[DisappointingCollectionSource](
		"jsii-calc.DisappointingCollectionSource",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_DisappointingCollectionSource{}
		},
	)
	_jsii_.RegisterClass[DoNotOverridePrivates](
		"jsii-calc.DoNotOverridePrivates",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "changePrivatePropertyValue", GoMethod: "ChangePrivatePropertyValue"},
			_jsii_.MemberMethod{JsiiMethod: "privateMethodValue", GoMethod: "PrivateMethodValue"},
			_jsii_.MemberMethod{JsiiMethod: "privatePropertyValue", GoMethod: "PrivatePropertyValue"},
		},
		func() interface{} {
			return &jsiiProxy_DoNotOverridePrivates{}
		},
	)
	_jsii_.RegisterClass[DoNotRecognizeAnyAsOptional](
		"jsii-calc.DoNotRecognizeAnyAsOptional",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
		},
		func() interface{} {
			return &jsiiProxy_DoNotRecognizeAnyAsOptional{}
		},
	)
	_jsii_.RegisterClass[DocumentedClass](
		"jsii-calc.DocumentedClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "greet", GoMethod: "Greet"},
			_jsii_.MemberMethod{JsiiMethod: "hola", GoMethod: "Hola"},
		},
		func() interface{} {
			return &jsiiProxy_DocumentedClass{}
		},
	)
	_jsii_.RegisterClass[DontComplainAboutVariadicAfterOptional](
		"jsii-calc.DontComplainAboutVariadicAfterOptional",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "optionalAndVariadic", GoMethod: "OptionalAndVariadic"},
		},
		func() interface{} {
			return &jsiiProxy_DontComplainAboutVariadicAfterOptional{}
		},
	)
	_jsii_.RegisterClass[DoubleTrouble](
		"jsii-calc.DoubleTrouble",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
			_jsii_.MemberMethod{JsiiMethod: "next", GoMethod: "Next"},
		},
		func() interface{} {
			j := jsiiProxy_DoubleTrouble{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IFriendlyRandomGenerator)
			return &j
		},
	)
	_jsii_.RegisterStruct[DummyObj](
		"jsii-calc.DummyObj",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[DynamicPropertyBearer](
		"jsii-calc.DynamicPropertyBearer",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "dynamicProperty", GoGetter: "DynamicProperty"},
			_jsii_.MemberProperty{JsiiProperty: "valueStore", GoGetter: "ValueStore"},
		},
		func() interface{} {
			return &jsiiProxy_DynamicPropertyBearer{}
		},
	)
	_jsii_.RegisterClass[DynamicPropertyBearerChild](
		"jsii-calc.DynamicPropertyBearerChild",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "dynamicProperty", GoGetter: "DynamicProperty"},
			_jsii_.MemberProperty{JsiiProperty: "originalValue", GoGetter: "OriginalValue"},
			_jsii_.MemberMethod{JsiiMethod: "overrideValue", GoMethod: "OverrideValue"},
			_jsii_.MemberProperty{JsiiProperty: "valueStore", GoGetter: "ValueStore"},
		},
		func() interface{} {
			j := jsiiProxy_DynamicPropertyBearerChild{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_DynamicPropertyBearer)
			return &j
		},
	)
	_jsii_.RegisterClass[Entropy](
		"jsii-calc.Entropy",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "increase", GoMethod: "Increase"},
			_jsii_.MemberMethod{JsiiMethod: "repeat", GoMethod: "Repeat"},
		},
		func() interface{} {
			return &jsiiProxy_Entropy{}
		},
	)
	_jsii_.RegisterClass[EnumDispenser](
		"jsii-calc.EnumDispenser",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_EnumDispenser{}
		},
	)
	_jsii_.RegisterClass[EraseUndefinedHashValues](
		"jsii-calc.EraseUndefinedHashValues",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_EraseUndefinedHashValues{}
		},
	)
	_jsii_.RegisterStruct[EraseUndefinedHashValuesOptions](
		"jsii-calc.EraseUndefinedHashValuesOptions",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[ExperimentalClass](
		"jsii-calc.ExperimentalClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
			_jsii_.MemberProperty{JsiiProperty: "mutableProperty", GoGetter: "MutableProperty"},
			_jsii_.MemberProperty{JsiiProperty: "readonlyProperty", GoGetter: "ReadonlyProperty"},
		},
		func() interface{} {
			return &jsiiProxy_ExperimentalClass{}
		},
	)
	_jsii_.RegisterEnum[ExperimentalEnum](
		"jsii-calc.ExperimentalEnum",
		_init_.Initialize,
		map[string]interface{}{
			"OPTION_A": ExperimentalEnum_OPTION_A,
			"OPTION_B": ExperimentalEnum_OPTION_B,
		},
	)
	_jsii_.RegisterStruct[ExperimentalStruct](
		"jsii-calc.ExperimentalStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[ExportedBaseClass](
		"jsii-calc.ExportedBaseClass",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "success", GoGetter: "Success"},
		},
		func() interface{} {
			return &jsiiProxy_ExportedBaseClass{}
		},
	)
	_jsii_.RegisterStruct[ExtendsInternalInterface](
		"jsii-calc.ExtendsInternalInterface",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[ExternalClass](
		"jsii-calc.ExternalClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
			_jsii_.MemberProperty{JsiiProperty: "mutableProperty", GoGetter: "MutableProperty"},
			_jsii_.MemberProperty{JsiiProperty: "readonlyProperty", GoGetter: "ReadonlyProperty"},
		},
		func() interface{} {
			return &jsiiProxy_ExternalClass{}
		},
	)
	_jsii_.RegisterEnum[ExternalEnum](
		"jsii-calc.ExternalEnum",
		_init_.Initialize,
		map[string]interface{}{
			"OPTION_A": ExternalEnum_OPTION_A,
			"OPTION_B": ExternalEnum_OPTION_B,
		},
	)
	_jsii_.RegisterStruct[ExternalStruct](
		"jsii-calc.ExternalStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[GiveMeStructs](
		"jsii-calc.GiveMeStructs",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "derivedToFirst", GoMethod: "DerivedToFirst"},
			_jsii_.MemberMethod{JsiiMethod: "readDerivedNonPrimitive", GoMethod: "ReadDerivedNonPrimitive"},
			_jsii_.MemberMethod{JsiiMethod: "readFirstNumber", GoMethod: "ReadFirstNumber"},
			_jsii_.MemberProperty{JsiiProperty: "structLiteral", GoGetter: "StructLiteral"},
		},
		func() interface{} {
			return &jsiiProxy_GiveMeStructs{}
		},
	)
	_jsii_.RegisterStruct[Greetee](
		"jsii-calc.Greetee",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[GreetingAugmenter](
		"jsii-calc.GreetingAugmenter",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "betterGreeting", GoMethod: "BetterGreeting"},
		},
		func() interface{} {
			return &jsiiProxy_GreetingAugmenter{}
		},
	)
	_jsii_.RegisterInterface[IAnonymousImplementationProvider](
		"jsii-calc.IAnonymousImplementationProvider",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "provideAsClass", GoMethod: "ProvideAsClass"},
			_jsii_.MemberMethod{JsiiMethod: "provideAsInterface", GoMethod: "ProvideAsInterface"},
		},
		func() interface{} {
			return &jsiiProxy_IAnonymousImplementationProvider{}
		},
	)
	_jsii_.RegisterInterface[IAnonymouslyImplementMe](
		"jsii-calc.IAnonymouslyImplementMe",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
			_jsii_.MemberMethod{JsiiMethod: "verb", GoMethod: "Verb"},
		},
		func() interface{} {
			return &jsiiProxy_IAnonymouslyImplementMe{}
		},
	)
	_jsii_.RegisterInterface[IAnotherPublicInterface](
		"jsii-calc.IAnotherPublicInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "a", GoGetter: "A"},
		},
		func() interface{} {
			return &jsiiProxy_IAnotherPublicInterface{}
		},
	)
	_jsii_.RegisterInterface[IBell](
		"jsii-calc.IBell",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "ring", GoMethod: "Ring"},
		},
		func() interface{} {
			return &jsiiProxy_IBell{}
		},
	)
	_jsii_.RegisterInterface[IBellRinger](
		"jsii-calc.IBellRinger",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "yourTurn", GoMethod: "YourTurn"},
		},
		func() interface{} {
			return &jsiiProxy_IBellRinger{}
		},
	)
	_jsii_.RegisterInterface[IConcreteBellRinger](
		"jsii-calc.IConcreteBellRinger",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "yourTurn", GoMethod: "YourTurn"},
		},
		func() interface{} {
			return &jsiiProxy_IConcreteBellRinger{}
		},
	)
	_jsii_.RegisterInterface[IDeprecatedInterface](
		"jsii-calc.IDeprecatedInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
			_jsii_.MemberProperty{JsiiProperty: "mutableProperty", GoGetter: "MutableProperty"},
		},
		func() interface{} {
			return &jsiiProxy_IDeprecatedInterface{}
		},
	)
	_jsii_.RegisterInterface[IExperimentalInterface](
		"jsii-calc.IExperimentalInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
			_jsii_.MemberProperty{JsiiProperty: "mutableProperty", GoGetter: "MutableProperty"},
		},
		func() interface{} {
			return &jsiiProxy_IExperimentalInterface{}
		},
	)
	_jsii_.RegisterInterface[IExtendsPrivateInterface](
		"jsii-calc.IExtendsPrivateInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "moreThings", GoGetter: "MoreThings"},
			_jsii_.MemberProperty{JsiiProperty: "private", GoGetter: "Private"},
		},
		func() interface{} {
			return &jsiiProxy_IExtendsPrivateInterface{}
		},
	)
	_jsii_.RegisterInterface[IExternalInterface](
		"jsii-calc.IExternalInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
			_jsii_.MemberProperty{JsiiProperty: "mutableProperty", GoGetter: "MutableProperty"},
		},
		func() interface{} {
			return &jsiiProxy_IExternalInterface{}
		},
	)
	_jsii_.RegisterInterface[IFriendlier](
		"jsii-calc.IFriendlier",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "farewell", GoMethod: "Farewell"},
			_jsii_.MemberMethod{JsiiMethod: "goodbye", GoMethod: "Goodbye"},
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
		},
		func() interface{} {
			j := jsiiProxy_IFriendlier{}
			_jsii_.InitJsiiProxy(&j.Type__scopejsiicalclibIFriendly)
			return &j
		},
	)
	_jsii_.RegisterInterface[IFriendlyRandomGenerator](
		"jsii-calc.IFriendlyRandomGenerator",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
			_jsii_.MemberMethod{JsiiMethod: "next", GoMethod: "Next"},
		},
		func() interface{} {
			j := jsiiProxy_IFriendlyRandomGenerator{}
			_jsii_.InitJsiiProxy(&j.Type__scopejsiicalclibIFriendly)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IRandomNumberGenerator)
			return &j
		},
	)
	_jsii_.RegisterInterface[IInterfaceImplementedByAbstractClass](
		"jsii-calc.IInterfaceImplementedByAbstractClass",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "propFromInterface", GoGetter: "PropFromInterface"},
		},
		func() interface{} {
			return &jsiiProxy_IInterfaceImplementedByAbstractClass{}
		},
	)
	_jsii_.RegisterInterface[IInterfaceThatShouldNotBeADataType](
		"jsii-calc.IInterfaceThatShouldNotBeADataType",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "doThings", GoMethod: "DoThings"},
			_jsii_.MemberProperty{JsiiProperty: "otherValue", GoGetter: "OtherValue"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_IInterfaceThatShouldNotBeADataType{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IInterfaceWithMethods)
			return &j
		},
	)
	_jsii_.RegisterInterface[IInterfaceWithInternal](
		"jsii-calc.IInterfaceWithInternal",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "visible", GoMethod: "Visible"},
		},
		func() interface{} {
			return &jsiiProxy_IInterfaceWithInternal{}
		},
	)
	_jsii_.RegisterInterface[IInterfaceWithMethods](
		"jsii-calc.IInterfaceWithMethods",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "doThings", GoMethod: "DoThings"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			return &jsiiProxy_IInterfaceWithMethods{}
		},
	)
	_jsii_.RegisterInterface[IInterfaceWithOptionalMethodArguments](
		"jsii-calc.IInterfaceWithOptionalMethodArguments",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
		},
		func() interface{} {
			return &jsiiProxy_IInterfaceWithOptionalMethodArguments{}
		},
	)
	_jsii_.RegisterInterface[IInterfaceWithProperties](
		"jsii-calc.IInterfaceWithProperties",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "readOnlyString", GoGetter: "ReadOnlyString"},
			_jsii_.MemberProperty{JsiiProperty: "readWriteString", GoGetter: "ReadWriteString"},
		},
		func() interface{} {
			return &jsiiProxy_IInterfaceWithProperties{}
		},
	)
	_jsii_.RegisterInterface[IInterfaceWithPropertiesExtension](
		"jsii-calc.IInterfaceWithPropertiesExtension",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "foo", GoGetter: "Foo"},
			_jsii_.MemberProperty{JsiiProperty: "readOnlyString", GoGetter: "ReadOnlyString"},
			_jsii_.MemberProperty{JsiiProperty: "readWriteString", GoGetter: "ReadWriteString"},
		},
		func() interface{} {
			j := jsiiProxy_IInterfaceWithPropertiesExtension{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IInterfaceWithProperties)
			return &j
		},
	)
	_jsii_.RegisterInterface[IJSII417Derived](
		"jsii-calc.IJSII417Derived",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberMethod{JsiiMethod: "baz", GoMethod: "Baz"},
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
			_jsii_.MemberProperty{JsiiProperty: "hasRoot", GoGetter: "HasRoot"},
			_jsii_.MemberProperty{JsiiProperty: "property", GoGetter: "Property"},
		},
		func() interface{} {
			j := jsiiProxy_IJSII417Derived{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IJSII417PublicBaseOfBase)
			return &j
		},
	)
	_jsii_.RegisterInterface[IJSII417PublicBaseOfBase](
		"jsii-calc.IJSII417PublicBaseOfBase",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
			_jsii_.MemberProperty{JsiiProperty: "hasRoot", GoGetter: "HasRoot"},
		},
		func() interface{} {
			return &jsiiProxy_IJSII417PublicBaseOfBase{}
		},
	)
	_jsii_.RegisterInterface[IJsii487External](
		"jsii-calc.IJsii487External",
		_init_.Initialize,
		nil, // no members
		func() interface{} {
			return &jsiiProxy_IJsii487External{}
		},
	)
	_jsii_.RegisterInterface[IJsii487External2](
		"jsii-calc.IJsii487External2",
		_init_.Initialize,
		nil, // no members
		func() interface{} {
			return &jsiiProxy_IJsii487External2{}
		},
	)
	_jsii_.RegisterInterface[IJsii496](
		"jsii-calc.IJsii496",
		_init_.Initialize,
		nil, // no members
		func() interface{} {
			return &jsiiProxy_IJsii496{}
		},
	)
	_jsii_.RegisterInterface[IMutableObjectLiteral](
		"jsii-calc.IMutableObjectLiteral",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			return &jsiiProxy_IMutableObjectLiteral{}
		},
	)
	_jsii_.RegisterInterface[INonInternalInterface](
		"jsii-calc.INonInternalInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "a", GoGetter: "A"},
			_jsii_.MemberProperty{JsiiProperty: "b", GoGetter: "B"},
			_jsii_.MemberProperty{JsiiProperty: "c", GoGetter: "C"},
		},
		func() interface{} {
			j := jsiiProxy_INonInternalInterface{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IAnotherPublicInterface)
			return &j
		},
	)
	_jsii_.RegisterInterface[IObjectWithProperty](
		"jsii-calc.IObjectWithProperty",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "property", GoGetter: "Property"},
			_jsii_.MemberMethod{JsiiMethod: "wasSet", GoMethod: "WasSet"},
		},
		func() interface{} {
			return &jsiiProxy_IObjectWithProperty{}
		},
	)
	_jsii_.RegisterInterface[IOptionalMethod](
		"jsii-calc.IOptionalMethod",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "optional", GoMethod: "Optional"},
		},
		func() interface{} {
			return &jsiiProxy_IOptionalMethod{}
		},
	)
	_jsii_.RegisterInterface[IPrivatelyImplemented](
		"jsii-calc.IPrivatelyImplemented",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "success", GoGetter: "Success"},
		},
		func() interface{} {
			return &jsiiProxy_IPrivatelyImplemented{}
		},
	)
	_jsii_.RegisterInterface[IPublicInterface](
		"jsii-calc.IPublicInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bye", GoMethod: "Bye"},
		},
		func() interface{} {
			return &jsiiProxy_IPublicInterface{}
		},
	)
	_jsii_.RegisterInterface[IPublicInterface2](
		"jsii-calc.IPublicInterface2",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "ciao", GoMethod: "Ciao"},
		},
		func() interface{} {
			return &jsiiProxy_IPublicInterface2{}
		},
	)
	_jsii_.RegisterInterface[IRandomNumberGenerator](
		"jsii-calc.IRandomNumberGenerator",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "next", GoMethod: "Next"},
		},
		func() interface{} {
			return &jsiiProxy_IRandomNumberGenerator{}
		},
	)
	_jsii_.RegisterInterface[IReturnJsii976](
		"jsii-calc.IReturnJsii976",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "foo", GoGetter: "Foo"},
		},
		func() interface{} {
			return &jsiiProxy_IReturnJsii976{}
		},
	)
	_jsii_.RegisterInterface[IReturnsNumber](
		"jsii-calc.IReturnsNumber",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "numberProp", GoGetter: "NumberProp"},
			_jsii_.MemberMethod{JsiiMethod: "obtainNumber", GoMethod: "ObtainNumber"},
		},
		func() interface{} {
			return &jsiiProxy_IReturnsNumber{}
		},
	)
	_jsii_.RegisterInterface[IStableInterface](
		"jsii-calc.IStableInterface",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
			_jsii_.MemberProperty{JsiiProperty: "mutableProperty", GoGetter: "MutableProperty"},
		},
		func() interface{} {
			return &jsiiProxy_IStableInterface{}
		},
	)
	_jsii_.RegisterInterface[IStructReturningDelegate](
		"jsii-calc.IStructReturningDelegate",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "returnStruct", GoMethod: "ReturnStruct"},
		},
		func() interface{} {
			return &jsiiProxy_IStructReturningDelegate{}
		},
	)
	_jsii_.RegisterInterface[IWallClock](
		"jsii-calc.IWallClock",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "iso8601Now", GoMethod: "Iso8601Now"},
		},
		func() interface{} {
			return &jsiiProxy_IWallClock{}
		},
	)
	_jsii_.RegisterClass[ImplementInternalInterface](
		"jsii-calc.ImplementInternalInterface",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "prop", GoGetter: "Prop"},
		},
		func() interface{} {
			return &jsiiProxy_ImplementInternalInterface{}
		},
	)
	_jsii_.RegisterClass[Implementation](
		"jsii-calc.Implementation",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			return &jsiiProxy_Implementation{}
		},
	)
	_jsii_.RegisterClass[ImplementsInterfaceWithInternal](
		"jsii-calc.ImplementsInterfaceWithInternal",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "visible", GoMethod: "Visible"},
		},
		func() interface{} {
			j := jsiiProxy_ImplementsInterfaceWithInternal{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IInterfaceWithInternal)
			return &j
		},
	)
	_jsii_.RegisterClass[ImplementsInterfaceWithInternalSubclass](
		"jsii-calc.ImplementsInterfaceWithInternalSubclass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "visible", GoMethod: "Visible"},
		},
		func() interface{} {
			j := jsiiProxy_ImplementsInterfaceWithInternalSubclass{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_ImplementsInterfaceWithInternal)
			return &j
		},
	)
	_jsii_.RegisterClass[ImplementsPrivateInterface](
		"jsii-calc.ImplementsPrivateInterface",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "private", GoGetter: "Private"},
		},
		func() interface{} {
			return &jsiiProxy_ImplementsPrivateInterface{}
		},
	)
	_jsii_.RegisterStruct[ImplictBaseOfBase](
		"jsii-calc.ImplictBaseOfBase",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[InbetweenClass](
		"jsii-calc.InbetweenClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "ciao", GoMethod: "Ciao"},
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
		},
		func() interface{} {
			j := jsiiProxy_InbetweenClass{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_PublicClass)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IPublicInterface2)
			return &j
		},
	)
	_jsii_.RegisterClass[InterfaceCollections](
		"jsii-calc.InterfaceCollections",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_InterfaceCollections{}
		},
	)
	_jsii_.RegisterClass[InterfacesMaker](
		"jsii-calc.InterfacesMaker",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_InterfacesMaker{}
		},
	)
	_jsii_.RegisterClass[Isomorphism](
		"jsii-calc.Isomorphism",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "myself", GoMethod: "Myself"},
		},
		func() interface{} {
			return &jsiiProxy_Isomorphism{}
		},
	)
	_jsii_.RegisterClass[Issue2638](
		"jsii-calc.Issue2638",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_Issue2638{}
		},
	)
	_jsii_.RegisterClass[Issue2638B](
		"jsii-calc.Issue2638B",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_Issue2638B{}
		},
	)
	_jsii_.RegisterClass[JSII417Derived](
		"jsii-calc.JSII417Derived",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberMethod{JsiiMethod: "baz", GoMethod: "Baz"},
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
			_jsii_.MemberProperty{JsiiProperty: "hasRoot", GoGetter: "HasRoot"},
			_jsii_.MemberProperty{JsiiProperty: "property", GoGetter: "Property"},
		},
		func() interface{} {
			j := jsiiProxy_JSII417Derived{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_JSII417PublicBaseOfBase)
			return &j
		},
	)
	_jsii_.RegisterClass[JSII417PublicBaseOfBase](
		"jsii-calc.JSII417PublicBaseOfBase",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
			_jsii_.MemberProperty{JsiiProperty: "hasRoot", GoGetter: "HasRoot"},
		},
		func() interface{} {
			return &jsiiProxy_JSII417PublicBaseOfBase{}
		},
	)
	_jsii_.RegisterClass[JSObjectLiteralForInterface](
		"jsii-calc.JSObjectLiteralForInterface",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "giveMeFriendly", GoMethod: "GiveMeFriendly"},
			_jsii_.MemberMethod{JsiiMethod: "giveMeFriendlyGenerator", GoMethod: "GiveMeFriendlyGenerator"},
		},
		func() interface{} {
			return &jsiiProxy_JSObjectLiteralForInterface{}
		},
	)
	_jsii_.RegisterClass[JSObjectLiteralToNative](
		"jsii-calc.JSObjectLiteralToNative",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "returnLiteral", GoMethod: "ReturnLiteral"},
		},
		func() interface{} {
			return &jsiiProxy_JSObjectLiteralToNative{}
		},
	)
	_jsii_.RegisterClass[JSObjectLiteralToNativeClass](
		"jsii-calc.JSObjectLiteralToNativeClass",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "propA", GoGetter: "PropA"},
			_jsii_.MemberProperty{JsiiProperty: "propB", GoGetter: "PropB"},
		},
		func() interface{} {
			return &jsiiProxy_JSObjectLiteralToNativeClass{}
		},
	)
	_jsii_.RegisterClass[JavaReservedWords](
		"jsii-calc.JavaReservedWords",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "abstract", GoMethod: "Abstract"},
			_jsii_.MemberMethod{JsiiMethod: "assert", GoMethod: "Assert"},
			_jsii_.MemberMethod{JsiiMethod: "boolean", GoMethod: "Boolean"},
			_jsii_.MemberMethod{JsiiMethod: "break", GoMethod: "Break"},
			_jsii_.MemberMethod{JsiiMethod: "byte", GoMethod: "Byte"},
			_jsii_.MemberMethod{JsiiMethod: "case", GoMethod: "Case"},
			_jsii_.MemberMethod{JsiiMethod: "catch", GoMethod: "Catch"},
			_jsii_.MemberMethod{JsiiMethod: "char", GoMethod: "Char"},
			_jsii_.MemberMethod{JsiiMethod: "class", GoMethod: "Class"},
			_jsii_.MemberMethod{JsiiMethod: "const", GoMethod: "Const"},
			_jsii_.MemberMethod{JsiiMethod: "continue", GoMethod: "Continue"},
			_jsii_.MemberMethod{JsiiMethod: "default", GoMethod: "Default"},
			_jsii_.MemberMethod{JsiiMethod: "do", GoMethod: "Do"},
			_jsii_.MemberMethod{JsiiMethod: "double", GoMethod: "Double"},
			_jsii_.MemberMethod{JsiiMethod: "else", GoMethod: "Else"},
			_jsii_.MemberMethod{JsiiMethod: "enum", GoMethod: "Enum"},
			_jsii_.MemberMethod{JsiiMethod: "extends", GoMethod: "Extends"},
			_jsii_.MemberMethod{JsiiMethod: "false", GoMethod: "False"},
			_jsii_.MemberMethod{JsiiMethod: "final", GoMethod: "Final"},
			_jsii_.MemberMethod{JsiiMethod: "finally", GoMethod: "Finally"},
			_jsii_.MemberMethod{JsiiMethod: "float", GoMethod: "Float"},
			_jsii_.MemberMethod{JsiiMethod: "for", GoMethod: "For"},
			_jsii_.MemberMethod{JsiiMethod: "goto", GoMethod: "Goto"},
			_jsii_.MemberMethod{JsiiMethod: "if", GoMethod: "If"},
			_jsii_.MemberMethod{JsiiMethod: "implements", GoMethod: "Implements"},
			_jsii_.MemberMethod{JsiiMethod: "import", GoMethod: "Import"},
			_jsii_.MemberMethod{JsiiMethod: "instanceof", GoMethod: "Instanceof"},
			_jsii_.MemberMethod{JsiiMethod: "int", GoMethod: "Int"},
			_jsii_.MemberMethod{JsiiMethod: "interface", GoMethod: "Interface"},
			_jsii_.MemberMethod{JsiiMethod: "long", GoMethod: "Long"},
			_jsii_.MemberMethod{JsiiMethod: "native", GoMethod: "Native"},
			_jsii_.MemberMethod{JsiiMethod: "new", GoMethod: "New"},
			_jsii_.MemberMethod{JsiiMethod: "null", GoMethod: "Null"},
			_jsii_.MemberMethod{JsiiMethod: "package", GoMethod: "Package"},
			_jsii_.MemberMethod{JsiiMethod: "private", GoMethod: "Private"},
			_jsii_.MemberMethod{JsiiMethod: "protected", GoMethod: "Protected"},
			_jsii_.MemberMethod{JsiiMethod: "public", GoMethod: "Public"},
			_jsii_.MemberMethod{JsiiMethod: "return", GoMethod: "Return"},
			_jsii_.MemberMethod{JsiiMethod: "short", GoMethod: "Short"},
			_jsii_.MemberMethod{JsiiMethod: "static", GoMethod: "Static"},
			_jsii_.MemberMethod{JsiiMethod: "strictfp", GoMethod: "Strictfp"},
			_jsii_.MemberMethod{JsiiMethod: "super", GoMethod: "Super"},
			_jsii_.MemberMethod{JsiiMethod: "switch", GoMethod: "Switch"},
			_jsii_.MemberMethod{JsiiMethod: "synchronized", GoMethod: "Synchronized"},
			_jsii_.MemberMethod{JsiiMethod: "this", GoMethod: "This"},
			_jsii_.MemberMethod{JsiiMethod: "throw", GoMethod: "Throw"},
			_jsii_.MemberMethod{JsiiMethod: "throws", GoMethod: "Throws"},
			_jsii_.MemberMethod{JsiiMethod: "transient", GoMethod: "Transient"},
			_jsii_.MemberMethod{JsiiMethod: "true", GoMethod: "True"},
			_jsii_.MemberMethod{JsiiMethod: "try", GoMethod: "Try"},
			_jsii_.MemberMethod{JsiiMethod: "void", GoMethod: "Void"},
			_jsii_.MemberMethod{JsiiMethod: "volatile", GoMethod: "Volatile"},
			_jsii_.MemberProperty{JsiiProperty: "while", GoGetter: "While"},
		},
		func() interface{} {
			return &jsiiProxy_JavaReservedWords{}
		},
	)
	_jsii_.RegisterClass[Jsii487Derived](
		"jsii-calc.Jsii487Derived",
		nil, // no members
		func() interface{} {
			j := jsiiProxy_Jsii487Derived{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IJsii487External)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IJsii487External2)
			return &j
		},
	)
	_jsii_.RegisterClass[Jsii496Derived](
		"jsii-calc.Jsii496Derived",
		nil, // no members
		func() interface{} {
			j := jsiiProxy_Jsii496Derived{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IJsii496)
			return &j
		},
	)
	_jsii_.RegisterClass[JsiiAgent](
		"jsii-calc.JsiiAgent",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_JsiiAgent{}
		},
	)
	_jsii_.RegisterClass[JsonFormatter](
		"jsii-calc.JsonFormatter",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_JsonFormatter{}
		},
	)
	_jsii_.RegisterClass[LevelOne](
		"jsii-calc.LevelOne",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "props", GoGetter: "Props"},
		},
		func() interface{} {
			return &jsiiProxy_LevelOne{}
		},
	)
	_jsii_.RegisterStruct[LevelOne_PropBooleanValue](
		"jsii-calc.LevelOne.PropBooleanValue",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[LevelOne_PropProperty](
		"jsii-calc.LevelOne.PropProperty",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[LevelOneProps](
		"jsii-calc.LevelOneProps",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[LoadBalancedFargateServiceProps](
		"jsii-calc.LoadBalancedFargateServiceProps",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[MethodNamedProperty](
		"jsii-calc.MethodNamedProperty",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "elite", GoGetter: "Elite"},
			_jsii_.MemberMethod{JsiiMethod: "property", GoMethod: "Property"},
		},
		func() interface{} {
			return &jsiiProxy_MethodNamedProperty{}
		},
	)
	_jsii_.RegisterClass[Multiply](
		"jsii-calc.Multiply",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "farewell", GoMethod: "Farewell"},
			_jsii_.MemberMethod{JsiiMethod: "goodbye", GoMethod: "Goodbye"},
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
			_jsii_.MemberProperty{JsiiProperty: "lhs", GoGetter: "Lhs"},
			_jsii_.MemberMethod{JsiiMethod: "next", GoMethod: "Next"},
			_jsii_.MemberProperty{JsiiProperty: "rhs", GoGetter: "Rhs"},
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_Multiply{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_BinaryOperation)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IFriendlier)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IRandomNumberGenerator)
			return &j
		},
	)
	_jsii_.RegisterClass[Negate](
		"jsii-calc.Negate",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "farewell", GoMethod: "Farewell"},
			_jsii_.MemberMethod{JsiiMethod: "goodbye", GoMethod: "Goodbye"},
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
			_jsii_.MemberProperty{JsiiProperty: "operand", GoGetter: "Operand"},
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_Negate{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_UnaryOperation)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IFriendlier)
			return &j
		},
	)
	_jsii_.RegisterClass[NestedClassInstance](
		"jsii-calc.NestedClassInstance",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_NestedClassInstance{}
		},
	)
	_jsii_.RegisterStruct[NestedStruct](
		"jsii-calc.NestedStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[NodeStandardLibrary](
		"jsii-calc.NodeStandardLibrary",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "cryptoSha256", GoMethod: "CryptoSha256"},
			_jsii_.MemberMethod{JsiiMethod: "fsReadFile", GoMethod: "FsReadFile"},
			_jsii_.MemberMethod{JsiiMethod: "fsReadFileSync", GoMethod: "FsReadFileSync"},
			_jsii_.MemberProperty{JsiiProperty: "osPlatform", GoGetter: "OsPlatform"},
		},
		func() interface{} {
			return &jsiiProxy_NodeStandardLibrary{}
		},
	)
	_jsii_.RegisterClass[NullShouldBeTreatedAsUndefined](
		"jsii-calc.NullShouldBeTreatedAsUndefined",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "changeMeToUndefined", GoGetter: "ChangeMeToUndefined"},
			_jsii_.MemberMethod{JsiiMethod: "giveMeUndefined", GoMethod: "GiveMeUndefined"},
			_jsii_.MemberMethod{JsiiMethod: "giveMeUndefinedInsideAnObject", GoMethod: "GiveMeUndefinedInsideAnObject"},
			_jsii_.MemberMethod{JsiiMethod: "verifyPropertyIsUndefined", GoMethod: "VerifyPropertyIsUndefined"},
		},
		func() interface{} {
			return &jsiiProxy_NullShouldBeTreatedAsUndefined{}
		},
	)
	_jsii_.RegisterStruct[NullShouldBeTreatedAsUndefinedData](
		"jsii-calc.NullShouldBeTreatedAsUndefinedData",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[NumberGenerator](
		"jsii-calc.NumberGenerator",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "generator", GoGetter: "Generator"},
			_jsii_.MemberMethod{JsiiMethod: "isSameGenerator", GoMethod: "IsSameGenerator"},
			_jsii_.MemberMethod{JsiiMethod: "nextTimes100", GoMethod: "NextTimes100"},
		},
		func() interface{} {
			return &jsiiProxy_NumberGenerator{}
		},
	)
	_jsii_.RegisterClass[ObjectRefsInCollections](
		"jsii-calc.ObjectRefsInCollections",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "sumFromArray", GoMethod: "SumFromArray"},
			_jsii_.MemberMethod{JsiiMethod: "sumFromMap", GoMethod: "SumFromMap"},
		},
		func() interface{} {
			return &jsiiProxy_ObjectRefsInCollections{}
		},
	)
	_jsii_.RegisterClass[ObjectWithPropertyProvider](
		"jsii-calc.ObjectWithPropertyProvider",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_ObjectWithPropertyProvider{}
		},
	)
	_jsii_.RegisterClass[Old](
		"jsii-calc.Old",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "doAThing", GoMethod: "DoAThing"},
		},
		func() interface{} {
			return &jsiiProxy_Old{}
		},
	)
	_jsii_.RegisterClass[OptionalArgumentInvoker](
		"jsii-calc.OptionalArgumentInvoker",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "invokeWithOptional", GoMethod: "InvokeWithOptional"},
			_jsii_.MemberMethod{JsiiMethod: "invokeWithoutOptional", GoMethod: "InvokeWithoutOptional"},
		},
		func() interface{} {
			return &jsiiProxy_OptionalArgumentInvoker{}
		},
	)
	_jsii_.RegisterClass[OptionalConstructorArgument](
		"jsii-calc.OptionalConstructorArgument",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "arg1", GoGetter: "Arg1"},
			_jsii_.MemberProperty{JsiiProperty: "arg2", GoGetter: "Arg2"},
			_jsii_.MemberProperty{JsiiProperty: "arg3", GoGetter: "Arg3"},
		},
		func() interface{} {
			return &jsiiProxy_OptionalConstructorArgument{}
		},
	)
	_jsii_.RegisterStruct[OptionalStruct](
		"jsii-calc.OptionalStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[OptionalStructConsumer](
		"jsii-calc.OptionalStructConsumer",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "fieldValue", GoGetter: "FieldValue"},
			_jsii_.MemberProperty{JsiiProperty: "parameterWasUndefined", GoGetter: "ParameterWasUndefined"},
		},
		func() interface{} {
			return &jsiiProxy_OptionalStructConsumer{}
		},
	)
	_jsii_.RegisterClass[OverridableProtectedMember](
		"jsii-calc.OverridableProtectedMember",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "overrideMe", GoMethod: "OverrideMe"},
			_jsii_.MemberProperty{JsiiProperty: "overrideReadOnly", GoGetter: "OverrideReadOnly"},
			_jsii_.MemberProperty{JsiiProperty: "overrideReadWrite", GoGetter: "OverrideReadWrite"},
			_jsii_.MemberMethod{JsiiMethod: "switchModes", GoMethod: "SwitchModes"},
			_jsii_.MemberMethod{JsiiMethod: "valueFromProtected", GoMethod: "ValueFromProtected"},
		},
		func() interface{} {
			return &jsiiProxy_OverridableProtectedMember{}
		},
	)
	_jsii_.RegisterClass[OverrideReturnsObject](
		"jsii-calc.OverrideReturnsObject",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "test", GoMethod: "Test"},
		},
		func() interface{} {
			return &jsiiProxy_OverrideReturnsObject{}
		},
	)
	_jsii_.RegisterStruct[ParentStruct982](
		"jsii-calc.ParentStruct982",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[PartiallyInitializedThisConsumer](
		"jsii-calc.PartiallyInitializedThisConsumer",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "consumePartiallyInitializedThis", GoMethod: "ConsumePartiallyInitializedThis"},
		},
		func() interface{} {
			return &jsiiProxy_PartiallyInitializedThisConsumer{}
		},
	)
	_jsii_.RegisterClass[Polymorphism](
		"jsii-calc.Polymorphism",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "sayHello", GoMethod: "SayHello"},
		},
		func() interface{} {
			return &jsiiProxy_Polymorphism{}
		},
	)
	_jsii_.RegisterClass[Power](
		"jsii-calc.Power",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "base", GoGetter: "Base"},
			_jsii_.MemberProperty{JsiiProperty: "decorationPostfixes", GoGetter: "DecorationPostfixes"},
			_jsii_.MemberProperty{JsiiProperty: "decorationPrefixes", GoGetter: "DecorationPrefixes"},
			_jsii_.MemberProperty{JsiiProperty: "expression", GoGetter: "Expression"},
			_jsii_.MemberProperty{JsiiProperty: "pow", GoGetter: "Pow"},
			_jsii_.MemberProperty{JsiiProperty: "stringStyle", GoGetter: "StringStyle"},
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_Power{}
			_jsii_.InitJsiiProxy(&j.Type__compositionCompositeOperation)
			return &j
		},
	)
	_jsii_.RegisterClass[PropertyNamedProperty](
		"jsii-calc.PropertyNamedProperty",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "property", GoGetter: "Property"},
			_jsii_.MemberProperty{JsiiProperty: "yetAnoterOne", GoGetter: "YetAnoterOne"},
		},
		func() interface{} {
			return &jsiiProxy_PropertyNamedProperty{}
		},
	)
	_jsii_.RegisterClass[PublicClass](
		"jsii-calc.PublicClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
		},
		func() interface{} {
			return &jsiiProxy_PublicClass{}
		},
	)
	_jsii_.RegisterClass[PythonReservedWords](
		"jsii-calc.PythonReservedWords",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "and", GoMethod: "And"},
			_jsii_.MemberMethod{JsiiMethod: "as", GoMethod: "As"},
			_jsii_.MemberMethod{JsiiMethod: "assert", GoMethod: "Assert"},
			_jsii_.MemberMethod{JsiiMethod: "async", GoMethod: "Async"},
			_jsii_.MemberMethod{JsiiMethod: "await", GoMethod: "Await"},
			_jsii_.MemberMethod{JsiiMethod: "break", GoMethod: "Break"},
			_jsii_.MemberMethod{JsiiMethod: "class", GoMethod: "Class"},
			_jsii_.MemberMethod{JsiiMethod: "continue", GoMethod: "Continue"},
			_jsii_.MemberMethod{JsiiMethod: "def", GoMethod: "Def"},
			_jsii_.MemberMethod{JsiiMethod: "del", GoMethod: "Del"},
			_jsii_.MemberMethod{JsiiMethod: "elif", GoMethod: "Elif"},
			_jsii_.MemberMethod{JsiiMethod: "else", GoMethod: "Else"},
			_jsii_.MemberMethod{JsiiMethod: "except", GoMethod: "Except"},
			_jsii_.MemberMethod{JsiiMethod: "finally", GoMethod: "Finally"},
			_jsii_.MemberMethod{JsiiMethod: "for", GoMethod: "For"},
			_jsii_.MemberMethod{JsiiMethod: "from", GoMethod: "From"},
			_jsii_.MemberMethod{JsiiMethod: "global", GoMethod: "Global"},
			_jsii_.MemberMethod{JsiiMethod: "if", GoMethod: "If"},
			_jsii_.MemberMethod{JsiiMethod: "import", GoMethod: "Import"},
			_jsii_.MemberMethod{JsiiMethod: "in", GoMethod: "In"},
			_jsii_.MemberMethod{JsiiMethod: "is", GoMethod: "Is"},
			_jsii_.MemberMethod{JsiiMethod: "lambda", GoMethod: "Lambda"},
			_jsii_.MemberMethod{JsiiMethod: "nonlocal", GoMethod: "Nonlocal"},
			_jsii_.MemberMethod{JsiiMethod: "not", GoMethod: "Not"},
			_jsii_.MemberMethod{JsiiMethod: "or", GoMethod: "Or"},
			_jsii_.MemberMethod{JsiiMethod: "pass", GoMethod: "Pass"},
			_jsii_.MemberMethod{JsiiMethod: "raise", GoMethod: "Raise"},
			_jsii_.MemberMethod{JsiiMethod: "return", GoMethod: "Return"},
			_jsii_.MemberMethod{JsiiMethod: "try", GoMethod: "Try"},
			_jsii_.MemberMethod{JsiiMethod: "while", GoMethod: "While"},
			_jsii_.MemberMethod{JsiiMethod: "with", GoMethod: "With"},
			_jsii_.MemberMethod{JsiiMethod: "yield", GoMethod: "Yield"},
		},
		func() interface{} {
			return &jsiiProxy_PythonReservedWords{}
		},
	)
	_jsii_.RegisterClass[ReferenceEnumFromScopedPackage](
		"jsii-calc.ReferenceEnumFromScopedPackage",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "foo", GoGetter: "Foo"},
			_jsii_.MemberMethod{JsiiMethod: "loadFoo", GoMethod: "LoadFoo"},
			_jsii_.MemberMethod{JsiiMethod: "saveFoo", GoMethod: "SaveFoo"},
		},
		func() interface{} {
			return &jsiiProxy_ReferenceEnumFromScopedPackage{}
		},
	)
	_jsii_.RegisterClass[ReturnsPrivateImplementationOfInterface](
		"jsii-calc.ReturnsPrivateImplementationOfInterface",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "privateImplementation", GoGetter: "PrivateImplementation"},
		},
		func() interface{} {
			return &jsiiProxy_ReturnsPrivateImplementationOfInterface{}
		},
	)
	_jsii_.RegisterStruct[RootStruct](
		"jsii-calc.RootStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[RootStructValidator](
		"jsii-calc.RootStructValidator",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_RootStructValidator{}
		},
	)
	_jsii_.RegisterClass[RuntimeTypeChecking](
		"jsii-calc.RuntimeTypeChecking",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "methodWithDefaultedArguments", GoMethod: "MethodWithDefaultedArguments"},
			_jsii_.MemberMethod{JsiiMethod: "methodWithOptionalAnyArgument", GoMethod: "MethodWithOptionalAnyArgument"},
			_jsii_.MemberMethod{JsiiMethod: "methodWithOptionalArguments", GoMethod: "MethodWithOptionalArguments"},
		},
		func() interface{} {
			return &jsiiProxy_RuntimeTypeChecking{}
		},
	)
	_jsii_.RegisterStruct[SecondLevelStruct](
		"jsii-calc.SecondLevelStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[SingleInstanceTwoTypes](
		"jsii-calc.SingleInstanceTwoTypes",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "interface1", GoMethod: "Interface1"},
			_jsii_.MemberMethod{JsiiMethod: "interface2", GoMethod: "Interface2"},
		},
		func() interface{} {
			return &jsiiProxy_SingleInstanceTwoTypes{}
		},
	)
	_jsii_.RegisterClass[SingletonInt](
		"jsii-calc.SingletonInt",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "isSingletonInt", GoMethod: "IsSingletonInt"},
		},
		func() interface{} {
			return &jsiiProxy_SingletonInt{}
		},
	)
	_jsii_.RegisterEnum[SingletonIntEnum](
		"jsii-calc.SingletonIntEnum",
		_init_.Initialize,
		map[string]interface{}{
			"SINGLETON_INT": SingletonIntEnum_SINGLETON_INT,
		},
	)
	_jsii_.RegisterClass[SingletonString](
		"jsii-calc.SingletonString",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "isSingletonString", GoMethod: "IsSingletonString"},
		},
		func() interface{} {
			return &jsiiProxy_SingletonString{}
		},
	)
	_jsii_.RegisterEnum[SingletonStringEnum](
		"jsii-calc.SingletonStringEnum",
		_init_.Initialize,
		map[string]interface{}{
			"SINGLETON_STRING": SingletonStringEnum_SINGLETON_STRING,
		},
	)
	_jsii_.RegisterStruct[SmellyStruct](
		"jsii-calc.SmellyStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[SomeTypeJsii976](
		"jsii-calc.SomeTypeJsii976",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_SomeTypeJsii976{}
		},
	)
	_jsii_.RegisterClass[StableClass](
		"jsii-calc.StableClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
			_jsii_.MemberProperty{JsiiProperty: "mutableProperty", GoGetter: "MutableProperty"},
			_jsii_.MemberProperty{JsiiProperty: "readonlyProperty", GoGetter: "ReadonlyProperty"},
		},
		func() interface{} {
			return &jsiiProxy_StableClass{}
		},
	)
	_jsii_.RegisterEnum[StableEnum](
		"jsii-calc.StableEnum",
		_init_.Initialize,
		map[string]interface{}{
			"OPTION_A": StableEnum_OPTION_A,
			"OPTION_B": StableEnum_OPTION_B,
		},
	)
	_jsii_.RegisterStruct[StableStruct](
		"jsii-calc.StableStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[StaticContext](
		"jsii-calc.StaticContext",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_StaticContext{}
		},
	)
	_jsii_.RegisterClass[StaticHelloChild](
		"jsii-calc.StaticHelloChild",
		nil, // no members
		func() interface{} {
			j := jsiiProxy_StaticHelloChild{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_StaticHelloParent)
			return &j
		},
	)
	_jsii_.RegisterClass[StaticHelloParent](
		"jsii-calc.StaticHelloParent",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_StaticHelloParent{}
		},
	)
	_jsii_.RegisterClass[Statics](
		"jsii-calc.Statics",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "justMethod", GoMethod: "JustMethod"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			return &jsiiProxy_Statics{}
		},
	)
	_jsii_.RegisterEnum[StringEnum](
		"jsii-calc.StringEnum",
		_init_.Initialize,
		map[string]interface{}{
			"A": StringEnum_A,
			"B": StringEnum_B,
			"C": StringEnum_C,
		},
	)
	_jsii_.RegisterClass[StripInternal](
		"jsii-calc.StripInternal",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "youSeeMe", GoGetter: "YouSeeMe"},
		},
		func() interface{} {
			return &jsiiProxy_StripInternal{}
		},
	)
	_jsii_.RegisterStruct[StructA](
		"jsii-calc.StructA",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[StructB](
		"jsii-calc.StructB",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[StructParameterType](
		"jsii-calc.StructParameterType",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[StructPassing](
		"jsii-calc.StructPassing",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_StructPassing{}
		},
	)
	_jsii_.RegisterClass[StructUnionConsumer](
		"jsii-calc.StructUnionConsumer",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_StructUnionConsumer{}
		},
	)
	_jsii_.RegisterStruct[StructWithEnum](
		"jsii-calc.StructWithEnum",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[StructWithJavaReservedWords](
		"jsii-calc.StructWithJavaReservedWords",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[Sum](
		"jsii-calc.Sum",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "decorationPostfixes", GoGetter: "DecorationPostfixes"},
			_jsii_.MemberProperty{JsiiProperty: "decorationPrefixes", GoGetter: "DecorationPrefixes"},
			_jsii_.MemberProperty{JsiiProperty: "expression", GoGetter: "Expression"},
			_jsii_.MemberProperty{JsiiProperty: "parts", GoGetter: "Parts"},
			_jsii_.MemberProperty{JsiiProperty: "stringStyle", GoGetter: "StringStyle"},
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_Sum{}
			_jsii_.InitJsiiProxy(&j.Type__compositionCompositeOperation)
			return &j
		},
	)
	_jsii_.RegisterClass[SupportsNiceJavaBuilder](
		"jsii-calc.SupportsNiceJavaBuilder",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "bar", GoGetter: "Bar"},
			_jsii_.MemberProperty{JsiiProperty: "id", GoGetter: "Id"},
			_jsii_.MemberProperty{JsiiProperty: "propId", GoGetter: "PropId"},
			_jsii_.MemberProperty{JsiiProperty: "rest", GoGetter: "Rest"},
		},
		func() interface{} {
			j := jsiiProxy_SupportsNiceJavaBuilder{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_SupportsNiceJavaBuilderWithRequiredProps)
			return &j
		},
	)
	_jsii_.RegisterStruct[SupportsNiceJavaBuilderProps](
		"jsii-calc.SupportsNiceJavaBuilderProps",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[SupportsNiceJavaBuilderWithRequiredProps](
		"jsii-calc.SupportsNiceJavaBuilderWithRequiredProps",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "bar", GoGetter: "Bar"},
			_jsii_.MemberProperty{JsiiProperty: "id", GoGetter: "Id"},
			_jsii_.MemberProperty{JsiiProperty: "propId", GoGetter: "PropId"},
		},
		func() interface{} {
			return &jsiiProxy_SupportsNiceJavaBuilderWithRequiredProps{}
		},
	)
	_jsii_.RegisterClass[SyncVirtualMethods](
		"jsii-calc.SyncVirtualMethods",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "a", GoGetter: "A"},
			_jsii_.MemberMethod{JsiiMethod: "callerIsAsync", GoMethod: "CallerIsAsync"},
			_jsii_.MemberMethod{JsiiMethod: "callerIsMethod", GoMethod: "CallerIsMethod"},
			_jsii_.MemberProperty{JsiiProperty: "callerIsProperty", GoGetter: "CallerIsProperty"},
			_jsii_.MemberMethod{JsiiMethod: "modifyOtherProperty", GoMethod: "ModifyOtherProperty"},
			_jsii_.MemberMethod{JsiiMethod: "modifyValueOfTheProperty", GoMethod: "ModifyValueOfTheProperty"},
			_jsii_.MemberProperty{JsiiProperty: "otherProperty", GoGetter: "OtherProperty"},
			_jsii_.MemberMethod{JsiiMethod: "readA", GoMethod: "ReadA"},
			_jsii_.MemberProperty{JsiiProperty: "readonlyProperty", GoGetter: "ReadonlyProperty"},
			_jsii_.MemberMethod{JsiiMethod: "retrieveOtherProperty", GoMethod: "RetrieveOtherProperty"},
			_jsii_.MemberMethod{JsiiMethod: "retrieveReadOnlyProperty", GoMethod: "RetrieveReadOnlyProperty"},
			_jsii_.MemberMethod{JsiiMethod: "retrieveValueOfTheProperty", GoMethod: "RetrieveValueOfTheProperty"},
			_jsii_.MemberProperty{JsiiProperty: "theProperty", GoGetter: "TheProperty"},
			_jsii_.MemberProperty{JsiiProperty: "valueOfOtherProperty", GoGetter: "ValueOfOtherProperty"},
			_jsii_.MemberMethod{JsiiMethod: "virtualMethod", GoMethod: "VirtualMethod"},
			_jsii_.MemberMethod{JsiiMethod: "writeA", GoMethod: "WriteA"},
		},
		func() interface{} {
			return &jsiiProxy_SyncVirtualMethods{}
		},
	)
	_jsii_.RegisterClass[TestStructWithEnum](
		"jsii-calc.TestStructWithEnum",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "isStringEnumA", GoMethod: "IsStringEnumA"},
			_jsii_.MemberMethod{JsiiMethod: "isStringEnumB", GoMethod: "IsStringEnumB"},
			_jsii_.MemberProperty{JsiiProperty: "structWithFoo", GoGetter: "StructWithFoo"},
			_jsii_.MemberProperty{JsiiProperty: "structWithFooBar", GoGetter: "StructWithFooBar"},
		},
		func() interface{} {
			return &jsiiProxy_TestStructWithEnum{}
		},
	)
	_jsii_.RegisterClass[Thrower](
		"jsii-calc.Thrower",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "throwError", GoMethod: "ThrowError"},
		},
		func() interface{} {
			return &jsiiProxy_Thrower{}
		},
	)
	_jsii_.RegisterStruct[TopLevelStruct](
		"jsii-calc.TopLevelStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[TwoMethodsWithSimilarCapitalization](
		"jsii-calc.TwoMethodsWithSimilarCapitalization",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "fooBar", GoGetter: "FooBar"},
			_jsii_.MemberProperty{JsiiProperty: "fooBAR", GoGetter: "FooBAR"},
			_jsii_.MemberMethod{JsiiMethod: "toIsoString", GoMethod: "ToIsoString"},
			_jsii_.MemberMethod{JsiiMethod: "toIsOString", GoMethod: "ToIsOString"},
			_jsii_.MemberMethod{JsiiMethod: "toISOString", GoMethod: "ToISOString"},
		},
		func() interface{} {
			return &jsiiProxy_TwoMethodsWithSimilarCapitalization{}
		},
	)
	_jsii_.RegisterClass[UmaskCheck](
		"jsii-calc.UmaskCheck",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_UmaskCheck{}
		},
	)
	_jsii_.RegisterClass[UnaryOperation](
		"jsii-calc.UnaryOperation",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "operand", GoGetter: "Operand"},
			_jsii_.MemberMethod{JsiiMethod: "toString", GoMethod: "ToString"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
			_jsii_.MemberProperty{JsiiProperty: "value", GoGetter: "Value"},
		},
		func() interface{} {
			j := jsiiProxy_UnaryOperation{}
			_jsii_.InitJsiiProxy(&j.Type__scopejsiicalclibOperation)
			return &j
		},
	)
	_jsii_.RegisterStruct[UnionProperties](
		"jsii-calc.UnionProperties",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[UpcasingReflectable](
		"jsii-calc.UpcasingReflectable",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "entries", GoGetter: "Entries"},
		},
		func() interface{} {
			j := jsiiProxy_UpcasingReflectable{}
			_jsii_.InitJsiiProxy(&j.Type__customsubmodulenameIReflectable)
			return &j
		},
	)
	_jsii_.RegisterClass[UseBundledDependency](
		"jsii-calc.UseBundledDependency",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "value", GoMethod: "Value"},
		},
		func() interface{} {
			return &jsiiProxy_UseBundledDependency{}
		},
	)
	_jsii_.RegisterClass[UseCalcBase](
		"jsii-calc.UseCalcBase",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
		},
		func() interface{} {
			return &jsiiProxy_UseCalcBase{}
		},
	)
	_jsii_.RegisterClass[UsesInterfaceWithProperties](
		"jsii-calc.UsesInterfaceWithProperties",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "justRead", GoMethod: "JustRead"},
			_jsii_.MemberProperty{JsiiProperty: "obj", GoGetter: "Obj"},
			_jsii_.MemberMethod{JsiiMethod: "readStringAndNumber", GoMethod: "ReadStringAndNumber"},
			_jsii_.MemberMethod{JsiiMethod: "writeAndRead", GoMethod: "WriteAndRead"},
		},
		func() interface{} {
			return &jsiiProxy_UsesInterfaceWithProperties{}
		},
	)
	_jsii_.RegisterClass[VariadicInvoker](
		"jsii-calc.VariadicInvoker",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "asArray", GoMethod: "AsArray"},
		},
		func() interface{} {
			return &jsiiProxy_VariadicInvoker{}
		},
	)
	_jsii_.RegisterClass[VariadicMethod](
		"jsii-calc.VariadicMethod",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "asArray", GoMethod: "AsArray"},
		},
		func() interface{} {
			return &jsiiProxy_VariadicMethod{}
		},
	)
	_jsii_.RegisterClass[VirtualMethodPlayground](
		"jsii-calc.VirtualMethodPlayground",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "overrideMeAsync", GoMethod: "OverrideMeAsync"},
			_jsii_.MemberMethod{JsiiMethod: "overrideMeSync", GoMethod: "OverrideMeSync"},
			_jsii_.MemberMethod{JsiiMethod: "parallelSumAsync", GoMethod: "ParallelSumAsync"},
			_jsii_.MemberMethod{JsiiMethod: "serialSumAsync", GoMethod: "SerialSumAsync"},
			_jsii_.MemberMethod{JsiiMethod: "sumSync", GoMethod: "SumSync"},
		},
		func() interface{} {
			return &jsiiProxy_VirtualMethodPlayground{}
		},
	)
	_jsii_.RegisterClass[VoidCallback](
		"jsii-calc.VoidCallback",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "callMe", GoMethod: "CallMe"},
			_jsii_.MemberProperty{JsiiProperty: "methodWasCalled", GoGetter: "MethodWasCalled"},
			_jsii_.MemberMethod{JsiiMethod: "overrideMe", GoMethod: "OverrideMe"},
		},
		func() interface{} {
			return &jsiiProxy_VoidCallback{}
		},
	)
	_jsii_.RegisterClass[WithPrivatePropertyInConstructor](
		"jsii-calc.WithPrivatePropertyInConstructor",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "success", GoGetter: "Success"},
		},
		func() interface{} {
			return &jsiiProxy_WithPrivatePropertyInConstructor{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2530/module2530.go 1`] = `
package module2530

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

// Verifies a method with parameters "_" can be generated.
// See: https://github.com/aws/jsii/issues/2530
//
type MyClass interface {
	Foo(_arg _api_.String)
}

// The jsii proxy struct for MyClass
type jsiiProxy_MyClass struct {
	_ byte // padding
}

func NewMyClass(_arg _api_.Number) MyClass {
	_init_.Initialize()

	j := jsiiProxy_MyClass{}

	_jsii_.Create(
		"jsii-calc.module2530.MyClass",
		[]interface{}{_arg},
		&j,
	)

	return &j
}

func NewMyClass_Override(m MyClass, _arg _api_.Number) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2530.MyClass",
		[]interface{}{_arg},
		m,
	)
}

func MyClass_Bar(_arg _api_.Bool) {
	_init_.Initialize()

	_jsii_.StaticInvokeVoid(
		"jsii-calc.module2530.MyClass",
		"bar",
		[]interface{}{_arg},
	)
}

func (m *jsiiProxy_MyClass) Foo(_arg _api_.String) {
	_jsii_.InvokeVoid(
		m,
		"foo",
		[]interface{}{_arg},
	)
}

// FromOption__ unwraps an MyClass from an Option[MyClass].
// You should never need to call this method directly.
func (j jsiiProxy_MyClass) FromOption__() MyClass {
	var j_ MyClass = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2530/module2530.init.go 1`] = `
package module2530

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[MyClass](
		"jsii-calc.module2530.MyClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
		},
		func() interface{} {
			return &jsiiProxy_MyClass{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2617/module2617.go 1`] = `
package module2617

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

type OnlyStatics interface {
}

// The jsii proxy struct for OnlyStatics
type jsiiProxy_OnlyStatics struct {
	_ byte // padding
}

func OnlyStatics_Bar() {
	_init_.Initialize()

	_jsii_.StaticInvokeVoid(
		"jsii-calc.module2617.OnlyStatics",
		"bar",
		nil, // no parameters
	)
}

func OnlyStatics_Foo() {
	_init_.Initialize()

	_jsii_.StaticInvokeVoid(
		"jsii-calc.module2617.OnlyStatics",
		"foo",
		nil, // no parameters
	)
}

// FromOption__ unwraps an OnlyStatics from an Option[OnlyStatics].
// You should never need to call this method directly.
func (j jsiiProxy_OnlyStatics) FromOption__() OnlyStatics {
	var j_ OnlyStatics = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2617/module2617.init.go 1`] = `
package module2617

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[OnlyStatics](
		"jsii-calc.module2617.OnlyStatics",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_OnlyStatics{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2647/internal/types.go 1`] = `
package internal
import (
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib"
)
type Type__scopejsiicalclibBaseFor2647 = scopejsiicalclib.BaseFor2647
type Type__scopejsiicalclibIFriendly = scopejsiicalclib.IFriendly

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2647/module2647.go 1`] = `
package module2647

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jcb"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/module2647/internal"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalcbaseofbase/v2"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib"
)

// This class falls into the category of "multiple bases" from a different module from a go code gen perspective.
// See: https://github.com/aws/jsii/issues/2647
//
type ExtendAndImplement interface {
	scopejsiicalclib.BaseFor2647
	scopejsiicalclib.IFriendly
	Foo(obj jcb.IBaseInterface)
	Hello() _api_.String
	LocalMethod() _api_.String
}

// The jsii proxy struct for ExtendAndImplement
type jsiiProxy_ExtendAndImplement struct {
	internal.Type__scopejsiicalclibBaseFor2647
	internal.Type__scopejsiicalclibIFriendly
}

// Deprecated.
func NewExtendAndImplement(very scopejsiicalcbaseofbase.Very) ExtendAndImplement {
	_init_.Initialize()

	if very == nil { panic("Parameters \\"very\\" is required (received nil)") }
	j := jsiiProxy_ExtendAndImplement{}

	_jsii_.Create(
		"jsii-calc.module2647.ExtendAndImplement",
		[]interface{}{very},
		&j,
	)

	return &j
}

// Deprecated.
func NewExtendAndImplement_Override(e ExtendAndImplement, very scopejsiicalcbaseofbase.Very) {
	_init_.Initialize()

	if very == nil { panic("Parameters \\"very\\" is required (received nil)") }
	_jsii_.Create(
		"jsii-calc.module2647.ExtendAndImplement",
		[]interface{}{very},
		e,
	)
}

// Deprecated.
func (e *jsiiProxy_ExtendAndImplement) Foo(obj jcb.IBaseInterface) {
	if obj == nil { panic("Parameters \\"obj\\" is required (received nil)") }
	_jsii_.InvokeVoid(
		e,
		"foo",
		[]interface{}{obj},
	)
}

// (deprecated) Say hello!
func (e *jsiiProxy_ExtendAndImplement) Hello() _api_.String {
	return _jsii_.Invoke[_api_.String](
		e,
		"hello",
		nil, // no parameters
	)
}

func (e *jsiiProxy_ExtendAndImplement) LocalMethod() _api_.String {
	return _jsii_.Invoke[_api_.String](
		e,
		"localMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an ExtendAndImplement from an Option[ExtendAndImplement].
// You should never need to call this method directly.
func (j jsiiProxy_ExtendAndImplement) FromOption__() ExtendAndImplement {
	var j_ ExtendAndImplement = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2647/module2647.init.go 1`] = `
package module2647

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[ExtendAndImplement](
		"jsii-calc.module2647.ExtendAndImplement",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
			_jsii_.MemberMethod{JsiiMethod: "hello", GoMethod: "Hello"},
			_jsii_.MemberMethod{JsiiMethod: "localMethod", GoMethod: "LocalMethod"},
		},
		func() interface{} {
			j := jsiiProxy_ExtendAndImplement{}
			_jsii_.InitJsiiProxy(&j.Type__scopejsiicalclibBaseFor2647)
			_jsii_.InitJsiiProxy(&j.Type__scopejsiicalclibIFriendly)
			return &j
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2689/methods/methods.go 1`] = `
package methods

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jcb"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib"
)

type MyClass interface {
	Bar(_bar _api_.Map[jcb.BaseProps])
	Foo(_values _api_.Slice[scopejsiicalclib.Number])
}

// The jsii proxy struct for MyClass
type jsiiProxy_MyClass struct {
	_ byte // padding
}

func NewMyClass() MyClass {
	_init_.Initialize()

	j := jsiiProxy_MyClass{}

	_jsii_.Create(
		"jsii-calc.module2689.methods.MyClass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewMyClass_Override(m MyClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2689.methods.MyClass",
		nil, // no parameters
		m,
	)
}

func (m *jsiiProxy_MyClass) Bar(_bar _api_.Map[jcb.BaseProps]) {
	_jsii_.InvokeVoid(
		m,
		"bar",
		[]interface{}{_bar},
	)
}

func (m *jsiiProxy_MyClass) Foo(_values _api_.Slice[scopejsiicalclib.Number]) {
	_jsii_.InvokeVoid(
		m,
		"foo",
		[]interface{}{_values},
	)
}

// FromOption__ unwraps an MyClass from an Option[MyClass].
// You should never need to call this method directly.
func (j jsiiProxy_MyClass) FromOption__() MyClass {
	var j_ MyClass = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2689/methods/methods.init.go 1`] = `
package methods

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[MyClass](
		"jsii-calc.module2689.methods.MyClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
		},
		func() interface{} {
			return &jsiiProxy_MyClass{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2689/module2689.go 1`] = `
package module2689



`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2689/props/props.go 1`] = `
package props

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jcb"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib"
)

type MyClass interface {
	Bar() _api_.Map[jcb.BaseProps]
	Foo() _api_.Slice[scopejsiicalclib.Number]
}

// The jsii proxy struct for MyClass
type jsiiProxy_MyClass struct {
	_ byte // padding
}

func (j *jsiiProxy_MyClass) Bar() _api_.Map[jcb.BaseProps] {
	return _jsii_.Get[_api_.Map[jcb.BaseProps]](
		j,
		"bar",
	)
}

func (j *jsiiProxy_MyClass) Foo() _api_.Slice[scopejsiicalclib.Number] {
	return _jsii_.Get[_api_.Slice[scopejsiicalclib.Number]](
		j,
		"foo",
	)
}


func NewMyClass() MyClass {
	_init_.Initialize()

	j := jsiiProxy_MyClass{}

	_jsii_.Create(
		"jsii-calc.module2689.props.MyClass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewMyClass_Override(m MyClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2689.props.MyClass",
		nil, // no parameters
		m,
	)
}

// FromOption__ unwraps an MyClass from an Option[MyClass].
// You should never need to call this method directly.
func (j jsiiProxy_MyClass) FromOption__() MyClass {
	var j_ MyClass = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2689/props/props.init.go 1`] = `
package props

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[MyClass](
		"jsii-calc.module2689.props.MyClass",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "bar", GoGetter: "Bar"},
			_jsii_.MemberProperty{JsiiProperty: "foo", GoGetter: "Foo"},
		},
		func() interface{} {
			return &jsiiProxy_MyClass{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2689/retval/retval.go 1`] = `
package retval

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jcb"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib"
)

type MyClass interface {
	Bar() _api_.Map[jcb.BaseProps]
	Foo() _api_.Slice[scopejsiicalclib.Number]
}

// The jsii proxy struct for MyClass
type jsiiProxy_MyClass struct {
	_ byte // padding
}

func NewMyClass() MyClass {
	_init_.Initialize()

	j := jsiiProxy_MyClass{}

	_jsii_.Create(
		"jsii-calc.module2689.retval.MyClass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewMyClass_Override(m MyClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2689.retval.MyClass",
		nil, // no parameters
		m,
	)
}

func (m *jsiiProxy_MyClass) Bar() _api_.Map[jcb.BaseProps] {
	return _jsii_.Invoke[_api_.Map[jcb.BaseProps]](
		m,
		"bar",
		nil, // no parameters
	)
}

func (m *jsiiProxy_MyClass) Foo() _api_.Slice[scopejsiicalclib.Number] {
	return _jsii_.Invoke[_api_.Slice[scopejsiicalclib.Number]](
		m,
		"foo",
		nil, // no parameters
	)
}

// FromOption__ unwraps an MyClass from an Option[MyClass].
// You should never need to call this method directly.
func (j jsiiProxy_MyClass) FromOption__() MyClass {
	var j_ MyClass = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2689/retval/retval.init.go 1`] = `
package retval

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[MyClass](
		"jsii-calc.module2689.retval.MyClass",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
		},
		func() interface{} {
			return &jsiiProxy_MyClass{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2689/structs/structs.go 1`] = `
package structs

import (
	"github.com/aws/jsii/jsii-calc/go/jcb"
	"github.com/aws/jsii/jsii-calc/go/scopejsiicalclib"
)

type MyStruct struct {
	BaseMap _api_.Map[jcb.BaseProps] \`json:"baseMap"\`
	Numbers _api_.Slice[scopejsiicalclib.Number] \`json:"numbers"\`
}

// FromOption__ unwraps an MyStruct from an Option[MyStruct].
// You should never need to call this method directly.
func (m MyStruct) FromOption__() MyStruct {
	return m
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2689/structs/structs.init.go 1`] = `
package structs

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterStruct[MyStruct](
		"jsii-calc.module2689.structs.MyStruct",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2692/module2692.go 1`] = `
package module2692



`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2692/submodule1/submodule1.go 1`] = `
package submodule1

import (
	_api_ "github.com/aws/jsii-runtime-go"
)

type Bar struct {
	Bar1 _api_.String \`json:"bar1"\`
}

// FromOption__ unwraps an Bar from an Option[Bar].
// You should never need to call this method directly.
func (b Bar) FromOption__() Bar {
	return b
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2692/submodule1/submodule1.init.go 1`] = `
package submodule1

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterStruct[Bar](
		"jsii-calc.module2692.submodule1.Bar",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2692/submodule2/submodule2.go 1`] = `
package submodule2

import (
	_api_ "github.com/aws/jsii-runtime-go"
)

type Bar struct {
	Bar2 _api_.String \`json:"bar2"\`
}

// FromOption__ unwraps an Bar from an Option[Bar].
// You should never need to call this method directly.
func (b Bar) FromOption__() Bar {
	return b
}

type Foo struct {
	Bar2 _api_.String \`json:"bar2"\`
	Bar1 _api_.String \`json:"bar1"\`
	Foo2 _api_.String \`json:"foo2"\`
}

// FromOption__ unwraps an Foo from an Option[Foo].
// You should never need to call this method directly.
func (f Foo) FromOption__() Foo {
	return f
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2692/submodule2/submodule2.init.go 1`] = `
package submodule2

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterStruct[Bar](
		"jsii-calc.module2692.submodule2.Bar",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[Foo](
		"jsii-calc.module2692.submodule2.Foo",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2700/module2700.go 1`] = `
package module2700

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

type Base interface {
	IFoo
	Baz() _api_.Number
	Bar() _api_.String
}

// The jsii proxy struct for Base
type jsiiProxy_Base struct {
	jsiiProxy_IFoo
}

func (j *jsiiProxy_Base) Baz() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"baz",
	)
}


func NewBase() Base {
	_init_.Initialize()

	j := jsiiProxy_Base{}

	_jsii_.Create(
		"jsii-calc.module2700.Base",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewBase_Override(b Base) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2700.Base",
		nil, // no parameters
		b,
	)
}

func (b *jsiiProxy_Base) Bar() _api_.String {
	return _jsii_.Invoke[_api_.String](
		b,
		"bar",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Base from an Option[Base].
// You should never need to call this method directly.
func (j jsiiProxy_Base) FromOption__() Base {
	var j_ Base = &j
	return j_
}

type Derived interface {
	Base
	IFoo
	Baz() _api_.Number
	Bar() _api_.String
	Zoo() _api_.String
}

// The jsii proxy struct for Derived
type jsiiProxy_Derived struct {
	jsiiProxy_Base
	jsiiProxy_IFoo
}

func (j *jsiiProxy_Derived) Baz() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"baz",
	)
}


func NewDerived() Derived {
	_init_.Initialize()

	j := jsiiProxy_Derived{}

	_jsii_.Create(
		"jsii-calc.module2700.Derived",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewDerived_Override(d Derived) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2700.Derived",
		nil, // no parameters
		d,
	)
}

func (d *jsiiProxy_Derived) Bar() _api_.String {
	return _jsii_.Invoke[_api_.String](
		d,
		"bar",
		nil, // no parameters
	)
}

func (d *jsiiProxy_Derived) Zoo() _api_.String {
	return _jsii_.Invoke[_api_.String](
		d,
		"zoo",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Derived from an Option[Derived].
// You should never need to call this method directly.
func (j jsiiProxy_Derived) FromOption__() Derived {
	var j_ Derived = &j
	return j_
}

type IFoo interface {
	Bar() _api_.String
	Baz() _api_.Number
}

// The jsii proxy for IFoo
type jsiiProxy_IFoo struct {
	_ byte // padding
}

func (i *jsiiProxy_IFoo) Bar() _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"bar",
		nil, // no parameters
	)
}

func (j *jsiiProxy_IFoo) Baz() _api_.Number {
	return _jsii_.Get[_api_.Number](
		j,
		"baz",
	)
}

// FromOption__ unwraps an IFoo from an Option[IFoo].
// You should never need to call this method directly.
func (j jsiiProxy_IFoo) FromOption__() IFoo {
	var j_ IFoo = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2700/module2700.init.go 1`] = `
package module2700

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterClass[Base](
		"jsii-calc.module2700.Base",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberProperty{JsiiProperty: "baz", GoGetter: "Baz"},
		},
		func() interface{} {
			j := jsiiProxy_Base{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IFoo)
			return &j
		},
	)
	_jsii_.RegisterClass[Derived](
		"jsii-calc.module2700.Derived",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberProperty{JsiiProperty: "baz", GoGetter: "Baz"},
			_jsii_.MemberMethod{JsiiMethod: "zoo", GoMethod: "Zoo"},
		},
		func() interface{} {
			j := jsiiProxy_Derived{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_Base)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IFoo)
			return &j
		},
	)
	_jsii_.RegisterInterface[IFoo](
		"jsii-calc.module2700.IFoo",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberProperty{JsiiProperty: "baz", GoGetter: "Baz"},
		},
		func() interface{} {
			return &jsiiProxy_IFoo{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2702/internal/types.go 1`] = `
package internal
import (
	"github.com/aws/jsii/jsii-calc/go/jcb"
)
type Type__jcbBase = jcb.Base
type Type__jcbIBaseInterface = jcb.IBaseInterface

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2702/module2702.go 1`] = `
package module2702

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jcb"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/module2702/internal"
)

type Baz interface {
	Class3
	IBaz
	Bar()
	BazMethod()
	Foo()
	IBaseInterface()
}

// The jsii proxy struct for Baz
type jsiiProxy_Baz struct {
	jsiiProxy_Class3
	jsiiProxy_IBaz
}

func NewBaz() Baz {
	_init_.Initialize()

	j := jsiiProxy_Baz{}

	_jsii_.Create(
		"jsii-calc.module2702.Baz",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewBaz_Override(b Baz) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2702.Baz",
		nil, // no parameters
		b,
	)
}

func (b *jsiiProxy_Baz) Bar() {
	_jsii_.InvokeVoid(
		b,
		"bar",
		nil, // no parameters
	)
}

func (b *jsiiProxy_Baz) BazMethod() {
	_jsii_.InvokeVoid(
		b,
		"bazMethod",
		nil, // no parameters
	)
}

func (b *jsiiProxy_Baz) Foo() {
	_jsii_.InvokeVoid(
		b,
		"foo",
		nil, // no parameters
	)
}

func (b *jsiiProxy_Baz) IBaseInterface() {
	_jsii_.InvokeVoid(
		b,
		"iBaseInterface",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Baz from an Option[Baz].
// You should never need to call this method directly.
func (j jsiiProxy_Baz) FromOption__() Baz {
	var j_ Baz = &j
	return j_
}

type Class1 interface {
	jcb.Base
	Base()
	TypeName() interface{}
}

// The jsii proxy struct for Class1
type jsiiProxy_Class1 struct {
	internal.Type__jcbBase
}

func NewClass1() Class1 {
	_init_.Initialize()

	j := jsiiProxy_Class1{}

	_jsii_.Create(
		"jsii-calc.module2702.Class1",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewClass1_Override(c Class1) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2702.Class1",
		nil, // no parameters
		c,
	)
}

func (c *jsiiProxy_Class1) Base() {
	_jsii_.InvokeVoid(
		c,
		"base",
		nil, // no parameters
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (c *jsiiProxy_Class1) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		c,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Class1 from an Option[Class1].
// You should never need to call this method directly.
func (j jsiiProxy_Class1) FromOption__() Class1 {
	var j_ Class1 = &j
	return j_
}

type Class2 interface {
	jcb.Base
	Base() _api_.String
	TypeName() interface{}
}

// The jsii proxy struct for Class2
type jsiiProxy_Class2 struct {
	internal.Type__jcbBase
}

func (j *jsiiProxy_Class2) Base() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"base",
	)
}


func NewClass2() Class2 {
	_init_.Initialize()

	j := jsiiProxy_Class2{}

	_jsii_.Create(
		"jsii-calc.module2702.Class2",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewClass2_Override(c Class2) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2702.Class2",
		nil, // no parameters
		c,
	)
}

// Returns: the name of the class (to verify native type names are created for derived classes).
func (c *jsiiProxy_Class2) TypeName() interface{} {
	return _jsii_.Invoke[interface{}](
		c,
		"typeName",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Class2 from an Option[Class2].
// You should never need to call this method directly.
func (j jsiiProxy_Class2) FromOption__() Class2 {
	var j_ Class2 = &j
	return j_
}

type Class3 interface {
	jcb.IBaseInterface
	Bar()
	Foo()
	IBaseInterface()
}

// The jsii proxy struct for Class3
type jsiiProxy_Class3 struct {
	internal.Type__jcbIBaseInterface
}

func NewClass3() Class3 {
	_init_.Initialize()

	j := jsiiProxy_Class3{}

	_jsii_.Create(
		"jsii-calc.module2702.Class3",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewClass3_Override(c Class3) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2702.Class3",
		nil, // no parameters
		c,
	)
}

func (c *jsiiProxy_Class3) Bar() {
	_jsii_.InvokeVoid(
		c,
		"bar",
		nil, // no parameters
	)
}

func (c *jsiiProxy_Class3) Foo() {
	_jsii_.InvokeVoid(
		c,
		"foo",
		nil, // no parameters
	)
}

func (c *jsiiProxy_Class3) IBaseInterface() {
	_jsii_.InvokeVoid(
		c,
		"iBaseInterface",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Class3 from an Option[Class3].
// You should never need to call this method directly.
func (j jsiiProxy_Class3) FromOption__() Class3 {
	var j_ Class3 = &j
	return j_
}

type Construct interface {
	IConstruct
	ConstructMethod()
}

// The jsii proxy struct for Construct
type jsiiProxy_Construct struct {
	jsiiProxy_IConstruct
}

func NewConstruct() Construct {
	_init_.Initialize()

	j := jsiiProxy_Construct{}

	_jsii_.Create(
		"jsii-calc.module2702.Construct",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewConstruct_Override(c Construct) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2702.Construct",
		nil, // no parameters
		c,
	)
}

func (c *jsiiProxy_Construct) ConstructMethod() {
	_jsii_.InvokeVoid(
		c,
		"constructMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Construct from an Option[Construct].
// You should never need to call this method directly.
func (j jsiiProxy_Construct) FromOption__() Construct {
	var j_ Construct = &j
	return j_
}

type IBaz interface {
	jcb.IBaseInterface
	BazMethod()
}

// The jsii proxy for IBaz
type jsiiProxy_IBaz struct {
	internal.Type__jcbIBaseInterface
}

func (i *jsiiProxy_IBaz) BazMethod() {
	_jsii_.InvokeVoid(
		i,
		"bazMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IBaz from an Option[IBaz].
// You should never need to call this method directly.
func (j jsiiProxy_IBaz) FromOption__() IBaz {
	var j_ IBaz = &j
	return j_
}

type IConstruct interface {
	ConstructMethod()
}

// The jsii proxy for IConstruct
type jsiiProxy_IConstruct struct {
	_ byte // padding
}

func (i *jsiiProxy_IConstruct) ConstructMethod() {
	_jsii_.InvokeVoid(
		i,
		"constructMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IConstruct from an Option[IConstruct].
// You should never need to call this method directly.
func (j jsiiProxy_IConstruct) FromOption__() IConstruct {
	var j_ IConstruct = &j
	return j_
}

type IFoo interface {
	jcb.IBaseInterface
	IBaseInterface() _api_.String
}

// The jsii proxy for IFoo
type jsiiProxy_IFoo struct {
	internal.Type__jcbIBaseInterface
}

func (j *jsiiProxy_IFoo) IBaseInterface() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"iBaseInterface",
	)
}

// FromOption__ unwraps an IFoo from an Option[IFoo].
// You should never need to call this method directly.
func (j jsiiProxy_IFoo) FromOption__() IFoo {
	var j_ IFoo = &j
	return j_
}

type IResource interface {
	IConstruct
	ResourceMethod()
}

// The jsii proxy for IResource
type jsiiProxy_IResource struct {
	jsiiProxy_IConstruct
}

func (i *jsiiProxy_IResource) ResourceMethod() {
	_jsii_.InvokeVoid(
		i,
		"resourceMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IResource from an Option[IResource].
// You should never need to call this method directly.
func (j jsiiProxy_IResource) FromOption__() IResource {
	var j_ IResource = &j
	return j_
}

type IVpc interface {
	IResource
	VpcMethod()
}

// The jsii proxy for IVpc
type jsiiProxy_IVpc struct {
	jsiiProxy_IResource
}

func (i *jsiiProxy_IVpc) VpcMethod() {
	_jsii_.InvokeVoid(
		i,
		"vpcMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an IVpc from an Option[IVpc].
// You should never need to call this method directly.
func (j jsiiProxy_IVpc) FromOption__() IVpc {
	var j_ IVpc = &j
	return j_
}

type Resource interface {
	Construct
	IResource
	ConstructMethod()
	ResourceMethod()
}

// The jsii proxy struct for Resource
type jsiiProxy_Resource struct {
	jsiiProxy_Construct
	jsiiProxy_IResource
}

func NewResource_Override(r Resource) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2702.Resource",
		nil, // no parameters
		r,
	)
}

func (r *jsiiProxy_Resource) ConstructMethod() {
	_jsii_.InvokeVoid(
		r,
		"constructMethod",
		nil, // no parameters
	)
}

func (r *jsiiProxy_Resource) ResourceMethod() {
	_jsii_.InvokeVoid(
		r,
		"resourceMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Resource from an Option[Resource].
// You should never need to call this method directly.
func (j jsiiProxy_Resource) FromOption__() Resource {
	var j_ Resource = &j
	return j_
}

type Vpc interface {
	Resource
	IVpc
	ConstructMethod()
	ResourceMethod()
	VpcMethod()
}

// The jsii proxy struct for Vpc
type jsiiProxy_Vpc struct {
	jsiiProxy_Resource
	jsiiProxy_IVpc
}

func NewVpc() Vpc {
	_init_.Initialize()

	j := jsiiProxy_Vpc{}

	_jsii_.Create(
		"jsii-calc.module2702.Vpc",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewVpc_Override(v Vpc) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.module2702.Vpc",
		nil, // no parameters
		v,
	)
}

func (v *jsiiProxy_Vpc) ConstructMethod() {
	_jsii_.InvokeVoid(
		v,
		"constructMethod",
		nil, // no parameters
	)
}

func (v *jsiiProxy_Vpc) ResourceMethod() {
	_jsii_.InvokeVoid(
		v,
		"resourceMethod",
		nil, // no parameters
	)
}

func (v *jsiiProxy_Vpc) VpcMethod() {
	_jsii_.InvokeVoid(
		v,
		"vpcMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an Vpc from an Option[Vpc].
// You should never need to call this method directly.
func (j jsiiProxy_Vpc) FromOption__() Vpc {
	var j_ Vpc = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/module2702/module2702.init.go 1`] = `
package module2702

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterClass[Baz](
		"jsii-calc.module2702.Baz",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberMethod{JsiiMethod: "bazMethod", GoMethod: "BazMethod"},
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
			_jsii_.MemberMethod{JsiiMethod: "iBaseInterface", GoMethod: "IBaseInterface"},
		},
		func() interface{} {
			j := jsiiProxy_Baz{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_Class3)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IBaz)
			return &j
		},
	)
	_jsii_.RegisterClass[Class1](
		"jsii-calc.module2702.Class1",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "base", GoMethod: "Base"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
		},
		func() interface{} {
			j := jsiiProxy_Class1{}
			_jsii_.InitJsiiProxy(&j.Type__jcbBase)
			return &j
		},
	)
	_jsii_.RegisterClass[Class2](
		"jsii-calc.module2702.Class2",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "base", GoGetter: "Base"},
			_jsii_.MemberMethod{JsiiMethod: "typeName", GoMethod: "TypeName"},
		},
		func() interface{} {
			j := jsiiProxy_Class2{}
			_jsii_.InitJsiiProxy(&j.Type__jcbBase)
			return &j
		},
	)
	_jsii_.RegisterClass[Class3](
		"jsii-calc.module2702.Class3",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
			_jsii_.MemberMethod{JsiiMethod: "iBaseInterface", GoMethod: "IBaseInterface"},
		},
		func() interface{} {
			j := jsiiProxy_Class3{}
			_jsii_.InitJsiiProxy(&j.Type__jcbIBaseInterface)
			return &j
		},
	)
	_jsii_.RegisterClass[Construct](
		"jsii-calc.module2702.Construct",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "constructMethod", GoMethod: "ConstructMethod"},
		},
		func() interface{} {
			j := jsiiProxy_Construct{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IConstruct)
			return &j
		},
	)
	_jsii_.RegisterInterface[IBaz](
		"jsii-calc.module2702.IBaz",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberMethod{JsiiMethod: "bazMethod", GoMethod: "BazMethod"},
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
		},
		func() interface{} {
			j := jsiiProxy_IBaz{}
			_jsii_.InitJsiiProxy(&j.Type__jcbIBaseInterface)
			return &j
		},
	)
	_jsii_.RegisterInterface[IConstruct](
		"jsii-calc.module2702.IConstruct",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "constructMethod", GoMethod: "ConstructMethod"},
		},
		func() interface{} {
			return &jsiiProxy_IConstruct{}
		},
	)
	_jsii_.RegisterInterface[IFoo](
		"jsii-calc.module2702.IFoo",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "bar", GoMethod: "Bar"},
			_jsii_.MemberMethod{JsiiMethod: "foo", GoMethod: "Foo"},
			_jsii_.MemberProperty{JsiiProperty: "iBaseInterface", GoGetter: "IBaseInterface"},
		},
		func() interface{} {
			j := jsiiProxy_IFoo{}
			_jsii_.InitJsiiProxy(&j.Type__jcbIBaseInterface)
			return &j
		},
	)
	_jsii_.RegisterInterface[IResource](
		"jsii-calc.module2702.IResource",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "constructMethod", GoMethod: "ConstructMethod"},
			_jsii_.MemberMethod{JsiiMethod: "resourceMethod", GoMethod: "ResourceMethod"},
		},
		func() interface{} {
			j := jsiiProxy_IResource{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IConstruct)
			return &j
		},
	)
	_jsii_.RegisterInterface[IVpc](
		"jsii-calc.module2702.IVpc",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "constructMethod", GoMethod: "ConstructMethod"},
			_jsii_.MemberMethod{JsiiMethod: "resourceMethod", GoMethod: "ResourceMethod"},
			_jsii_.MemberMethod{JsiiMethod: "vpcMethod", GoMethod: "VpcMethod"},
		},
		func() interface{} {
			j := jsiiProxy_IVpc{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IResource)
			return &j
		},
	)
	_jsii_.RegisterClass[Resource](
		"jsii-calc.module2702.Resource",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "constructMethod", GoMethod: "ConstructMethod"},
			_jsii_.MemberMethod{JsiiMethod: "resourceMethod", GoMethod: "ResourceMethod"},
		},
		func() interface{} {
			j := jsiiProxy_Resource{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_Construct)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IResource)
			return &j
		},
	)
	_jsii_.RegisterClass[Vpc](
		"jsii-calc.module2702.Vpc",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "constructMethod", GoMethod: "ConstructMethod"},
			_jsii_.MemberMethod{JsiiMethod: "resourceMethod", GoMethod: "ResourceMethod"},
			_jsii_.MemberMethod{JsiiMethod: "vpcMethod", GoMethod: "VpcMethod"},
		},
		func() interface{} {
			j := jsiiProxy_Vpc{}
			_jsii_.InitJsiiProxy(&j.jsiiProxy_Resource)
			_jsii_.InitJsiiProxy(&j.jsiiProxy_IVpc)
			return &j
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/nodirect/nodirect.go 1`] = `
package nodirect



`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/nodirect/sub1/sub1.go 1`] = `
package sub1

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

type TypeFromSub1 interface {
	Sub1() _api_.String
}

// The jsii proxy struct for TypeFromSub1
type jsiiProxy_TypeFromSub1 struct {
	_ byte // padding
}

func NewTypeFromSub1() TypeFromSub1 {
	_init_.Initialize()

	j := jsiiProxy_TypeFromSub1{}

	_jsii_.Create(
		"jsii-calc.nodirect.sub1.TypeFromSub1",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewTypeFromSub1_Override(t TypeFromSub1) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.nodirect.sub1.TypeFromSub1",
		nil, // no parameters
		t,
	)
}

func (t *jsiiProxy_TypeFromSub1) Sub1() _api_.String {
	return _jsii_.Invoke[_api_.String](
		t,
		"sub1",
		nil, // no parameters
	)
}

// FromOption__ unwraps an TypeFromSub1 from an Option[TypeFromSub1].
// You should never need to call this method directly.
func (j jsiiProxy_TypeFromSub1) FromOption__() TypeFromSub1 {
	var j_ TypeFromSub1 = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/nodirect/sub1/sub1.init.go 1`] = `
package sub1

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[TypeFromSub1](
		"jsii-calc.nodirect.sub1.TypeFromSub1",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "sub1", GoMethod: "Sub1"},
		},
		func() interface{} {
			return &jsiiProxy_TypeFromSub1{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/nodirect/sub2/sub2.go 1`] = `
package sub2

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

type TypeFromSub2 interface {
	Sub2() _api_.String
}

// The jsii proxy struct for TypeFromSub2
type jsiiProxy_TypeFromSub2 struct {
	_ byte // padding
}

func NewTypeFromSub2() TypeFromSub2 {
	_init_.Initialize()

	j := jsiiProxy_TypeFromSub2{}

	_jsii_.Create(
		"jsii-calc.nodirect.sub2.TypeFromSub2",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewTypeFromSub2_Override(t TypeFromSub2) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.nodirect.sub2.TypeFromSub2",
		nil, // no parameters
		t,
	)
}

func (t *jsiiProxy_TypeFromSub2) Sub2() _api_.String {
	return _jsii_.Invoke[_api_.String](
		t,
		"sub2",
		nil, // no parameters
	)
}

// FromOption__ unwraps an TypeFromSub2 from an Option[TypeFromSub2].
// You should never need to call this method directly.
func (j jsiiProxy_TypeFromSub2) FromOption__() TypeFromSub2 {
	var j_ TypeFromSub2 = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/nodirect/sub2/sub2.init.go 1`] = `
package sub2

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[TypeFromSub2](
		"jsii-calc.nodirect.sub2.TypeFromSub2",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "sub2", GoMethod: "Sub2"},
		},
		func() interface{} {
			return &jsiiProxy_TypeFromSub2{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/onlystatic/onlystatic.go 1`] = `
package onlystatic

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

// Test for https://github.com/aws/jsii/issues/2617.
type OnlyStaticMethods interface {
}

// The jsii proxy struct for OnlyStaticMethods
type jsiiProxy_OnlyStaticMethods struct {
	_ byte // padding
}

func OnlyStaticMethods_StaticMethod() _api_.String {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.String](
		"jsii-calc.onlystatic.OnlyStaticMethods",
		"staticMethod",
		nil, // no parameters
	)
}

// FromOption__ unwraps an OnlyStaticMethods from an Option[OnlyStaticMethods].
// You should never need to call this method directly.
func (j jsiiProxy_OnlyStaticMethods) FromOption__() OnlyStaticMethods {
	var j_ OnlyStaticMethods = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/onlystatic/onlystatic.init.go 1`] = `
package onlystatic

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[OnlyStaticMethods](
		"jsii-calc.onlystatic.OnlyStaticMethods",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_OnlyStaticMethods{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/pythonself/pythonself.go 1`] = `
package pythonself

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

type ClassWithSelf interface {
	Self() _api_.String
	Method(self _api_.Number) _api_.String
}

// The jsii proxy struct for ClassWithSelf
type jsiiProxy_ClassWithSelf struct {
	_ byte // padding
}

func (j *jsiiProxy_ClassWithSelf) Self() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"self",
	)
}


func NewClassWithSelf(self _api_.String) ClassWithSelf {
	_init_.Initialize()

	j := jsiiProxy_ClassWithSelf{}

	_jsii_.Create(
		"jsii-calc.PythonSelf.ClassWithSelf",
		[]interface{}{self},
		&j,
	)

	return &j
}

func NewClassWithSelf_Override(c ClassWithSelf, self _api_.String) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.PythonSelf.ClassWithSelf",
		[]interface{}{self},
		c,
	)
}

func (c *jsiiProxy_ClassWithSelf) Method(self _api_.Number) _api_.String {
	return _jsii_.Invoke[_api_.String](
		c,
		"method",
		[]interface{}{self},
	)
}

// FromOption__ unwraps an ClassWithSelf from an Option[ClassWithSelf].
// You should never need to call this method directly.
func (j jsiiProxy_ClassWithSelf) FromOption__() ClassWithSelf {
	var j_ ClassWithSelf = &j
	return j_
}

type ClassWithSelfKwarg interface {
	Props() StructWithSelf
}

// The jsii proxy struct for ClassWithSelfKwarg
type jsiiProxy_ClassWithSelfKwarg struct {
	_ byte // padding
}

func (j *jsiiProxy_ClassWithSelfKwarg) Props() StructWithSelf {
	return _jsii_.Get[StructWithSelf](
		j,
		"props",
	)
}


func NewClassWithSelfKwarg(props StructWithSelf) ClassWithSelfKwarg {
	_init_.Initialize()

	j := jsiiProxy_ClassWithSelfKwarg{}

	_jsii_.Create(
		"jsii-calc.PythonSelf.ClassWithSelfKwarg",
		[]interface{}{props},
		&j,
	)

	return &j
}

func NewClassWithSelfKwarg_Override(c ClassWithSelfKwarg, props StructWithSelf) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.PythonSelf.ClassWithSelfKwarg",
		[]interface{}{props},
		c,
	)
}

// FromOption__ unwraps an ClassWithSelfKwarg from an Option[ClassWithSelfKwarg].
// You should never need to call this method directly.
func (j jsiiProxy_ClassWithSelfKwarg) FromOption__() ClassWithSelfKwarg {
	var j_ ClassWithSelfKwarg = &j
	return j_
}

type IInterfaceWithSelf interface {
	Method(self _api_.Number) _api_.String
}

// The jsii proxy for IInterfaceWithSelf
type jsiiProxy_IInterfaceWithSelf struct {
	_ byte // padding
}

func (i *jsiiProxy_IInterfaceWithSelf) Method(self _api_.Number) _api_.String {
	return _jsii_.Invoke[_api_.String](
		i,
		"method",
		[]interface{}{self},
	)
}

// FromOption__ unwraps an IInterfaceWithSelf from an Option[IInterfaceWithSelf].
// You should never need to call this method directly.
func (j jsiiProxy_IInterfaceWithSelf) FromOption__() IInterfaceWithSelf {
	var j_ IInterfaceWithSelf = &j
	return j_
}

type StructWithSelf struct {
	Self _api_.String \`json:"self"\`
}

// FromOption__ unwraps an StructWithSelf from an Option[StructWithSelf].
// You should never need to call this method directly.
func (s StructWithSelf) FromOption__() StructWithSelf {
	return s
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/pythonself/pythonself.init.go 1`] = `
package pythonself

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterClass[ClassWithSelf](
		"jsii-calc.PythonSelf.ClassWithSelf",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
			_jsii_.MemberProperty{JsiiProperty: "self", GoGetter: "Self"},
		},
		func() interface{} {
			return &jsiiProxy_ClassWithSelf{}
		},
	)
	_jsii_.RegisterClass[ClassWithSelfKwarg](
		"jsii-calc.PythonSelf.ClassWithSelfKwarg",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "props", GoGetter: "Props"},
		},
		func() interface{} {
			return &jsiiProxy_ClassWithSelfKwarg{}
		},
	)
	_jsii_.RegisterInterface[IInterfaceWithSelf](
		"jsii-calc.PythonSelf.IInterfaceWithSelf",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "method", GoMethod: "Method"},
		},
		func() interface{} {
			return &jsiiProxy_IInterfaceWithSelf{}
		},
	)
	_jsii_.RegisterStruct[StructWithSelf](
		"jsii-calc.PythonSelf.StructWithSelf",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/backreferences/backreferences.go 1`] = `
package backreferences

import (
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule"
)

type MyClassReference struct {
	Reference submodule.MyClass \`json:"reference"\`
}

// FromOption__ unwraps an MyClassReference from an Option[MyClassReference].
// You should never need to call this method directly.
func (m MyClassReference) FromOption__() MyClassReference {
	return m
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/backreferences/backreferences.init.go 1`] = `
package backreferences

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterStruct[MyClassReference](
		"jsii-calc.submodule.back_references.MyClassReference",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/child/child.go 1`] = `
package child

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

type Awesomeness string

const (
	Awesomeness_AWESOME Awesomeness = "AWESOME"
)

// FromOption__ unwraps an Awesomeness from an Option[Awesomeness].
// You should never need to call this method directly.
func (a Awesomeness) FromOption__() Awesomeness {
	return a
}

type Goodness string

const (
	Goodness_PRETTY_GOOD Goodness = "PRETTY_GOOD"
	Goodness_REALLY_GOOD Goodness = "REALLY_GOOD"
	Goodness_AMAZINGLY_GOOD Goodness = "AMAZINGLY_GOOD"
)

// FromOption__ unwraps an Goodness from an Option[Goodness].
// You should never need to call this method directly.
func (g Goodness) FromOption__() Goodness {
	return g
}

type InnerClass interface {
}

// The jsii proxy struct for InnerClass
type jsiiProxy_InnerClass struct {
	_ byte // padding
}

func NewInnerClass() InnerClass {
	_init_.Initialize()

	j := jsiiProxy_InnerClass{}

	_jsii_.Create(
		"jsii-calc.submodule.child.InnerClass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewInnerClass_Override(i InnerClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.submodule.child.InnerClass",
		nil, // no parameters
		i,
	)
}

func InnerClass_StaticProp() SomeStruct {
	_init_.Initialize()
	return _jsii_.StaticGet[SomeStruct](
		"jsii-calc.submodule.child.InnerClass",
		"staticProp",
	)
}

// FromOption__ unwraps an InnerClass from an Option[InnerClass].
// You should never need to call this method directly.
func (j jsiiProxy_InnerClass) FromOption__() InnerClass {
	var j_ InnerClass = &j
	return j_
}

type KwargsProps struct {
	Prop SomeEnum \`json:"prop"\`
	Extra _api_.Option[_api_.String] \`json:"extra"\`
}

// FromOption__ unwraps an KwargsProps from an Option[KwargsProps].
// You should never need to call this method directly.
func (k KwargsProps) FromOption__() KwargsProps {
	return k
}

// Checks that classes can self-reference during initialization.
// See: : https://github.com/aws/jsii/pull/1706
//
type OuterClass interface {
	InnerClass() InnerClass
}

// The jsii proxy struct for OuterClass
type jsiiProxy_OuterClass struct {
	_ byte // padding
}

func (j *jsiiProxy_OuterClass) InnerClass() InnerClass {
	return _jsii_.Get[InnerClass](
		j,
		"innerClass",
	)
}


func NewOuterClass() OuterClass {
	_init_.Initialize()

	j := jsiiProxy_OuterClass{}

	_jsii_.Create(
		"jsii-calc.submodule.child.OuterClass",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewOuterClass_Override(o OuterClass) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.submodule.child.OuterClass",
		nil, // no parameters
		o,
	)
}

// FromOption__ unwraps an OuterClass from an Option[OuterClass].
// You should never need to call this method directly.
func (j jsiiProxy_OuterClass) FromOption__() OuterClass {
	var j_ OuterClass = &j
	return j_
}

type SomeEnum string

const (
	SomeEnum_SOME SomeEnum = "SOME"
)

// FromOption__ unwraps an SomeEnum from an Option[SomeEnum].
// You should never need to call this method directly.
func (s SomeEnum) FromOption__() SomeEnum {
	return s
}

type SomeStruct struct {
	Prop SomeEnum \`json:"prop"\`
}

// FromOption__ unwraps an SomeStruct from an Option[SomeStruct].
// You should never need to call this method directly.
func (s SomeStruct) FromOption__() SomeStruct {
	return s
}

type Structure struct {
	Bool _api_.Bool \`json:"bool"\`
}

// FromOption__ unwraps an Structure from an Option[Structure].
// You should never need to call this method directly.
func (s Structure) FromOption__() Structure {
	return s
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/child/child.init.go 1`] = `
package child

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterEnum[Awesomeness](
		"jsii-calc.submodule.child.Awesomeness",
		_init_.Initialize,
		map[string]interface{}{
			"AWESOME": Awesomeness_AWESOME,
		},
	)
	_jsii_.RegisterEnum[Goodness](
		"jsii-calc.submodule.child.Goodness",
		_init_.Initialize,
		map[string]interface{}{
			"PRETTY_GOOD": Goodness_PRETTY_GOOD,
			"REALLY_GOOD": Goodness_REALLY_GOOD,
			"AMAZINGLY_GOOD": Goodness_AMAZINGLY_GOOD,
		},
	)
	_jsii_.RegisterClass[InnerClass](
		"jsii-calc.submodule.child.InnerClass",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_InnerClass{}
		},
	)
	_jsii_.RegisterStruct[KwargsProps](
		"jsii-calc.submodule.child.KwargsProps",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[OuterClass](
		"jsii-calc.submodule.child.OuterClass",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "innerClass", GoGetter: "InnerClass"},
		},
		func() interface{} {
			return &jsiiProxy_OuterClass{}
		},
	)
	_jsii_.RegisterEnum[SomeEnum](
		"jsii-calc.submodule.child.SomeEnum",
		_init_.Initialize,
		map[string]interface{}{
			"SOME": SomeEnum_SOME,
		},
	)
	_jsii_.RegisterStruct[SomeStruct](
		"jsii-calc.submodule.child.SomeStruct",
		_init_.Initialize,
	)
	_jsii_.RegisterStruct[Structure](
		"jsii-calc.submodule.child.Structure",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/internal/types.go 1`] = `
package internal
import (
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/nestedsubmodule/deeplynested"
)
type Type__deeplynestedINamespaced = deeplynested.INamespaced

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/isolated/isolated.go 1`] = `
package isolated

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/child"
)

// Ensures imports are correctly registered for kwargs lifted properties from super-structs.
type Kwargs interface {
}

// The jsii proxy struct for Kwargs
type jsiiProxy_Kwargs struct {
	_ byte // padding
}

func Kwargs_Method(props _api_.Option[child.KwargsProps]) _api_.Bool {
	_init_.Initialize()

	return _jsii_.StaticInvoke[_api_.Bool](
		"jsii-calc.submodule.isolated.Kwargs",
		"method",
		[]interface{}{props},
	)
}

// FromOption__ unwraps an Kwargs from an Option[Kwargs].
// You should never need to call this method directly.
func (j jsiiProxy_Kwargs) FromOption__() Kwargs {
	var j_ Kwargs = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/isolated/isolated.init.go 1`] = `
package isolated

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[Kwargs](
		"jsii-calc.submodule.isolated.Kwargs",
		nil, // no members
		func() interface{} {
			return &jsiiProxy_Kwargs{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/nestedsubmodule/deeplynested/deeplynested.go 1`] = `
package deeplynested

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

type INamespaced interface {
	DefinedAt() _api_.String
}

// The jsii proxy for INamespaced
type jsiiProxy_INamespaced struct {
	_ byte // padding
}

func (j *jsiiProxy_INamespaced) DefinedAt() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"definedAt",
	)
}

// FromOption__ unwraps an INamespaced from an Option[INamespaced].
// You should never need to call this method directly.
func (j jsiiProxy_INamespaced) FromOption__() INamespaced {
	var j_ INamespaced = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/nestedsubmodule/deeplynested/deeplynested.init.go 1`] = `
package deeplynested

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterInterface[INamespaced](
		"jsii-calc.submodule.nested_submodule.deeplyNested.INamespaced",
		_init_.Initialize,
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "definedAt", GoGetter: "DefinedAt"},
		},
		func() interface{} {
			return &jsiiProxy_INamespaced{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/nestedsubmodule/internal/types.go 1`] = `
package internal
import (
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/nestedsubmodule/deeplynested"
)
type Type__deeplynestedINamespaced = deeplynested.INamespaced

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/nestedsubmodule/nestedsubmodule.go 1`] = `
package nestedsubmodule

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"

	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/child"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/nestedsubmodule/deeplynested"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/nestedsubmodule/internal"
)

type Namespaced interface {
	deeplynested.INamespaced
	DefinedAt() _api_.String
	Goodness() child.Goodness
}

// The jsii proxy struct for Namespaced
type jsiiProxy_Namespaced struct {
	internal.Type__deeplynestedINamespaced
}

func (j *jsiiProxy_Namespaced) DefinedAt() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"definedAt",
	)
}

func (j *jsiiProxy_Namespaced) Goodness() child.Goodness {
	return _jsii_.Get[child.Goodness](
		j,
		"goodness",
	)
}


// FromOption__ unwraps an Namespaced from an Option[Namespaced].
// You should never need to call this method directly.
func (j jsiiProxy_Namespaced) FromOption__() Namespaced {
	var j_ Namespaced = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/nestedsubmodule/nestedsubmodule.init.go 1`] = `
package nestedsubmodule

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[Namespaced](
		"jsii-calc.submodule.nested_submodule.Namespaced",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "definedAt", GoGetter: "DefinedAt"},
			_jsii_.MemberProperty{JsiiProperty: "goodness", GoGetter: "Goodness"},
		},
		func() interface{} {
			j := jsiiProxy_Namespaced{}
			_jsii_.InitJsiiProxy(&j.Type__deeplynestedINamespaced)
			return &j
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/param/param.go 1`] = `
package param

import (
	_api_ "github.com/aws/jsii-runtime-go"
)

type SpecialParameter struct {
	Value _api_.String \`json:"value"\`
}

// FromOption__ unwraps an SpecialParameter from an Option[SpecialParameter].
// You should never need to call this method directly.
func (s SpecialParameter) FromOption__() SpecialParameter {
	return s
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/param/param.init.go 1`] = `
package param

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterStruct[SpecialParameter](
		"jsii-calc.submodule.param.SpecialParameter",
		_init_.Initialize,
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/returnsparam/returnsparam.go 1`] = `
package returnsparam

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/param"
)

type ReturnsSpecialParameter interface {
	ReturnsSpecialParam() param.SpecialParameter
}

// The jsii proxy struct for ReturnsSpecialParameter
type jsiiProxy_ReturnsSpecialParameter struct {
	_ byte // padding
}

func NewReturnsSpecialParameter() ReturnsSpecialParameter {
	_init_.Initialize()

	j := jsiiProxy_ReturnsSpecialParameter{}

	_jsii_.Create(
		"jsii-calc.submodule.returnsparam.ReturnsSpecialParameter",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewReturnsSpecialParameter_Override(r ReturnsSpecialParameter) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.submodule.returnsparam.ReturnsSpecialParameter",
		nil, // no parameters
		r,
	)
}

func (r *jsiiProxy_ReturnsSpecialParameter) ReturnsSpecialParam() param.SpecialParameter {
	return _jsii_.Invoke[param.SpecialParameter](
		r,
		"returnsSpecialParam",
		nil, // no parameters
	)
}

// FromOption__ unwraps an ReturnsSpecialParameter from an Option[ReturnsSpecialParameter].
// You should never need to call this method directly.
func (j jsiiProxy_ReturnsSpecialParameter) FromOption__() ReturnsSpecialParameter {
	var j_ ReturnsSpecialParameter = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/returnsparam/returnsparam.init.go 1`] = `
package returnsparam

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
)

func init() {
	_jsii_.RegisterClass[ReturnsSpecialParameter](
		"jsii-calc.submodule.returnsparam.ReturnsSpecialParameter",
		[]_jsii_.Member{
			_jsii_.MemberMethod{JsiiMethod: "returnsSpecialParam", GoMethod: "ReturnsSpecialParam"},
		},
		func() interface{} {
			return &jsiiProxy_ReturnsSpecialParameter{}
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/submodule.go 1`] = `
package submodule

import (
	_api_  "github.com/aws/jsii-runtime-go"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"

	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/child"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/internal"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/nestedsubmodule/deeplynested"
	"github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/submodule/param"
)

// A struct named "Default".
// See: https://github.com/aws/jsii/issues/2637
//
type Default struct {
	Foo _api_.Number \`json:"foo"\`
}

// FromOption__ unwraps an Default from an Option[Default].
// You should never need to call this method directly.
func (d Default) FromOption__() Default {
	return d
}

type MyClass interface {
	deeplynested.INamespaced
	AllTypes() _api_.Option[jsiicalc.AllTypes]
	SetAllTypes(val _api_.Option[jsiicalc.AllTypes])
	Awesomeness() child.Awesomeness
	DefinedAt() _api_.String
	Goodness() child.Goodness
	Props() child.SomeStruct
	MethodWithSpecialParam(param param.SpecialParameter) _api_.String
}

// The jsii proxy struct for MyClass
type jsiiProxy_MyClass struct {
	internal.Type__deeplynestedINamespaced
}

func (j *jsiiProxy_MyClass) AllTypes() _api_.Option[jsiicalc.AllTypes] {
	return _jsii_.Get[_api_.Option[jsiicalc.AllTypes]](
		j,
		"allTypes",
	)
}

func (j *jsiiProxy_MyClass) Awesomeness() child.Awesomeness {
	return _jsii_.Get[child.Awesomeness](
		j,
		"awesomeness",
	)
}

func (j *jsiiProxy_MyClass) DefinedAt() _api_.String {
	return _jsii_.Get[_api_.String](
		j,
		"definedAt",
	)
}

func (j *jsiiProxy_MyClass) Goodness() child.Goodness {
	return _jsii_.Get[child.Goodness](
		j,
		"goodness",
	)
}

func (j *jsiiProxy_MyClass) Props() child.SomeStruct {
	return _jsii_.Get[child.SomeStruct](
		j,
		"props",
	)
}


func NewMyClass(props child.SomeStruct) MyClass {
	_init_.Initialize()

	j := jsiiProxy_MyClass{}

	_jsii_.Create(
		"jsii-calc.submodule.MyClass",
		[]interface{}{props},
		&j,
	)

	return &j
}

func NewMyClass_Override(m MyClass, props child.SomeStruct) {
	_init_.Initialize()

	_jsii_.Create(
		"jsii-calc.submodule.MyClass",
		[]interface{}{props},
		m,
	)
}

func (j *jsiiProxy_MyClass) SetAllTypes(val _api_.Option[jsiicalc.AllTypes]) {
	_jsii_.Set(
		j,
		"allTypes",
		val,
	)
}

func (m *jsiiProxy_MyClass) MethodWithSpecialParam(param param.SpecialParameter) _api_.String {
	return _jsii_.Invoke[_api_.String](
		m,
		"methodWithSpecialParam",
		[]interface{}{param},
	)
}

// FromOption__ unwraps an MyClass from an Option[MyClass].
// You should never need to call this method directly.
func (j jsiiProxy_MyClass) FromOption__() MyClass {
	var j_ MyClass = &j
	return j_
}


`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/submodule/submodule.init.go 1`] = `
package submodule

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/aws/jsii/jsii-calc/go/jsiicalc/v3/jsii"
)

func init() {
	_jsii_.RegisterStruct[Default](
		"jsii-calc.submodule.Default",
		_init_.Initialize,
	)
	_jsii_.RegisterClass[MyClass](
		"jsii-calc.submodule.MyClass",
		[]_jsii_.Member{
			_jsii_.MemberProperty{JsiiProperty: "allTypes", GoGetter: "AllTypes"},
			_jsii_.MemberProperty{JsiiProperty: "awesomeness", GoGetter: "Awesomeness"},
			_jsii_.MemberProperty{JsiiProperty: "definedAt", GoGetter: "DefinedAt"},
			_jsii_.MemberProperty{JsiiProperty: "goodness", GoGetter: "Goodness"},
			_jsii_.MemberMethod{JsiiMethod: "methodWithSpecialParam", GoMethod: "MethodWithSpecialParam"},
			_jsii_.MemberProperty{JsiiProperty: "props", GoGetter: "Props"},
		},
		func() interface{} {
			j := jsiiProxy_MyClass{}
			_jsii_.InitJsiiProxy(&j.Type__deeplynestedINamespaced)
			return &j
		},
	)
}

`;

exports[`Generated code for "jsii-calc": <outDir>/go/jsiicalc/version 1`] = `
3.20.120

`;
